{"id":"547264fb2f5803341941396ff5eef77e","_format":"hh-sol-build-info-1","solcVersion":"0.6.12","solcLongVersion":"0.6.12+commit.27d51765","input":{"language":"Solidity","sources":{"contracts/happyShibEth.sol":{"content":"/**\r\n\r\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \r\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \r\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\__/| $$$$$$$  /$$| $$$$$$$       \r\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \r\n| $$__  $$  /$$$$$$$| $$  \\ $$| $$  \\ $$| $$  | $$       \\____  $$| $$  \\ $$| $$| $$  \\ $$      \r\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\ $$| $$  | $$| $$| $$  | $$      \r\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \r\n|__/  |__/ \\_______/| $$____/ | $$____/  \\____  $$       \\______/ |__/  |__/|__/|_______/       \r\n                    | $$      | $$       /$$  | $$                                              \r\n                    | $$      | $$      |  $$$$$$/                                              \r\n                    |__/      |__/       \\______/                                               \r\n\r\n\r\n\r\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\r\n\r\nFind us @ https://t.me/happyshibeth\r\n\r\n*/\r\n\r\n//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ninterface IPancakeSwapFactory {\r\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n        function feeTo() external view returns (address);\r\n        function feeToSetter() external view returns (address);\r\n\r\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n        function allPairs(uint) external view returns (address pair);\r\n        function allPairsLength() external view returns (uint);\r\n\r\n        function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n        function setFeeTo(address) external;\r\n        function setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IPancakeSwapPair {\r\n        event Approval(address indexed owner, address indexed spender, uint value);\r\n        event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n        function name() external pure returns (string memory);\r\n        function symbol() external pure returns (string memory);\r\n        function decimals() external pure returns (uint8);\r\n        function totalSupply() external view returns (uint);\r\n        function balanceOf(address owner) external view returns (uint);\r\n        function allowance(address owner, address spender) external view returns (uint);\r\n\r\n        function approve(address spender, uint value) external returns (bool);\r\n        function transfer(address to, uint value) external returns (bool);\r\n        function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n        function nonces(address owner) external view returns (uint);\r\n\r\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n        event Mint(address indexed sender, uint amount0, uint amount1);\r\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n        event Swap(\r\n                address indexed sender,\r\n                uint amount0In,\r\n                uint amount1In,\r\n                uint amount0Out,\r\n                uint amount1Out,\r\n                address indexed to\r\n        );\r\n        event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n        function factory() external view returns (address);\r\n        function token0() external view returns (address);\r\n        function token1() external view returns (address);\r\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n        function price0CumulativeLast() external view returns (uint);\r\n        function price1CumulativeLast() external view returns (uint);\r\n        function kLast() external view returns (uint);\r\n\r\n        function mint(address to) external returns (uint liquidity);\r\n        function burn(address to) external returns (uint amount0, uint amount1);\r\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n        function skim(address to) external;\r\n        function sync() external;\r\n\r\n        function initialize(address, address) external;\r\n}\r\n\r\ninterface IPancakeSwapRouter{\r\n        function factory() external pure returns (address);\r\n        function WETH() external pure returns (address);\r\n\r\n        function addLiquidity(\r\n                address tokenA,\r\n                address tokenB,\r\n                uint amountADesired,\r\n                uint amountBDesired,\r\n                uint amountAMin,\r\n                uint amountBMin,\r\n                address to,\r\n                uint deadline\r\n        ) external returns (uint amountA, uint amountB, uint liquidity);\r\n        function addLiquidityETH(\r\n                address token,\r\n                uint amountTokenDesired,\r\n                uint amountTokenMin,\r\n                uint amountETHMin,\r\n                address to,\r\n                uint deadline\r\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n        function removeLiquidity(\r\n                address tokenA,\r\n                address tokenB,\r\n                uint liquidity,\r\n                uint amountAMin,\r\n                uint amountBMin,\r\n                address to,\r\n                uint deadline\r\n        ) external returns (uint amountA, uint amountB);\r\n        function removeLiquidityETH(\r\n                address token,\r\n                uint liquidity,\r\n                uint amountTokenMin,\r\n                uint amountETHMin,\r\n                address to,\r\n                uint deadline\r\n        ) external returns (uint amountToken, uint amountETH);\r\n        function removeLiquidityWithPermit(\r\n                address tokenA,\r\n                address tokenB,\r\n                uint liquidity,\r\n                uint amountAMin,\r\n                uint amountBMin,\r\n                address to,\r\n                uint deadline,\r\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n        ) external returns (uint amountA, uint amountB);\r\n        function removeLiquidityETHWithPermit(\r\n                address token,\r\n                uint liquidity,\r\n                uint amountTokenMin,\r\n                uint amountETHMin,\r\n                address to,\r\n                uint deadline,\r\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n        ) external returns (uint amountToken, uint amountETH);\r\n        function swapExactTokensForTokens(\r\n                uint amountIn,\r\n                uint amountOutMin,\r\n                address[] calldata path,\r\n                address to,\r\n                uint deadline\r\n        ) external returns (uint[] memory amounts);\r\n        function swapTokensForExactTokens(\r\n                uint amountOut,\r\n                uint amountInMax,\r\n                address[] calldata path,\r\n                address to,\r\n                uint deadline\r\n        ) external returns (uint[] memory amounts);\r\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n                external\r\n                payable\r\n                returns (uint[] memory amounts);\r\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n                external\r\n                returns (uint[] memory amounts);\r\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n                external\r\n                returns (uint[] memory amounts);\r\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n                external\r\n                payable\r\n                returns (uint[] memory amounts);\r\n\r\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n            address token,\r\n            uint liquidity,\r\n            uint amountTokenMin,\r\n            uint amountETHMin,\r\n            address to,\r\n            uint deadline\r\n        ) external returns (uint amountETH);\r\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n            address token,\r\n            uint liquidity,\r\n            uint amountTokenMin,\r\n            uint amountETHMin,\r\n            address to,\r\n            uint deadline,\r\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n        ) external returns (uint amountETH);\r\n    \r\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n            uint amountIn,\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n        ) external;\r\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n        ) external payable;\r\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            uint amountIn,\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n        ) external;\r\n}\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor () internal { }\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n    /* --------- Access Control --------- */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n    * @dev Initializes the contract setting the deployer as the initial owner.\r\n    */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the address of the current owner.\r\n    */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Leaves the contract without owner. It will not be possible to call\r\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n    *\r\n    * NOTE: Renouncing ownership will leave the contract without an owner,\r\n    * thereby removing any functionality that is only available to the owner.\r\n    */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n    * Can only be called by the current owner.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n    */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n    /* --------- safe math --------- */\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Returns the addition of two unsigned integers, reverting on\r\n    * overflow.\r\n    *\r\n    * Counterpart to Solidity's `+` operator.\r\n    *\r\n    * Requirements:\r\n    * - Addition cannot overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the subtraction of two unsigned integers, reverting on\r\n    * overflow (when the result is negative).\r\n    *\r\n    * Counterpart to Solidity's `-` operator.\r\n    *\r\n    * Requirements:\r\n    * - Subtraction cannot overflow.\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n    * overflow (when the result is negative).\r\n    *\r\n    * Counterpart to Solidity's `-` operator.\r\n    *\r\n    * Requirements:\r\n    * - Subtraction cannot overflow.\r\n    */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the multiplication of two unsigned integers, reverting on\r\n    * overflow.\r\n    *\r\n    * Counterpart to Solidity's `*` operator.\r\n    *\r\n    * Requirements:\r\n    * - Multiplication cannot overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n        return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the integer division of two unsigned integers. Reverts on\r\n    * division by zero. The result is rounded towards zero.\r\n    *\r\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n    * uses an invalid opcode to revert (consuming all remaining gas).\r\n    *\r\n    * Requirements:\r\n    * - The divisor cannot be zero.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n    * division by zero. The result is rounded towards zero.\r\n    *\r\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n    * uses an invalid opcode to revert (consuming all remaining gas).\r\n    *\r\n    * Requirements:\r\n    * - The divisor cannot be zero.\r\n    */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n    * Reverts when dividing by zero.\r\n    *\r\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n    * invalid opcode to revert (consuming all remaining gas).\r\n    *\r\n    * Requirements:\r\n    * - The divisor cannot be zero.\r\n    */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n    * Reverts with custom message when dividing by zero.\r\n    *\r\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n    * invalid opcode to revert (consuming all remaining gas).\r\n    *\r\n    * Requirements:\r\n    * - The divisor cannot be zero.\r\n    */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract BALLS is  Context, Ownable  {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event SwapAndLiquify(\r\n        uint256 tokensSwapped,\r\n        uint256 ethReceived,\r\n        uint256 tokensIntoLiqudity\r\n    );\r\n\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner();\r\n        \r\n    }\r\n\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender,amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n \r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n    }\r\n\r\n    //////////////////////////////////////////////\r\n    /* ----------- special features ----------- */\r\n    //////////////////////////////////////////////\r\n\r\n    event ExcludeFromFee(address user, bool isExlcude);\r\n    event SetSellFee(Fees sellFees);\r\n    event SetBuyFee(Fees buyFees);\r\n    event SetBlackList(address user, bool isBlacklist);\r\n\r\n    struct Fees {\r\n        uint256 marketing;\r\n        uint256 gameWallet;\r\n        uint256 liquidity;\r\n        uint256 poolfee;\r\n    }\r\n\r\n    /* --------- special address info --------- */\r\n    address public marketingAddress;\r\n    address public gameAddress;\r\n    address public poolAddress;\r\n    address public babyPoolAddress;\r\n\r\n    /* --------- exchange info --------- */\r\n    IPancakeSwapRouter public PancakeSwapRouter;\r\n    address public PancakeSwapV2Pair;\r\n\r\n    bool inSwapAndLiquify;\r\n    modifier lockTheSwap {\r\n        inSwapAndLiquify = true;\r\n        _;\r\n        inSwapAndLiquify = false;\r\n    }\r\n\r\n    bool public swapAndLiquifyEnabled = true;\r\n    bool public tradingEnabled = true;\r\n\r\n    /* --------- buyFees info --------- */\r\n    Fees public sellFees;\r\n    Fees public buyFees;\r\n\r\n    mapping(address=>bool) isExcludeFromFee;\r\n    mapping(address=>bool) isExcludeFromLimit;\r\n\r\n    mapping(address => bool) blacklist;\r\n\r\n    /* --------- max tx info --------- */\r\n    uint public _maxTxAmount = 1e6 * 1e18;\r\n    uint public _maxWalletAmount = 2e6 * 1e18;\r\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\r\n\r\n    ////////////////////////////////////////////////\r\n    /* --------- General Implementation --------- */\r\n    ////////////////////////////////////////////////\r\n\r\n    constructor (address _RouterAddress) public {\r\n        _name = \"HAPPYSHIB\";\r\n        _symbol = \"HAPPYSHIB\";\r\n        _decimals = 18;\r\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\r\n        _balances[msg.sender] = _totalSupply;\r\n\r\n        buyFees.marketing = 6;\r\n        buyFees.gameWallet = 0;\r\n        buyFees.liquidity = 2;\r\n        buyFees.poolfee = 0;\r\n\r\n        sellFees.marketing = 8;\r\n        sellFees.gameWallet = 0;\r\n        sellFees.liquidity = 2;\r\n        buyFees.poolfee = 0;\r\n\r\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\r\n        PancakeSwapRouter = _PancakeSwapRouter;\r\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\r\n        \r\n        // isExcludeFromFee[msg.sender] = true;\r\n        isExcludeFromLimit[msg.sender] = true;\r\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\r\n\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n        emit SetBuyFee(buyFees);\r\n        emit SetSellFee(sellFees);\r\n    }\r\n\r\n    /* --------- set token parameters--------- */\r\n\r\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\r\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\r\n        PancakeSwapRouter = _PancakeSwapRouter;\r\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\r\n    }\r\n\r\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\r\n        marketingAddress = _marketingAddress;       \r\n        gameAddress = _gameAddress; \r\n        poolAddress = _poolAddress;\r\n    }\r\n\r\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\r\n        _maxTxAmount = maxTxAmount;\r\n    }\r\n\r\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\r\n        _maxWalletAmount = maxWalletAmount;\r\n    }\r\n    \r\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\r\n        buyFees.marketing = _marketingFee;\r\n        buyFees.gameWallet = _gameWalletFee;\r\n        buyFees.liquidity = _liquidityFee;\r\n        buyFees.poolfee = _poolfee;\r\n        emit SetBuyFee(buyFees);\r\n    }\r\n\r\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\r\n        sellFees.marketing = _marketingFee;\r\n        sellFees.gameWallet = _gameWalletFee;\r\n        sellFees.liquidity = _liquidityFee;\r\n        sellFees.poolfee = _poolfee;\r\n        emit SetSellFee(sellFees);\r\n    }\r\n\r\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\r\n        tradingEnabled = _tradingEnabled;\r\n    }\r\n\r\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\r\n        blacklist[user] = _isBlack;\r\n        emit SetBlackList(user,_isBlack);\r\n    }\r\n\r\n    function getTotalSellFee() public view returns (uint) {\r\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\r\n    }\r\n    \r\n    function getTotalBuyFee() public view returns (uint) {\r\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\r\n    }\r\n\r\n    /* --------- exclude address from buyFees--------- */\r\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\r\n        isExcludeFromFee[user] = _isExclude;\r\n        emit ExcludeFromFee(user,_isExclude);\r\n    }\r\n\r\n    /* --------- exclude address from Limit--------- */\r\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\r\n        isExcludeFromLimit[user] = _isExclude;\r\n    }\r\n\r\n    /* --------- transfer --------- */\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        require(!blacklist[sender]&&!blacklist[recipient],\"blacklist\");\r\n        // transfer \r\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\r\n            require(_maxTxAmount>=amount,\"BEP20: transfer amount exceeds max transfer amount\");\r\n            require(tradingEnabled,\"trading is disabled\");\r\n            }\r\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n\r\n        uint recieveAmount = amount;\r\n\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n        \r\n        if(contractTokenBalance >= _maxTxAmount)\r\n        {\r\n            contractTokenBalance = _maxTxAmount;\r\n        }\r\n        \r\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\r\n\r\n        if (\r\n            overMinTokenBalance &&\r\n            !inSwapAndLiquify &&\r\n            sender != PancakeSwapV2Pair &&\r\n            swapAndLiquifyEnabled\r\n        ) {\r\n            contractTokenBalance = numTokensSellToAddToLiquidity;\r\n            //add liquidity\r\n            swapAndLiquify(contractTokenBalance);\r\n        }\r\n\r\n        if(!isExcludeFromFee[sender]) {\r\n\r\n            if(sender == PancakeSwapV2Pair){\r\n                // buy fee\r\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \r\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\r\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\r\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\r\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\r\n                \r\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\r\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\r\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\r\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\r\n            }\r\n            else if(recipient == PancakeSwapV2Pair){\r\n                // sell fee\r\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \r\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\r\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\r\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\r\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\r\n\r\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\r\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\r\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\r\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\r\n            }\r\n        }\r\n\r\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\r\n\r\n        if(!isExcludeFromLimit[recipient])\r\n            require(_balances[recipient]<_maxWalletAmount,\"already balance exist max amount\");\r\n            \r\n        emit Transfer(sender, recipient, recieveAmount);\r\n    }\r\n\r\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\r\n        // split the contract balance into halves\r\n        uint256 half = contractTokenBalance.div(2);\r\n        uint256 otherHalf = contractTokenBalance.sub(half);\r\n\r\n        uint256 initialBalance = address(this).balance;\r\n\r\n        swapTokensForEth(half); \r\n\r\n        uint256 newBalance = address(this).balance.sub(initialBalance);\r\n\r\n        addLiquidity(otherHalf, newBalance);\r\n        \r\n        emit SwapAndLiquify(half, newBalance, otherHalf);\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = PancakeSwapRouter.WETH();\r\n\r\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\r\n\r\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, \r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\r\n\r\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/happyShibEth.sol":{"ast":{"absolutePath":"contracts/happyShibEth.sol","exportedSymbols":{"BALLS":[2532],"Context":[716],"IPancakeSwapFactory":[63],"IPancakeSwapPair":[303],"IPancakeSwapRouter":[691],"Ownable":[832],"SafeMath":[1025]},"id":2533,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"1243:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"1268:33:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":63,"linearizedBaseContracts":[63],"name":"IPancakeSwapFactory","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":12,"name":"PairCreated","nodeType":"EventDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","overrides":null,"scope":12,"src":"1366:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":6,"indexed":true,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","overrides":null,"scope":12,"src":"1390:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"1390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":8,"indexed":false,"mutability":"mutable","name":"pair","nodeType":"VariableDeclaration","overrides":null,"scope":12,"src":"1414:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"1414:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":10,"indexed":false,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":12,"src":"1428:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint","nodeType":"ElementaryTypeName","src":"1428:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1365:68:0"},"src":"1348:86:0"},{"body":null,"documentation":null,"functionSelector":"017e7e58","id":17,"implemented":false,"kind":"function","modifiers":[],"name":"feeTo","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"1460:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":17,"src":"1486:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1485:9:0"},"scope":63,"src":"1446:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"094b7415","id":22,"implemented":false,"kind":"function","modifiers":[],"name":"feeToSetter","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1525:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":22,"src":"1551:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1550:9:0"},"scope":63,"src":"1505:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"e6a43905","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getPair","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","overrides":null,"scope":31,"src":"1589:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","overrides":null,"scope":31,"src":"1605:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1588:32:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"pair","nodeType":"VariableDeclaration","overrides":null,"scope":31,"src":"1644:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1643:14:0"},"scope":63,"src":"1572:86:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"1e3dd18b","id":38,"implemented":false,"kind":"function","modifiers":[],"name":"allPairs","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":38,"src":"1686:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1685:6:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36,"mutability":"mutable","name":"pair","nodeType":"VariableDeclaration","overrides":null,"scope":38,"src":"1715:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1714:14:0"},"scope":63,"src":"1668:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"574f2ba3","id":43,"implemented":false,"kind":"function","modifiers":[],"name":"allPairsLength","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1762:2:0"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":43,"src":"1788:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint","nodeType":"ElementaryTypeName","src":"1788:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1787:6:0"},"scope":63,"src":"1739:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"c9c65396","id":52,"implemented":false,"kind":"function","modifiers":[],"name":"createPair","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","overrides":null,"scope":52,"src":"1826:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","overrides":null,"scope":52,"src":"1842:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1825:32:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"pair","nodeType":"VariableDeclaration","overrides":null,"scope":52,"src":"1876:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1875:14:0"},"scope":63,"src":"1806:84:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"f46901ed","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeTo","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":57,"src":"1920:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1919:9:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1937:0:0"},"scope":63,"src":"1902:36:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"a2e74af6","id":62,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeToSetter","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":62,"src":"1972:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1971:9:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1989:0:0"},"scope":63,"src":"1948:42:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2533,"src":"1307:686:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":303,"linearizedBaseContracts":[303],"name":"IPancakeSwapPair","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":71,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":71,"src":"2050:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2050:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":67,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":71,"src":"2073:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":69,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":71,"src":"2098:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint","nodeType":"ElementaryTypeName","src":"2098:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2049:60:0"},"src":"2035:75:0"},{"anonymous":false,"documentation":null,"id":79,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"2135:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":75,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"2157:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"2177:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint","nodeType":"ElementaryTypeName","src":"2177:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2134:54:0"},"src":"2120:69:0"},{"body":null,"documentation":null,"functionSelector":"06fdde03","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"2214:2:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":84,"src":"2240:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":81,"name":"string","nodeType":"ElementaryTypeName","src":"2240:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"2239:15:0"},"scope":303,"src":"2201:54:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"95d89b41","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"2280:2:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":89,"src":"2306:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":86,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"2305:15:0"},"scope":303,"src":"2265:56:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"313ce567","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"2348:2:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":94,"src":"2374:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":91,"name":"uint8","nodeType":"ElementaryTypeName","src":"2374:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"2373:7:0"},"scope":303,"src":"2331:50:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"18160ddd","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"2411:2:0"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":99,"src":"2437:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint","nodeType":"ElementaryTypeName","src":"2437:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2436:6:0"},"scope":303,"src":"2391:52:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"70a08231","id":106,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":106,"src":"2472:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2471:15:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":106,"src":"2510:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint","nodeType":"ElementaryTypeName","src":"2510:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2509:6:0"},"scope":303,"src":"2453:63:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"dd62ed3e","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":115,"src":"2545:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2545:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":115,"src":"2560:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"2560:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2544:32:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":115,"src":"2600:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint","nodeType":"ElementaryTypeName","src":"2600:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2599:6:0"},"scope":303,"src":"2526:80:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"095ea7b3","id":124,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":124,"src":"2635:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2635:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":124,"src":"2652:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint","nodeType":"ElementaryTypeName","src":"2652:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2634:29:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":124,"src":"2682:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":121,"name":"bool","nodeType":"ElementaryTypeName","src":"2682:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2681:6:0"},"scope":303,"src":"2618:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"a9059cbb","id":133,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":133,"src":"2716:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":133,"src":"2728:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint","nodeType":"ElementaryTypeName","src":"2728:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2715:24:0"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":133,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":130,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2757:6:0"},"scope":303,"src":"2698:66:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"23b872dd","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":144,"src":"2796:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2796:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":144,"src":"2810:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":144,"src":"2822:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint","nodeType":"ElementaryTypeName","src":"2822:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2795:38:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":144,"src":"2852:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2851:6:0"},"scope":303,"src":"2774:84:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"3644e515","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"2895:2:0"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":149,"src":"2921:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2920:9:0"},"scope":303,"src":"2870:60:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"30adf81f","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"2964:2:0"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":154,"src":"2990:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2990:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2989:9:0"},"scope":303,"src":"2940:59:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"7ecebe00","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":161,"src":"3025:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3024:15:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":161,"src":"3063:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint","nodeType":"ElementaryTypeName","src":"3063:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3062:6:0"},"scope":303,"src":"3009:60:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"d505accf","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3097:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"3097:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3112:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3129:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint","nodeType":"ElementaryTypeName","src":"3129:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3141:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint","nodeType":"ElementaryTypeName","src":"3141:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3156:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":170,"name":"uint8","nodeType":"ElementaryTypeName","src":"3156:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3165:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3165:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":178,"src":"3176:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3176:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3096:90:0"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"3195:0:0"},"scope":303,"src":"3081:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":null,"id":186,"name":"Mint","nodeType":"EventDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":186,"src":"3219:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":182,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","overrides":null,"scope":186,"src":"3243:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint","nodeType":"ElementaryTypeName","src":"3243:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":184,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","overrides":null,"scope":186,"src":"3257:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint","nodeType":"ElementaryTypeName","src":"3257:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3218:52:0"},"src":"3208:63:0"},{"anonymous":false,"documentation":null,"id":196,"name":"Burn","nodeType":"EventDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":196,"src":"3292:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"3292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":190,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","overrides":null,"scope":196,"src":"3316:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint","nodeType":"ElementaryTypeName","src":"3316:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","overrides":null,"scope":196,"src":"3330:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint","nodeType":"ElementaryTypeName","src":"3330:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":196,"src":"3344:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"3344:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3291:72:0"},"src":"3281:83:0"},{"anonymous":false,"documentation":null,"id":210,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3403:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"3403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":200,"indexed":false,"mutability":"mutable","name":"amount0In","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3444:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint","nodeType":"ElementaryTypeName","src":"3444:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":202,"indexed":false,"mutability":"mutable","name":"amount1In","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3477:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint","nodeType":"ElementaryTypeName","src":"3477:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":204,"indexed":false,"mutability":"mutable","name":"amount0Out","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3510:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint","nodeType":"ElementaryTypeName","src":"3510:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":206,"indexed":false,"mutability":"mutable","name":"amount1Out","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3544:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint","nodeType":"ElementaryTypeName","src":"3544:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":208,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":210,"src":"3578:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"3578:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3384:223:0"},"src":"3374:234:0"},{"anonymous":false,"documentation":null,"id":216,"name":"Sync","nodeType":"EventDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"reserve0","nodeType":"VariableDeclaration","overrides":null,"scope":216,"src":"3629:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":211,"name":"uint112","nodeType":"ElementaryTypeName","src":"3629:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"reserve1","nodeType":"VariableDeclaration","overrides":null,"scope":216,"src":"3647:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":213,"name":"uint112","nodeType":"ElementaryTypeName","src":"3647:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"}],"src":"3628:36:0"},"src":"3618:47:0"},{"body":null,"documentation":null,"functionSelector":"ba9a7a56","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"MINIMUM_LIQUIDITY","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3703:2:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":221,"src":"3729:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint","nodeType":"ElementaryTypeName","src":"3729:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3728:6:0"},"scope":303,"src":"3677:58:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"c45a0155","id":226,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"3761:2:0"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":226,"src":"3787:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3786:9:0"},"scope":303,"src":"3745:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"0dfe1681","id":231,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"3821:2:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":231,"src":"3847:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3846:9:0"},"scope":303,"src":"3806:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"d21220a7","id":236,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"3881:2:0"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":236,"src":"3907:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"3907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3906:9:0"},"scope":303,"src":"3866:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"0902f1ac","id":245,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"3946:2:0"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"reserve0","nodeType":"VariableDeclaration","overrides":null,"scope":245,"src":"3972:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":238,"name":"uint112","nodeType":"ElementaryTypeName","src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"reserve1","nodeType":"VariableDeclaration","overrides":null,"scope":245,"src":"3990:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":240,"name":"uint112","nodeType":"ElementaryTypeName","src":"3990:7:0","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"value":null,"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"blockTimestampLast","nodeType":"VariableDeclaration","overrides":null,"scope":245,"src":"4008:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":242,"name":"uint32","nodeType":"ElementaryTypeName","src":"4008:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":null,"visibility":"internal"}],"src":"3971:63:0"},"scope":303,"src":"3926:109:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"5909c0d5","id":250,"implemented":false,"kind":"function","modifiers":[],"name":"price0CumulativeLast","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"4074:2:0"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":250,"src":"4100:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint","nodeType":"ElementaryTypeName","src":"4100:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4099:6:0"},"scope":303,"src":"4045:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"5a3d5493","id":255,"implemented":false,"kind":"function","modifiers":[],"name":"price1CumulativeLast","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"4145:2:0"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":255,"src":"4171:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint","nodeType":"ElementaryTypeName","src":"4171:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4170:6:0"},"scope":303,"src":"4116:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"7464fc3d","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"kLast","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"4201:2:0"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":260,"src":"4227:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint","nodeType":"ElementaryTypeName","src":"4227:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4226:6:0"},"scope":303,"src":"4187:46:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"6a627842","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":267,"src":"4259:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4258:12:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":267,"src":"4289:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint","nodeType":"ElementaryTypeName","src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4288:16:0"},"scope":303,"src":"4245:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"89afcb44","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":276,"src":"4329:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"4329:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4328:12:0"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","overrides":null,"scope":276,"src":"4359:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint","nodeType":"ElementaryTypeName","src":"4359:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","overrides":null,"scope":276,"src":"4373:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint","nodeType":"ElementaryTypeName","src":"4373:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4358:28:0"},"scope":303,"src":"4315:72:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"022c0d9f","id":287,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"amount0Out","nodeType":"VariableDeclaration","overrides":null,"scope":287,"src":"4411:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint","nodeType":"ElementaryTypeName","src":"4411:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"amount1Out","nodeType":"VariableDeclaration","overrides":null,"scope":287,"src":"4428:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint","nodeType":"ElementaryTypeName","src":"4428:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":287,"src":"4445:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"4445:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":287,"src":"4457:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":283,"name":"bytes","nodeType":"ElementaryTypeName","src":"4457:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"4410:67:0"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"4486:0:0"},"scope":303,"src":"4397:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"bc25cf77","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":292,"src":"4511:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4510:12:0"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"4531:0:0"},"scope":303,"src":"4497:35:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"fff6cae9","id":295,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"4555:2:0"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"4566:0:0"},"scope":303,"src":"4542:25:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"485cc955","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":302,"src":"4599:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"4599:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":302,"src":"4608:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"4608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4598:18:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"4625:0:0"},"scope":303,"src":"4579:47:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2533,"src":"1997:2632:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":691,"linearizedBaseContracts":[691],"name":"IPancakeSwapRouter","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":null,"functionSelector":"c45a0155","id":308,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"4688:2:0"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":308,"src":"4714:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4713:9:0"},"scope":691,"src":"4672:51:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"ad5c4648","id":313,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"4746:2:0"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":313,"src":"4772:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4771:9:0"},"scope":691,"src":"4733:48:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"e8e33700","id":338,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"4833:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4833:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"4866:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"4866:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"amountADesired","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"4899:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint","nodeType":"ElementaryTypeName","src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"amountBDesired","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"4937:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint","nodeType":"ElementaryTypeName","src":"4937:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"amountAMin","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"4975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint","nodeType":"ElementaryTypeName","src":"4975:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"amountBMin","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5009:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint","nodeType":"ElementaryTypeName","src":"5009:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5043:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"5043:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5072:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint","nodeType":"ElementaryTypeName","src":"5072:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4814:282:0"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"amountA","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5115:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint","nodeType":"ElementaryTypeName","src":"5115:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"amountB","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5129:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint","nodeType":"ElementaryTypeName","src":"5129:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":338,"src":"5143:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint","nodeType":"ElementaryTypeName","src":"5143:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5114:44:0"},"scope":691,"src":"4793:366:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"f305d719","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5212:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"5212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"amountTokenDesired","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5244:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint","nodeType":"ElementaryTypeName","src":"5244:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"amountTokenMin","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5286:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint","nodeType":"ElementaryTypeName","src":"5286:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"amountETHMin","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5324:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint","nodeType":"ElementaryTypeName","src":"5324:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5360:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"5360:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5389:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint","nodeType":"ElementaryTypeName","src":"5389:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5193:220:0"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"amountToken","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5440:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint","nodeType":"ElementaryTypeName","src":"5440:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"amountETH","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5458:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint","nodeType":"ElementaryTypeName","src":"5458:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":359,"src":"5474:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint","nodeType":"ElementaryTypeName","src":"5474:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5439:50:0"},"scope":691,"src":"5169:321:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"baa2abde","id":380,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5543:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5576:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"5576:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5609:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint","nodeType":"ElementaryTypeName","src":"5609:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"amountAMin","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5642:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint","nodeType":"ElementaryTypeName","src":"5642:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"amountBMin","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint","nodeType":"ElementaryTypeName","src":"5676:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5710:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"5710:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5739:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint","nodeType":"ElementaryTypeName","src":"5739:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5524:239:0"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"amountA","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5782:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint","nodeType":"ElementaryTypeName","src":"5782:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"amountB","nodeType":"VariableDeclaration","overrides":null,"scope":380,"src":"5796:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint","nodeType":"ElementaryTypeName","src":"5796:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5781:28:0"},"scope":691,"src":"5500:310:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"02751cec","id":399,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"5866:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"5866:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"5898:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint","nodeType":"ElementaryTypeName","src":"5898:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"amountTokenMin","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"5931:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint","nodeType":"ElementaryTypeName","src":"5931:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"amountETHMin","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"5969:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint","nodeType":"ElementaryTypeName","src":"5969:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"6005:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"6005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"6034:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint","nodeType":"ElementaryTypeName","src":"6034:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"5847:211:0"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"amountToken","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"6077:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"amountETH","nodeType":"VariableDeclaration","overrides":null,"scope":399,"src":"6095:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint","nodeType":"ElementaryTypeName","src":"6095:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6076:34:0"},"scope":691,"src":"5820:291:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"2195995c","id":428,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6174:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"6174:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6207:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6240:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint","nodeType":"ElementaryTypeName","src":"6240:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"amountAMin","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6273:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint","nodeType":"ElementaryTypeName","src":"6273:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"amountBMin","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6307:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint","nodeType":"ElementaryTypeName","src":"6307:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6341:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"6341:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint","nodeType":"ElementaryTypeName","src":"6370:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"approveMax","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6402:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":414,"name":"bool","nodeType":"ElementaryTypeName","src":"6402:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6419:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":416,"name":"uint8","nodeType":"ElementaryTypeName","src":"6419:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6428:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6439:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6439:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"6155:304:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"amountA","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6478:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint","nodeType":"ElementaryTypeName","src":"6478:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"amountB","nodeType":"VariableDeclaration","overrides":null,"scope":428,"src":"6492:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint","nodeType":"ElementaryTypeName","src":"6492:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6477:28:0"},"scope":691,"src":"6121:385:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"ded9382a","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6572:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"6572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6604:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint","nodeType":"ElementaryTypeName","src":"6604:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"amountTokenMin","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6637:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint","nodeType":"ElementaryTypeName","src":"6637:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"amountETHMin","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6675:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint","nodeType":"ElementaryTypeName","src":"6675:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6711:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"6711:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6740:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint","nodeType":"ElementaryTypeName","src":"6740:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"approveMax","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6772:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":441,"name":"bool","nodeType":"ElementaryTypeName","src":"6772:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6789:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":443,"name":"uint8","nodeType":"ElementaryTypeName","src":"6789:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6798:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6798:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6809:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6809:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"6553:276:0"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"amountToken","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6848:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint","nodeType":"ElementaryTypeName","src":"6848:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"amountETH","nodeType":"VariableDeclaration","overrides":null,"scope":455,"src":"6866:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint","nodeType":"ElementaryTypeName","src":"6866:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6847:34:0"},"scope":691,"src":"6516:366:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"38ed1739","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"6944:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint","nodeType":"ElementaryTypeName","src":"6944:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"6976:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint","nodeType":"ElementaryTypeName","src":"6976:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"7012:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7012:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"length":null,"nodeType":"ArrayTypeName","src":"7012:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"7054:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"7054:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"7083:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint","nodeType":"ElementaryTypeName","src":"7083:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6925:182:0"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":472,"src":"7126:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":468,"name":"uint","nodeType":"ElementaryTypeName","src":"7126:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"length":null,"nodeType":"ArrayTypeName","src":"7126:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"7125:23:0"},"scope":691,"src":"6892:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"8803dbee","id":489,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7211:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint","nodeType":"ElementaryTypeName","src":"7211:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"amountInMax","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7244:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint","nodeType":"ElementaryTypeName","src":"7244:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7279:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":478,"length":null,"nodeType":"ArrayTypeName","src":"7279:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7321:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"7321:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7350:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint","nodeType":"ElementaryTypeName","src":"7350:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7192:182:0"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":489,"src":"7393:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":485,"name":"uint","nodeType":"ElementaryTypeName","src":"7393:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"length":null,"nodeType":"ArrayTypeName","src":"7393:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"7392:23:0"},"scope":691,"src":"7159:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"7ff36ab5","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":504,"src":"7457:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint","nodeType":"ElementaryTypeName","src":"7457:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":504,"src":"7476:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7476:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"length":null,"nodeType":"ArrayTypeName","src":"7476:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":504,"src":"7501:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":504,"src":"7513:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint","nodeType":"ElementaryTypeName","src":"7513:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7456:71:0"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":504,"src":"7605:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":500,"name":"uint","nodeType":"ElementaryTypeName","src":"7605:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":501,"length":null,"nodeType":"ArrayTypeName","src":"7605:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"7604:23:0"},"scope":691,"src":"7426:202:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"4a25d94a","id":521,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7669:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint","nodeType":"ElementaryTypeName","src":"7669:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"amountInMax","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7685:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint","nodeType":"ElementaryTypeName","src":"7685:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7703:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"7703:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":510,"length":null,"nodeType":"ArrayTypeName","src":"7703:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7728:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"7728:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7740:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint","nodeType":"ElementaryTypeName","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7668:86:0"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":521,"src":"7807:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":517,"name":"uint","nodeType":"ElementaryTypeName","src":"7807:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":518,"length":null,"nodeType":"ArrayTypeName","src":"7807:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"7806:23:0"},"scope":691,"src":"7638:192:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"18cbafe5","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"7871:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint","nodeType":"ElementaryTypeName","src":"7871:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"7886:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint","nodeType":"ElementaryTypeName","src":"7886:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"7905:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":527,"length":null,"nodeType":"ArrayTypeName","src":"7905:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"7930:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"7930:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"7942:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint","nodeType":"ElementaryTypeName","src":"7942:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7870:86:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":538,"src":"8009:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":534,"name":"uint","nodeType":"ElementaryTypeName","src":"8009:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":535,"length":null,"nodeType":"ArrayTypeName","src":"8009:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"8008:23:0"},"scope":691,"src":"7840:192:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"fb3bdb41","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":553,"src":"8073:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint","nodeType":"ElementaryTypeName","src":"8073:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":553,"src":"8089:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"8089:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":542,"length":null,"nodeType":"ArrayTypeName","src":"8089:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":553,"src":"8114:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"8114:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":553,"src":"8126:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint","nodeType":"ElementaryTypeName","src":"8126:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8072:68:0"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":553,"src":"8218:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":549,"name":"uint","nodeType":"ElementaryTypeName","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":550,"length":null,"nodeType":"ArrayTypeName","src":"8218:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"8217:23:0"},"scope":691,"src":"8042:199:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"ad615dec","id":564,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"amountA","nodeType":"VariableDeclaration","overrides":null,"scope":564,"src":"8268:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint","nodeType":"ElementaryTypeName","src":"8268:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"reserveA","nodeType":"VariableDeclaration","overrides":null,"scope":564,"src":"8282:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint","nodeType":"ElementaryTypeName","src":"8282:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"reserveB","nodeType":"VariableDeclaration","overrides":null,"scope":564,"src":"8297:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint","nodeType":"ElementaryTypeName","src":"8297:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8267:44:0"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"amountB","nodeType":"VariableDeclaration","overrides":null,"scope":564,"src":"8335:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint","nodeType":"ElementaryTypeName","src":"8335:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8334:14:0"},"scope":691,"src":"8253:96:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"054d50d4","id":575,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":575,"src":"8381:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"8381:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"reserveIn","nodeType":"VariableDeclaration","overrides":null,"scope":575,"src":"8396:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint","nodeType":"ElementaryTypeName","src":"8396:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"reserveOut","nodeType":"VariableDeclaration","overrides":null,"scope":575,"src":"8412:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint","nodeType":"ElementaryTypeName","src":"8412:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8380:48:0"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":575,"src":"8452:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint","nodeType":"ElementaryTypeName","src":"8452:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8451:16:0"},"scope":691,"src":"8359:109:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"85f8c259","id":586,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"8499:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint","nodeType":"ElementaryTypeName","src":"8499:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"reserveIn","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"8515:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint","nodeType":"ElementaryTypeName","src":"8515:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"reserveOut","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"8531:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint","nodeType":"ElementaryTypeName","src":"8531:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8498:49:0"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":586,"src":"8571:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint","nodeType":"ElementaryTypeName","src":"8571:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8570:15:0"},"scope":691,"src":"8478:108:0","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"d06ca61f","id":597,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":597,"src":"8619:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint","nodeType":"ElementaryTypeName","src":"8619:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":597,"src":"8634:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"8634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":590,"length":null,"nodeType":"ArrayTypeName","src":"8634:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"8618:40:0"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":597,"src":"8682:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":593,"name":"uint","nodeType":"ElementaryTypeName","src":"8682:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"length":null,"nodeType":"ArrayTypeName","src":"8682:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"8681:23:0"},"scope":691,"src":"8596:109:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"1f00ca74","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","overrides":null,"scope":608,"src":"8737:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint","nodeType":"ElementaryTypeName","src":"8737:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":608,"src":"8753:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"8753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":601,"length":null,"nodeType":"ArrayTypeName","src":"8753:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"8736:41:0"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","overrides":null,"scope":608,"src":"8801:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":604,"name":"uint","nodeType":"ElementaryTypeName","src":"8801:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"length":null,"nodeType":"ArrayTypeName","src":"8801:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"8800:23:0"},"scope":691,"src":"8715:109:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"af2979eb","id":625,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"8905:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"8933:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint","nodeType":"ElementaryTypeName","src":"8933:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"amountTokenMin","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"8962:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint","nodeType":"ElementaryTypeName","src":"8962:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"amountETHMin","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"8996:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint","nodeType":"ElementaryTypeName","src":"8996:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"9028:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"9028:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"9053:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint","nodeType":"ElementaryTypeName","src":"9053:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8890:187:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"amountETH","nodeType":"VariableDeclaration","overrides":null,"scope":625,"src":"9096:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint","nodeType":"ElementaryTypeName","src":"9096:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9095:16:0"},"scope":691,"src":"8834:278:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"5b0d5984","id":650,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9203:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"9203:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9231:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint","nodeType":"ElementaryTypeName","src":"9231:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"amountTokenMin","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9260:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint","nodeType":"ElementaryTypeName","src":"9260:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"amountETHMin","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9294:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint","nodeType":"ElementaryTypeName","src":"9294:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9326:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"9326:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9351:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint","nodeType":"ElementaryTypeName","src":"9351:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"approveMax","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9379:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":638,"name":"bool","nodeType":"ElementaryTypeName","src":"9379:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9396:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":640,"name":"uint8","nodeType":"ElementaryTypeName","src":"9396:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9405:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9405:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9416:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"9188:248:0"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"amountETH","nodeType":"VariableDeclaration","overrides":null,"scope":650,"src":"9455:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint","nodeType":"ElementaryTypeName","src":"9455:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9454:16:0"},"scope":691,"src":"9122:349:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"5c11d795","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":664,"src":"9564:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint","nodeType":"ElementaryTypeName","src":"9564:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":664,"src":"9592:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint","nodeType":"ElementaryTypeName","src":"9592:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":664,"src":"9624:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"9624:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":656,"length":null,"nodeType":"ArrayTypeName","src":"9624:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":664,"src":"9662:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"9662:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":664,"src":"9687:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint","nodeType":"ElementaryTypeName","src":"9687:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9549:162:0"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"9720:0:0"},"scope":691,"src":"9487:234:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"b6f9de95","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":676,"src":"9805:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint","nodeType":"ElementaryTypeName","src":"9805:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":676,"src":"9837:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"9837:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":668,"length":null,"nodeType":"ArrayTypeName","src":"9837:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":676,"src":"9875:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"9875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":676,"src":"9900:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint","nodeType":"ElementaryTypeName","src":"9900:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9790:134:0"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"9941:0:0"},"scope":691,"src":"9731:211:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":null,"documentation":null,"functionSelector":"791ac947","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","overrides":null,"scope":690,"src":"10026:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint","nodeType":"ElementaryTypeName","src":"10026:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","overrides":null,"scope":690,"src":"10054:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint","nodeType":"ElementaryTypeName","src":"10054:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":690,"src":"10086:23:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"10086:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":682,"length":null,"nodeType":"ArrayTypeName","src":"10086:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":690,"src":"10124:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","overrides":null,"scope":690,"src":"10149:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint","nodeType":"ElementaryTypeName","src":"10149:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10011:162:0"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"10182:0:0"},"scope":691,"src":"9952:231:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2533,"src":"4633:5553:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":716,"linearizedBaseContracts":[716],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":694,"nodeType":"Block","src":"10394:3:0","statements":[]},"documentation":null,"id":695,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"10382:2:0"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"10394:0:0"},"scope":716,"src":"10370:27:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"10467:36:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10485:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10485:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":699,"id":702,"nodeType":"Return","src":"10478:17:0"}]},"documentation":null,"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"10424:2:0"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":704,"src":"10450:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"10450:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":null,"visibility":"internal"}],"src":"10449:17:0"},"scope":716,"src":"10405:98:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"10568:168:0","statements":[{"expression":{"argumentTypes":null,"id":709,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10579:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$716","typeString":"contract Context"}},"id":710,"nodeType":"ExpressionStatement","src":"10579:4:0"},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10720:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":null,"src":"10720:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":708,"id":713,"nodeType":"Return","src":"10713:15:0"}]},"documentation":null,"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"10528:2:0"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":715,"src":"10554:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"10554:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"10553:14:0"},"scope":716,"src":"10511:225:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2533,"src":"10190:549:0"},{"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":717,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":716,"src":"10807:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$716","typeString":"contract Context"}},"id":718,"nodeType":"InheritanceSpecifier","src":"10807:7:0"}],"contractDependencies":[716],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":832,"linearizedBaseContracts":[832,716],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":720,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","overrides":null,"scope":832,"src":"10822:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"10822:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"private"},{"anonymous":false,"documentation":null,"id":726,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","overrides":null,"scope":726,"src":"10880:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"10880:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":724,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","overrides":null,"scope":726,"src":"10911:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"10911:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"10879:57:0"},"src":"10853:84:0"},{"body":{"id":747,"nodeType":"Block","src":"11066:139:0","statements":[{"assignments":[731],"declarations":[{"constant":false,"id":731,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","overrides":null,"scope":747,"src":"11077:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"11077:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"id":734,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":732,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11097:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11097:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"11077:32:0"},{"expression":{"argumentTypes":null,"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":735,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11120:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":736,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"11129:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11120:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":738,"nodeType":"ExpressionStatement","src":"11120:18:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11175:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"11175:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11175:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":744,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"11187:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":739,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"11154:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11154:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"11149:48:0"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"10945:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":748,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"11054:2:0"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"11066:0:0"},"scope":832,"src":"11042:163:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"11331:32:0","statements":[{"expression":{"argumentTypes":null,"id":754,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11349:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":753,"id":755,"nodeType":"Return","src":"11342:13:0"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"11213:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":757,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"11298:2:0"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":757,"src":"11322:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"11322:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"11321:9:0"},"scope":832,"src":"11284:79:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":769,"nodeType":"Block","src":"11475:98:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":761,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11494:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":762,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"11504:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11504:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"11494:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11518:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11486:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11486:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"11486:67:0"},{"id":768,"nodeType":"PlaceholderStatement","src":"11564:1:0"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"11371:77:0","text":" @dev Throws if called by any account other than the owner."},"id":770,"name":"onlyOwner","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"11472:2:0"},"src":"11454:119:0","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"11964:94:0","statements":[{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":777,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"12001:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12017:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"12009:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12009:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":776,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"11980:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11980:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"EmitStatement","src":"11975:45:0"},{"expression":{"argumentTypes":null,"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":784,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"12031:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12048:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12040:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"12040:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12040:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"12031:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":790,"nodeType":"ExpressionStatement","src":"12031:19:0"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"11581:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":792,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":774,"modifierName":{"argumentTypes":null,"id":773,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11954:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11954:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"11944:2:0"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"11964:0:0"},"scope":832,"src":"11918:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":804,"nodeType":"Block","src":"12272:47:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":801,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"12302:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":800,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"12283:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"12283:28:0"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"12066:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":805,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":798,"modifierName":{"argumentTypes":null,"id":797,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"12262:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12262:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","overrides":null,"scope":805,"src":"12237:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"12237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12236:18:0"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"12272:0:0"},"scope":832,"src":"12210:109:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":830,"nodeType":"Block","src":"12478:174:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":812,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"12497:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12517:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12509:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"12509:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12509:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"12497:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12521:40:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12489:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12489:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"12489:73:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":822,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"12599:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":823,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"12607:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":821,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"12578:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12578:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"EmitStatement","src":"12573:43:0"},{"expression":{"argumentTypes":null,"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":826,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"12627:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":827,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"12636:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12627:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":829,"nodeType":"ExpressionStatement","src":"12627:17:0"}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"12327:90:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`)."},"id":831,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","overrides":null,"scope":831,"src":"12451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"12451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"12450:18:0"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"12478:0:0"},"scope":832,"src":"12423:229:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2533,"src":"10787:1868:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":null,"fullyImplemented":true,"id":1025,"linearizedBaseContracts":[1025],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":857,"nodeType":"Block","src":"13014:114:0","statements":[{"assignments":[843],"declarations":[{"constant":false,"id":843,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":857,"src":"13025:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"13025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":847,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":844,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"13037:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"id":845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13041:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13037:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13025:17:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":849,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"13061:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"13066:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13061:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13069:29:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13053:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13053:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"13053:46:0"},{"expression":{"argumentTypes":null,"id":855,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"13119:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":841,"id":856,"nodeType":"Return","src":"13112:8:0"}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"12724:217:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":858,"src":"12960:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"12960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":858,"src":"12971:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"12971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"12959:22:0"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":858,"src":"13005:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13005:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13004:9:0"},"scope":1025,"src":"12947:181:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"13462:69:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"13484:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"13487:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13490:32:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":868,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[875,903],"referencedDeclaration":903,"src":"13480:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13480:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":867,"id":873,"nodeType":"Return","src":"13473:50:0"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"13136:253:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":875,"src":"13408:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"13408:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":875,"src":"13419:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"13419:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13407:22:0"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":875,"src":"13453:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"13453:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13452:9:0"},"scope":1025,"src":"13395:136:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"13913:97:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"13932:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"13937:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13932:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":891,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"13940:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13924:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13924:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"13924:29:0"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":902,"src":"13964:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"13964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":899,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"13976:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"id":897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"13980:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13976:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13964:17:0"},{"expression":{"argumentTypes":null,"id":900,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"14001:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":886,"id":901,"nodeType":"Return","src":"13994:8:0"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"13539:273:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":903,"src":"13831:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"13831:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":903,"src":"13842:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"13842:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":903,"src":"13853:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"13853:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"13830:50:0"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":903,"src":"13904:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"13904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"13903:9:0"},"scope":1025,"src":"13818:192:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":937,"nodeType":"Block","src":"14320:400:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"14556:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14561:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14556:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":919,"nodeType":"IfStatement","src":"14552:43:0","trueBody":{"id":918,"nodeType":"Block","src":"14564:31:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14582:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":912,"id":917,"nodeType":"Return","src":"14575:8:0"}]}},{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":937,"src":"14607:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"14607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":925,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"14619:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"id":923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"14623:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14619:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14607:17:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":927,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"14643:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"14647:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14643:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"14652:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14643:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14655:35:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"14635:56:0"},{"expression":{"argumentTypes":null,"id":935,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"14711:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":912,"id":936,"nodeType":"Return","src":"14704:8:0"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"14018:229:0","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":938,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":938,"src":"14266:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"14266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":938,"src":"14277:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"14277:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14265:22:0"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":938,"src":"14311:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"14311:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14310:9:0"},"scope":1025,"src":"14253:467:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"15245:65:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"15267:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"15270:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15273:28:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":948,"name":"div","nodeType":"Identifier","overloadedDeclarations":[955,983],"referencedDeclaration":983,"src":"15263:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15263:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":947,"id":953,"nodeType":"Return","src":"15256:46:0"}]},"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"14728:444:0","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":955,"src":"15191:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"15191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":955,"src":"15202:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"15202:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15190:22:0"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":955,"src":"15236:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"15236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15235:9:0"},"scope":1025,"src":"15178:132:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":982,"nodeType":"Block","src":"15883:250:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"15969:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15973:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15969:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":971,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"15976:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15961:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15961:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"15961:28:0"},{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","overrides":null,"scope":982,"src":"16000:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"16000:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":979,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"16012:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"argumentTypes":null,"id":977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"16016:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16012:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16000:17:0"},{"expression":{"argumentTypes":null,"id":980,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"16124:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":966,"id":981,"nodeType":"Return","src":"16117:8:0"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"15318:464:0","text":" @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":983,"src":"15801:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"15801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":983,"src":"15812:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"15812:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":983,"src":"15823:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":961,"name":"string","nodeType":"ElementaryTypeName","src":"15823:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"15800:50:0"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":983,"src":"15874:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"15874:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15873:9:0"},"scope":1025,"src":"15788:345:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":999,"nodeType":"Block","src":"16647:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"16669:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":995,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"16672:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16675:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":993,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[1000,1024],"referencedDeclaration":1024,"src":"16665:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16665:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":992,"id":998,"nodeType":"Return","src":"16658:44:0"}]},"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"16141:433:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1000,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"16593:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"16593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"16604:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"16604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16592:22:0"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1000,"src":"16638:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"16638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16637:9:0"},"scope":1025,"src":"16580:130:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1023,"nodeType":"Block","src":"17272:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"17291:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17296:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17291:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":1016,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"17299:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17283:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17283:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"17283:29:0"},{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"17330:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"argumentTypes":null,"id":1020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"17334:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17330:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1011,"id":1022,"nodeType":"Return","src":"17323:12:0"}]},"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"16718:453:0","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1024,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","overrides":null,"scope":1024,"src":"17190:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"17190:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","overrides":null,"scope":1024,"src":"17201:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"17201:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":1024,"src":"17212:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1006,"name":"string","nodeType":"ElementaryTypeName","src":"17212:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"17189:50:0"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1024,"src":"17263:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"17263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17262:9:0"},"scope":1025,"src":"17177:166:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2533,"src":"12700:4646:0"},{"abstract":false,"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1026,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":716,"src":"17369:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$716","typeString":"contract Context"}},"id":1027,"nodeType":"InheritanceSpecifier","src":"17369:7:0"},{"arguments":null,"baseName":{"contractScope":null,"id":1028,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":832,"src":"17378:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$832","typeString":"contract Ownable"}},"id":1029,"nodeType":"InheritanceSpecifier","src":"17378:7:0"}],"contractDependencies":[716,832],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":2532,"linearizedBaseContracts":[2532,832,716],"name":"BALLS","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":1037,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","overrides":null,"scope":1037,"src":"17411:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"17411:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1033,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","overrides":null,"scope":1037,"src":"17433:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"17433:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1035,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1037,"src":"17453:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17410:57:0"},"src":"17396:72:0"},{"anonymous":false,"documentation":null,"id":1045,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1045,"src":"17491:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"17491:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1041,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1045,"src":"17514:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"17514:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1043,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":1045,"src":"17539:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"17539:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17490:63:0"},"src":"17476:78:0"},{"anonymous":false,"documentation":null,"id":1053,"name":"SwapAndLiquify","nodeType":"EventDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"tokensSwapped","nodeType":"VariableDeclaration","overrides":null,"scope":1053,"src":"17593:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"17593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1049,"indexed":false,"mutability":"mutable","name":"ethReceived","nodeType":"VariableDeclaration","overrides":null,"scope":1053,"src":"17625:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"17625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1051,"indexed":false,"mutability":"mutable","name":"tokensIntoLiqudity","nodeType":"VariableDeclaration","overrides":null,"scope":1053,"src":"17655:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"17655:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17582:106:0"},"src":"17562:127:0"},{"id":1056,"libraryName":{"contractScope":null,"id":1054,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":1025,"src":"17703:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$1025","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"17697:27:0","typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"17716:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1060,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17732:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1059,"keyType":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"17741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"17732:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"17752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"private"},{"constant":false,"id":1066,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17787:69:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1065,"keyType":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"17796:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"17787:49:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1064,"keyType":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"17816:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"17807:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"17827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"private"},{"constant":false,"id":1068,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17865:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"17865:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"private"},{"constant":false,"id":1070,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17900:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1069,"name":"uint8","nodeType":"ElementaryTypeName","src":"17900:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"private"},{"constant":false,"id":1072,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17930:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1071,"name":"string","nodeType":"ElementaryTypeName","src":"17930:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"private"},{"constant":false,"id":1074,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"17959:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1073,"name":"string","nodeType":"ElementaryTypeName","src":"17959:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"private"},{"body":{"id":1082,"nodeType":"Block","src":"18042:43:0","statements":[{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"18060:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18060:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1078,"id":1081,"nodeType":"Return","src":"18053:14:0"}]},"documentation":null,"functionSelector":"893d20e8","id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"18007:2:0"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1083,"src":"18033:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"18033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18032:9:0"},"scope":2532,"src":"17990:95:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1090,"nodeType":"Block","src":"18143:35:0","statements":[{"expression":{"argumentTypes":null,"id":1088,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"18161:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1087,"id":1089,"nodeType":"Return","src":"18154:16:0"}]},"documentation":null,"functionSelector":"313ce567","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"18110:2:0"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1091,"src":"18136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1085,"name":"uint8","nodeType":"ElementaryTypeName","src":"18136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"18135:7:0"},"scope":2532,"src":"18093:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1098,"nodeType":"Block","src":"18242:33:0","statements":[{"expression":{"argumentTypes":null,"id":1096,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"18260:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1095,"id":1097,"nodeType":"Return","src":"18253:14:0"}]},"documentation":null,"functionSelector":"95d89b41","id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1092,"nodeType":"ParameterList","parameters":[],"src":"18201:2:0"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1099,"src":"18227:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1093,"name":"string","nodeType":"ElementaryTypeName","src":"18227:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"18226:15:0"},"scope":2532,"src":"18186:89:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1106,"nodeType":"Block","src":"18337:31:0","statements":[{"expression":{"argumentTypes":null,"id":1104,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"18355:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1103,"id":1105,"nodeType":"Return","src":"18348:12:0"}]},"documentation":null,"functionSelector":"06fdde03","id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"18296:2:0"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1107,"src":"18322:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1101,"name":"string","nodeType":"ElementaryTypeName","src":"18322:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"18321:15:0"},"scope":2532,"src":"18283:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1114,"nodeType":"Block","src":"18431:38:0","statements":[{"expression":{"argumentTypes":null,"id":1112,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"18449:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1111,"id":1113,"nodeType":"Return","src":"18442:19:0"}]},"documentation":null,"functionSelector":"18160ddd","id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"18396:2:0"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1115,"src":"18422:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"18422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18421:9:0"},"scope":2532,"src":"18376:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1126,"nodeType":"Block","src":"18543:44:0","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1122,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"18561:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1124,"indexExpression":{"argumentTypes":null,"id":1123,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"18571:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18561:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1121,"id":1125,"nodeType":"Return","src":"18554:25:0"}]},"documentation":null,"functionSelector":"70a08231","id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":1127,"src":"18496:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"18496:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18495:17:0"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1127,"src":"18534:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"18534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18533:9:0"},"scope":2532,"src":"18477:110:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1145,"nodeType":"Block","src":"18672:83:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1137,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"18693:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18693:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1139,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"18707:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1140,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18718:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"18683:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18683:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"18683:42:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18743:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1135,"id":1144,"nodeType":"Return","src":"18736:11:0"}]},"documentation":null,"functionSelector":"a9059cbb","id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":1146,"src":"18613:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"18613:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1146,"src":"18632:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"18632:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18612:35:0"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1146,"src":"18666:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1133,"name":"bool","nodeType":"ElementaryTypeName","src":"18666:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"18665:6:0"},"scope":2532,"src":"18595:160:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1161,"nodeType":"Block","src":"18846:53:0","statements":[{"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1155,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"18864:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1157,"indexExpression":{"argumentTypes":null,"id":1156,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"18876:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18864:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1159,"indexExpression":{"argumentTypes":null,"id":1158,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"18883:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18864:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1160,"nodeType":"Return","src":"18857:34:0"}]},"documentation":null,"functionSelector":"dd62ed3e","id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1162,"src":"18782:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"18782:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1162,"src":"18797:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"18797:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"18781:32:0"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1162,"src":"18837:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"18837:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18836:9:0"},"scope":2532,"src":"18763:136:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1180,"nodeType":"Block","src":"18981:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1172,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19001:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19001:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1174,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"19015:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1175,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"19024:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"18992:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18992:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"ExpressionStatement","src":"18992:39:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19049:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1170,"id":1179,"nodeType":"Return","src":"19042:11:0"}]},"documentation":null,"functionSelector":"095ea7b3","id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1181,"src":"18924:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"18924:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1181,"src":"18941:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"18941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"18923:33:0"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1181,"src":"18975:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"18975:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"18974:6:0"},"scope":2532,"src":"18907:154:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1216,"nodeType":"Block","src":"19166:209:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1193,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"19187:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1194,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"19195:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"19206:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1192,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"19177:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19177:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"19177:36:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1199,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"19233:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1200,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19241:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"19293:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19301:42:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""},"value":"BEP20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e","typeString":"literal_string \"BEP20: transfer amount exceeds allowance\""}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1202,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"19255:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1204,"indexExpression":{"argumentTypes":null,"id":1203,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"19267:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19255:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1207,"indexExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1205,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19275:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19275:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19255:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":903,"src":"19255:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19255:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1198,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"19224:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19224:121:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"ExpressionStatement","src":"19224:121:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19363:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1191,"id":1215,"nodeType":"Return","src":"19356:11:0"}]},"documentation":null,"functionSelector":"23b872dd","id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":1217,"src":"19091:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"19091:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":1217,"src":"19107:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"19107:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1217,"src":"19126:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"19126:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19090:51:0"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1217,"src":"19160:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"19160:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19159:6:0"},"scope":2532,"src":"19069:306:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1243,"nodeType":"Block","src":"19469:124:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19489:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19489:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1229,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"19503:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1237,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"19551:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1230,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"19512:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1233,"indexExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19524:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19524:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19512:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1235,"indexExpression":{"argumentTypes":null,"id":1234,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"19538:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19512:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":858,"src":"19512:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19512:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1226,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"19480:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19480:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"ExpressionStatement","src":"19480:83:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19581:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1225,"id":1242,"nodeType":"Return","src":"19574:11:0"}]},"documentation":null,"functionSelector":"39509351","id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1244,"src":"19410:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"19410:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","overrides":null,"scope":1244,"src":"19427:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"19427:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19409:37:0"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1244,"src":"19463:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1223,"name":"bool","nodeType":"ElementaryTypeName","src":"19463:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19462:6:0"},"scope":2532,"src":"19383:210:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1271,"nodeType":"Block","src":"19692:170:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1254,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19712:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19712:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1256,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"19726:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1264,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"19774:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19791:39:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""},"value":"BEP20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22","typeString":"literal_string \"BEP20: decreased allowance below zero\""}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1257,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"19735:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1260,"indexExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1258,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"19747:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19747:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19735:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1262,"indexExpression":{"argumentTypes":null,"id":1261,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"19761:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19735:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":903,"src":"19735:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19735:96:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"19703:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19703:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"19703:129:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19850:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1252,"id":1270,"nodeType":"Return","src":"19843:11:0"}]},"documentation":null,"functionSelector":"a457c2d7","id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1272,"src":"19628:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"19628:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","overrides":null,"scope":1272,"src":"19645:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"19645:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19627:42:0"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1272,"src":"19686:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"19686:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"19685:6:0"},"scope":2532,"src":"19601:261:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1283,"nodeType":"Block","src":"19909:43:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19926:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"19926:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1280,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"19937:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"19920:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19920:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"19920:24:0"}]},"documentation":null,"functionSelector":"42966c68","id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1284,"src":"19884:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"19884:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19883:16:0"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"19909:0:0"},"scope":2532,"src":"19870:82:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1328,"nodeType":"Block","src":"20017:251:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1292,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"20036:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20055:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20047:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"20047:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20047:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20036:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a206d696e7420746f20746865207a65726f2061646472657373","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20059:33:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""},"value":"BEP20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3","typeString":"literal_string \"BEP20: mint to the zero address\""}],"id":1291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20028:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20028:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"ExpressionStatement","src":"20028:65:0"},{"expression":{"argumentTypes":null,"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1301,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"20106:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1304,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"20138:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1302,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"20121:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":858,"src":"20121:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20121:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20106:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"nodeType":"ExpressionStatement","src":"20106:39:0"},{"expression":{"argumentTypes":null,"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1308,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"20156:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1310,"indexExpression":{"argumentTypes":null,"id":1309,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"20166:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20156:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"20200:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1311,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"20177:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1313,"indexExpression":{"argumentTypes":null,"id":1312,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"20187:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20177:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":858,"src":"20177:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20177:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20156:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"nodeType":"ExpressionStatement","src":"20156:51:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20240:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20232:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"20232:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20232:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"20244:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"20253:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"20223:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20223:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1327,"nodeType":"EmitStatement","src":"20218:42:0"}]},"documentation":null,"id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":1329,"src":"19975:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"19975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1329,"src":"19992:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"19992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"19974:33:0"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"20017:0:0"},"scope":2532,"src":"19960:308:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"20333:291:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1337,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"20352:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20371:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"20363:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20352:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20375:35:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""},"value":"BEP20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855","typeString":"literal_string \"BEP20: burn from the zero address\""}],"id":1336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20344:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20344:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"20344:67:0"},{"expression":{"argumentTypes":null,"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1346,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"20424:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1348,"indexExpression":{"argumentTypes":null,"id":1347,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"20434:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20424:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1353,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"20468:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20476:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""},"value":"BEP20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032","typeString":"literal_string \"BEP20: burn amount exceeds balance\""}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1349,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"20445:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1351,"indexExpression":{"argumentTypes":null,"id":1350,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"20455:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20445:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":903,"src":"20445:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20445:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20424:89:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ExpressionStatement","src":"20424:89:0"},{"expression":{"argumentTypes":null,"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1358,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"20524:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1361,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"20556:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1359,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"20539:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":875,"src":"20539:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20539:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20524:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1364,"nodeType":"ExpressionStatement","src":"20524:39:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1366,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"20588:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20605:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20597:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"20597:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20597:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1371,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"20609:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"20579:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20579:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"EmitStatement","src":"20574:42:0"}]},"documentation":null,"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":1375,"src":"20291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"20291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1375,"src":"20308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"20308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20290:33:0"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"20333:0:0"},"scope":2532,"src":"20276:348:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1418,"nodeType":"Block","src":"20707:263:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"20726:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20743:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20735:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"20735:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20735:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20726:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20747:38:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""},"value":"BEP20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4","typeString":"literal_string \"BEP20: approve from the zero address\""}],"id":1384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20718:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20718:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"20718:68:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1395,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"20805:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20824:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20816:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"20816:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20816:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20805:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a20617070726f766520746f20746865207a65726f2061646472657373","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20828:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""},"value":"BEP20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5","typeString":"literal_string \"BEP20: approve to the zero address\""}],"id":1394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20797:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20797:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"20797:68:0"},{"expression":{"argumentTypes":null,"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1404,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"20878:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1407,"indexExpression":{"argumentTypes":null,"id":1405,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"20890:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20878:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1408,"indexExpression":{"argumentTypes":null,"id":1406,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"20897:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20878:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1409,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"20908:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20878:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"nodeType":"ExpressionStatement","src":"20878:36:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1413,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"20939:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1414,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"20946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"20955:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1412,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"20930:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20930:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"EmitStatement","src":"20925:37:0"}]},"documentation":null,"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","overrides":null,"scope":1419,"src":"20650:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"20650:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","overrides":null,"scope":1419,"src":"20665:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"20665:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1419,"src":"20682:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"20682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20649:48:0"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"20707:0:0"},"scope":2532,"src":"20632:338:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"21040:171:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"21057:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1428,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"21066:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1426,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"21051:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21051:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"21051:22:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1432,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"21093:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1433,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"21102:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21102:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"21155:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21163:38:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""},"value":"BEP20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88","typeString":"literal_string \"BEP20: burn amount exceeds allowance\""}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1435,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"21116:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1437,"indexExpression":{"argumentTypes":null,"id":1436,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"21128:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21116:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1440,"indexExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":1438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"21137:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21137:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21116:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":903,"src":"21116:38:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21116:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1431,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"21084:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21084:119:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"21084:119:0"}]},"documentation":null,"id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"_burnFrom","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","overrides":null,"scope":1448,"src":"20998:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"20998:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":1448,"src":"21015:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"21015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20997:33:0"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"21040:0:0"},"scope":2532,"src":"20979:232:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"anonymous":false,"documentation":null,"id":1454,"name":"ExcludeFromFee","nodeType":"EventDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","overrides":null,"scope":1454,"src":"21398:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"21398:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1452,"indexed":false,"mutability":"mutable","name":"isExlcude","nodeType":"VariableDeclaration","overrides":null,"scope":1454,"src":"21412:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1451,"name":"bool","nodeType":"ElementaryTypeName","src":"21412:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21397:30:0"},"src":"21377:51:0"},{"anonymous":false,"documentation":null,"id":1458,"name":"SetSellFee","nodeType":"EventDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"indexed":false,"mutability":"mutable","name":"sellFees","nodeType":"VariableDeclaration","overrides":null,"scope":1458,"src":"21451:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_memory_ptr","typeString":"struct BALLS.Fees"},"typeName":{"contractScope":null,"id":1455,"name":"Fees","nodeType":"UserDefinedTypeName","referencedDeclaration":1477,"src":"21451:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage_ptr","typeString":"struct BALLS.Fees"}},"value":null,"visibility":"internal"}],"src":"21450:15:0"},"src":"21434:32:0"},{"anonymous":false,"documentation":null,"id":1462,"name":"SetBuyFee","nodeType":"EventDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"indexed":false,"mutability":"mutable","name":"buyFees","nodeType":"VariableDeclaration","overrides":null,"scope":1462,"src":"21488:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_memory_ptr","typeString":"struct BALLS.Fees"},"typeName":{"contractScope":null,"id":1459,"name":"Fees","nodeType":"UserDefinedTypeName","referencedDeclaration":1477,"src":"21488:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage_ptr","typeString":"struct BALLS.Fees"}},"value":null,"visibility":"internal"}],"src":"21487:14:0"},"src":"21472:30:0"},{"anonymous":false,"documentation":null,"id":1468,"name":"SetBlackList","nodeType":"EventDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","overrides":null,"scope":1468,"src":"21527:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"21527:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1466,"indexed":false,"mutability":"mutable","name":"isBlacklist","nodeType":"VariableDeclaration","overrides":null,"scope":1468,"src":"21541:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1465,"name":"bool","nodeType":"ElementaryTypeName","src":"21541:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21526:32:0"},"src":"21508:51:0"},{"canonicalName":"BALLS.Fees","id":1477,"members":[{"constant":false,"id":1470,"mutability":"mutable","name":"marketing","nodeType":"VariableDeclaration","overrides":null,"scope":1477,"src":"21590:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"21590:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"gameWallet","nodeType":"VariableDeclaration","overrides":null,"scope":1477,"src":"21618:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"21618:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":null,"scope":1477,"src":"21647:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"21647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"poolfee","nodeType":"VariableDeclaration","overrides":null,"scope":1477,"src":"21675:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"21675:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"Fees","nodeType":"StructDefinition","scope":2532,"src":"21567:131:0","visibility":"public"},{"constant":false,"functionSelector":"a5ece941","id":1479,"mutability":"mutable","name":"marketingAddress","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21758:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"21758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"a168d873","id":1481,"mutability":"mutable","name":"gameAddress","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21796:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"21796:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"1755ff21","id":1483,"mutability":"mutable","name":"poolAddress","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21829:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"21829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"f5034b0a","id":1485,"mutability":"mutable","name":"babyPoolAddress","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21862:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"21862:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"421ea58b","id":1487,"mutability":"mutable","name":"PancakeSwapRouter","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21946:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"},"typeName":{"contractScope":null,"id":1486,"name":"IPancakeSwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":691,"src":"21946:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"c1258a40","id":1489,"mutability":"mutable","name":"PancakeSwapV2Pair","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"21996:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"21996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"public"},{"constant":false,"id":1491,"mutability":"mutable","name":"inSwapAndLiquify","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22037:21:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1490,"name":"bool","nodeType":"ElementaryTypeName","src":"22037:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"22086:89:0","statements":[{"expression":{"argumentTypes":null,"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1493,"name":"inSwapAndLiquify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"22097:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22116:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"22097:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1496,"nodeType":"ExpressionStatement","src":"22097:23:0"},{"id":1497,"nodeType":"PlaceholderStatement","src":"22131:1:0"},{"expression":{"argumentTypes":null,"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1498,"name":"inSwapAndLiquify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"22143:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22162:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"22143:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1501,"nodeType":"ExpressionStatement","src":"22143:24:0"}]},"documentation":null,"id":1503,"name":"lockTheSwap","nodeType":"ModifierDefinition","overrides":null,"parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"22086:0:0"},"src":"22065:110:0","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"4a74bb02","id":1506,"mutability":"mutable","name":"swapAndLiquifyEnabled","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22183:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"22183:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"argumentTypes":null,"hexValue":"74727565","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22219:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"functionSelector":"4ada218b","id":1509,"mutability":"mutable","name":"tradingEnabled","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22230:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1507,"name":"bool","nodeType":"ElementaryTypeName","src":"22230:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"argumentTypes":null,"hexValue":"74727565","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22259:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"functionSelector":"e0f3ccf5","id":1511,"mutability":"mutable","name":"sellFees","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22316:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees"},"typeName":{"contractScope":null,"id":1510,"name":"Fees","nodeType":"UserDefinedTypeName","referencedDeclaration":1477,"src":"22316:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage_ptr","typeString":"struct BALLS.Fees"}},"value":null,"visibility":"public"},{"constant":false,"functionSelector":"e4748b9e","id":1513,"mutability":"mutable","name":"buyFees","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22343:19:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees"},"typeName":{"contractScope":null,"id":1512,"name":"Fees","nodeType":"UserDefinedTypeName","referencedDeclaration":1477,"src":"22343:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage_ptr","typeString":"struct BALLS.Fees"}},"value":null,"visibility":"public"},{"constant":false,"id":1517,"mutability":"mutable","name":"isExcludeFromFee","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22371:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1516,"keyType":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"22379:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22371:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1515,"name":"bool","nodeType":"ElementaryTypeName","src":"22388:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"isExcludeFromLimit","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22417:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1520,"keyType":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"22425:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22417:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1519,"name":"bool","nodeType":"ElementaryTypeName","src":"22434:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"blacklist","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22467:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1524,"keyType":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"22475:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22467:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1523,"name":"bool","nodeType":"ElementaryTypeName","src":"22486:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"value":null,"visibility":"internal"},{"constant":false,"functionSelector":"7d1db4a5","id":1530,"mutability":"mutable","name":"_maxTxAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22553:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint","nodeType":"ElementaryTypeName","src":"22553:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"316536","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22580:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"31653138","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22586:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22580:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"6c0a24eb","id":1535,"mutability":"mutable","name":"_maxWalletAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22597:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint","nodeType":"ElementaryTypeName","src":"22597:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_2000000000000000000000000_by_1","typeString":"int_const 2000000000000000000000000"},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"326536","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22628:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2e6"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"31653138","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22634:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22628:10:0","typeDescriptions":{"typeIdentifier":"t_rational_2000000000000000000000000_by_1","typeString":"int_const 2000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"d12a7688","id":1540,"mutability":"mutable","name":"numTokensSellToAddToLiquidity","nodeType":"VariableDeclaration","overrides":null,"scope":2532,"src":"22645:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint","nodeType":"ElementaryTypeName","src":"22645:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22689:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"31653138","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22693:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22689:8:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"body":{"id":1676,"nodeType":"Block","src":"22914:1051:0","statements":[{"expression":{"argumentTypes":null,"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1545,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"22925:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"484150505953484942","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22933:11:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e33f09fd658797746882bd185584a4211169f0c37ccc190ac496dd8b1f23382b","typeString":"literal_string \"HAPPYSHIB\""},"value":"HAPPYSHIB"},"src":"22925:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1548,"nodeType":"ExpressionStatement","src":"22925:19:0"},{"expression":{"argumentTypes":null,"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1549,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"22955:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"484150505953484942","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22965:11:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e33f09fd658797746882bd185584a4211169f0c37ccc190ac496dd8b1f23382b","typeString":"literal_string \"HAPPYSHIB\""},"value":"HAPPYSHIB"},"src":"22955:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1552,"nodeType":"ExpressionStatement","src":"22955:21:0"},{"expression":{"argumentTypes":null,"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1553,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"22987:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"3138","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22999:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"22987:14:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1556,"nodeType":"ExpressionStatement","src":"22987:14:0"},{"expression":{"argumentTypes":null,"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1557,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"23012:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"316538","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23027:3:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"hexValue":"31653138","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23031:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"23027:8:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"}},"src":"23012:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"23012:23:0"},{"expression":{"argumentTypes":null,"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1563,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"23077:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1566,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23087:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23087:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23077:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1567,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"23101:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23077:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ExpressionStatement","src":"23077:36:0"},{"expression":{"argumentTypes":null,"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1570,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23126:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"23126:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"36","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23146:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"23126:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"nodeType":"ExpressionStatement","src":"23126:21:0"},{"expression":{"argumentTypes":null,"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1576,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23158:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"23158:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23179:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23158:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"nodeType":"ExpressionStatement","src":"23158:22:0"},{"expression":{"argumentTypes":null,"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1582,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23191:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"23191:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"32","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23211:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"23191:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ExpressionStatement","src":"23191:21:0"},{"expression":{"argumentTypes":null,"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1588,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23223:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"23223:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23241:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23223:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1593,"nodeType":"ExpressionStatement","src":"23223:19:0"},{"expression":{"argumentTypes":null,"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1594,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"23255:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"23255:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"38","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23276:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"23255:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"23255:22:0"},{"expression":{"argumentTypes":null,"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1600,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"23288:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"23288:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23310:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23288:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1605,"nodeType":"ExpressionStatement","src":"23288:23:0"},{"expression":{"argumentTypes":null,"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1606,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"23322:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"23322:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"32","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23343:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"23322:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"23322:22:0"},{"expression":{"argumentTypes":null,"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1612,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23355:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"23355:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23373:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23355:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"23355:19:0"},{"assignments":[1619],"declarations":[{"constant":false,"id":1619,"mutability":"mutable","name":"_PancakeSwapRouter","nodeType":"VariableDeclaration","overrides":null,"scope":1676,"src":"23387:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"},"typeName":{"contractScope":null,"id":1618,"name":"IPancakeSwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":691,"src":"23387:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"value":null,"visibility":"internal"}],"id":1623,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1621,"name":"_RouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"23446:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"IPancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"23427:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapRouter_$691_$","typeString":"type(contract IPancakeSwapRouter)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23427:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"nodeType":"VariableDeclarationStatement","src":"23387:74:0"},{"expression":{"argumentTypes":null,"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1624,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"23472:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1625,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"23492:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"src":"23472:38:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1627,"nodeType":"ExpressionStatement","src":"23472:38:0"},{"expression":{"argumentTypes":null,"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1628,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"23521:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1637,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23610:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23602:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"23602:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23602:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1639,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"23617:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":313,"src":"23617:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23617:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1630,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"23561:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":308,"src":"23561:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23561:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1629,"name":"IPancakeSwapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"23541:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapFactory_$63_$","typeString":"type(contract IPancakeSwapFactory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23541:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapFactory_$63","typeString":"contract IPancakeSwapFactory"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createPair","nodeType":"MemberAccess","referencedDeclaration":52,"src":"23541:60:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) external returns (address)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23541:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23521:122:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1644,"nodeType":"ExpressionStatement","src":"23521:122:0"},{"expression":{"argumentTypes":null,"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1645,"name":"isExcludeFromLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"23731:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1648,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23750:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23750:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23731:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23764:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"23731:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"nodeType":"ExpressionStatement","src":"23731:37:0"},{"expression":{"argumentTypes":null,"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1652,"name":"isExcludeFromLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"23779:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1654,"indexExpression":{"argumentTypes":null,"id":1653,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"23798:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23779:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23819:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"23779:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1657,"nodeType":"ExpressionStatement","src":"23779:44:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23858:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23850:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"23850:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23850:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23862:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23862:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1665,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"23874:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1658,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"23841:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23841:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"EmitStatement","src":"23836:51:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1669,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"23913:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}],"id":1668,"name":"SetBuyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"23903:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Fees_$1477_memory_ptr_$returns$__$","typeString":"function (struct BALLS.Fees memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23903:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"EmitStatement","src":"23898:23:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1673,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"23948:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}],"id":1672,"name":"SetSellFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"23937:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Fees_$1477_memory_ptr_$returns$__$","typeString":"function (struct BALLS.Fees memory)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23937:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"EmitStatement","src":"23932:25:0"}]},"documentation":null,"id":1677,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"_RouterAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1677,"src":"22883:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"22883:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"22882:24:0"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"22914:0:0"},"scope":2532,"src":"22870:1095:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1711,"nodeType":"Block","src":"24098:293:0","statements":[{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"_PancakeSwapRouter","nodeType":"VariableDeclaration","overrides":null,"scope":1711,"src":"24109:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"},"typeName":{"contractScope":null,"id":1684,"name":"IPancakeSwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":691,"src":"24109:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"value":null,"visibility":"internal"}],"id":1689,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1687,"name":"_RouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"24168:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1686,"name":"IPancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"24149:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapRouter_$691_$","typeString":"type(contract IPancakeSwapRouter)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24149:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"nodeType":"VariableDeclarationStatement","src":"24109:74:0"},{"expression":{"argumentTypes":null,"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1690,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"24194:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1691,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"24214:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"src":"24194:38:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1693,"nodeType":"ExpressionStatement","src":"24194:38:0"},{"expression":{"argumentTypes":null,"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1694,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"24243:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1703,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24332:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24324:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"24324:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24324:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1705,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"24339:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":313,"src":"24339:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24339:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1696,"name":"_PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"24283:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":308,"src":"24283:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24283:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1695,"name":"IPancakeSwapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"24263:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeSwapFactory_$63_$","typeString":"type(contract IPancakeSwapFactory)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24263:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapFactory_$63","typeString":"contract IPancakeSwapFactory"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createPair","nodeType":"MemberAccess","referencedDeclaration":52,"src":"24263:60:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) external returns (address)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24263:102:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24243:122:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1710,"nodeType":"ExpressionStatement","src":"24243:122:0"}]},"documentation":null,"functionSelector":"28ec13ee","id":1712,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1682,"modifierName":{"argumentTypes":null,"id":1681,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"24088:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"24088:9:0"}],"name":"setInitialAddresses","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"_RouterAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1712,"src":"24055:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"24055:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"24054:24:0"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"24098:0:0"},"scope":2532,"src":"24026:365:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1735,"nodeType":"Block","src":"24515:137:0","statements":[{"expression":{"argumentTypes":null,"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1723,"name":"marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"24526:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1724,"name":"_marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"24545:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24526:36:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1726,"nodeType":"ExpressionStatement","src":"24526:36:0"},{"expression":{"argumentTypes":null,"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1727,"name":"gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"24580:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1728,"name":"_gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"24594:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24580:26:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1730,"nodeType":"ExpressionStatement","src":"24580:26:0"},{"expression":{"argumentTypes":null,"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1731,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"24618:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1732,"name":"_poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"24632:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24618:26:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1734,"nodeType":"ExpressionStatement","src":"24618:26:0"}]},"documentation":null,"functionSelector":"aa1ef598","id":1736,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1721,"modifierName":{"argumentTypes":null,"id":1720,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"24505:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"24505:9:0"}],"name":"setFeeAddresses","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"_marketingAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1736,"src":"24425:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"24425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"_gameAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1736,"src":"24452:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"24452:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"_poolAddress","nodeType":"VariableDeclaration","overrides":null,"scope":1736,"src":"24474:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"24474:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"24423:72:0"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"24515:0:0"},"scope":2532,"src":"24399:253:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1747,"nodeType":"Block","src":"24721:45:0","statements":[{"expression":{"argumentTypes":null,"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1743,"name":"_maxTxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"24732:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1744,"name":"maxTxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"24747:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24732:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1746,"nodeType":"ExpressionStatement","src":"24732:26:0"}]},"documentation":null,"functionSelector":"ec28438a","id":1748,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1741,"modifierName":{"argumentTypes":null,"id":1740,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"24711:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"24711:9:0"}],"name":"setMaxTxAmount","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"maxTxAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1748,"src":"24684:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint","nodeType":"ElementaryTypeName","src":"24684:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"24683:18:0"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"24721:0:0"},"scope":2532,"src":"24660:106:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1759,"nodeType":"Block","src":"24843:53:0","statements":[{"expression":{"argumentTypes":null,"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1755,"name":"_maxWalletAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24854:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1756,"name":"maxWalletAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"24873:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24854:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ExpressionStatement","src":"24854:34:0"}]},"documentation":null,"functionSelector":"27a14fc2","id":1760,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1753,"modifierName":{"argumentTypes":null,"id":1752,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"24833:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"24833:9:0"}],"name":"setMaxWalletAmount","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"maxWalletAmount","nodeType":"VariableDeclaration","overrides":null,"scope":1760,"src":"24802:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint","nodeType":"ElementaryTypeName","src":"24802:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"24801:22:0"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"24843:0:0"},"scope":2532,"src":"24774:122:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1801,"nodeType":"Block","src":"25034:213:0","statements":[{"expression":{"argumentTypes":null,"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1773,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"25045:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"25045:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1776,"name":"_marketingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"25065:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25045:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1778,"nodeType":"ExpressionStatement","src":"25045:33:0"},{"expression":{"argumentTypes":null,"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1779,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"25089:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"25089:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1782,"name":"_gameWalletFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"25110:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"nodeType":"ExpressionStatement","src":"25089:35:0"},{"expression":{"argumentTypes":null,"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1785,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"25135:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"25135:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1788,"name":"_liquidityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"25155:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25135:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"25135:33:0"},{"expression":{"argumentTypes":null,"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1791,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"25179:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"25179:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1794,"name":"_poolfee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"25197:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25179:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1796,"nodeType":"ExpressionStatement","src":"25179:26:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1798,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"25231:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}],"id":1797,"name":"SetBuyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"25221:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Fees_$1477_memory_ptr_$returns$__$","typeString":"function (struct BALLS.Fees memory)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25221:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"EmitStatement","src":"25216:23:0"}]},"documentation":null,"functionSelector":"3e341212","id":1802,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1771,"modifierName":{"argumentTypes":null,"id":1770,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"25024:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"25024:9:0"}],"name":"setbuyFee","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"_marketingFee","nodeType":"VariableDeclaration","overrides":null,"scope":1802,"src":"24927:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"24927:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"_gameWalletFee","nodeType":"VariableDeclaration","overrides":null,"scope":1802,"src":"24950:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"24950:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"_liquidityFee","nodeType":"VariableDeclaration","overrides":null,"scope":1802,"src":"24974:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"24974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"_poolfee","nodeType":"VariableDeclaration","overrides":null,"scope":1802,"src":"24997:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"24997:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"24926:88:0"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"25034:0:0"},"scope":2532,"src":"24908:339:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1843,"nodeType":"Block","src":"25382:219:0","statements":[{"expression":{"argumentTypes":null,"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1815,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25393:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"25393:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1818,"name":"_marketingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"25414:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25393:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"25393:34:0"},{"expression":{"argumentTypes":null,"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1821,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25438:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"25438:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1824,"name":"_gameWalletFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"25460:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25438:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"25438:36:0"},{"expression":{"argumentTypes":null,"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1827,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25485:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"25485:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1830,"name":"_liquidityFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"25506:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25485:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"25485:34:0"},{"expression":{"argumentTypes":null,"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1833,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25530:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"25530:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1836,"name":"_poolfee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"25549:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25530:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"nodeType":"ExpressionStatement","src":"25530:27:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1840,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25584:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}],"id":1839,"name":"SetSellFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"25573:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Fees_$1477_memory_ptr_$returns$__$","typeString":"function (struct BALLS.Fees memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25573:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1842,"nodeType":"EmitStatement","src":"25568:25:0"}]},"documentation":null,"functionSelector":"c5820ad0","id":1844,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1813,"modifierName":{"argumentTypes":null,"id":1812,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"25372:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"25372:9:0"}],"name":"setsellFee","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"_marketingFee","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"25275:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"25275:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"_gameWalletFee","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"25298:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"25298:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"_liquidityFee","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"25322:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"25322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"_poolfee","nodeType":"VariableDeclaration","overrides":null,"scope":1844,"src":"25345:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"25345:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25274:88:0"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[],"src":"25382:0:0"},"scope":2532,"src":"25255:346:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1855,"nodeType":"Block","src":"25676:51:0","statements":[{"expression":{"argumentTypes":null,"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":1851,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"25687:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1852,"name":"_tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"25704:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25687:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"ExpressionStatement","src":"25687:32:0"}]},"documentation":null,"functionSelector":"7439c236","id":1856,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1849,"modifierName":{"argumentTypes":null,"id":1848,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"25666:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"25666:9:0"}],"name":"setTradingEnable","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"_tradingEnabled","nodeType":"VariableDeclaration","overrides":null,"scope":1856,"src":"25635:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1845,"name":"bool","nodeType":"ElementaryTypeName","src":"25635:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"25634:22:0"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"25676:0:0"},"scope":2532,"src":"25609:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1876,"nodeType":"Block","src":"25805:88:0","statements":[{"expression":{"argumentTypes":null,"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1865,"name":"blacklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"25816:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1867,"indexExpression":{"argumentTypes":null,"id":1866,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"25826:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25816:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1868,"name":"_isBlack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"25834:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25816:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"ExpressionStatement","src":"25816:26:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1872,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"25871:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1873,"name":"_isBlack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"25876:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1871,"name":"SetBlackList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"25858:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25858:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"EmitStatement","src":"25853:32:0"}]},"documentation":null,"functionSelector":"153b0d1e","id":1877,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1863,"modifierName":{"argumentTypes":null,"id":1862,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"25795:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"25795:9:0"}],"name":"setBlacklist","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","overrides":null,"scope":1877,"src":"25757:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"25757:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"_isBlack","nodeType":"VariableDeclaration","overrides":null,"scope":1877,"src":"25771:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"25771:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"25756:29:0"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[],"src":"25805:0:0"},"scope":2532,"src":"25735:158:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1894,"nodeType":"Block","src":"25955:107:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1882,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25973:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"25973:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1884,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"25994:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"25994:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25973:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1887,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"26016:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"26016:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25973:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1890,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"26037:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"26037:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25973:80:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1881,"id":1893,"nodeType":"Return","src":"25966:87:0"}]},"documentation":null,"functionSelector":"47cb8c04","id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalSellFee","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"25925:2:0"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1895,"src":"25949:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint","nodeType":"ElementaryTypeName","src":"25949:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"25948:6:0"},"scope":2532,"src":"25901:161:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1912,"nodeType":"Block","src":"26127:103:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1900,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"26145:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"26145:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1902,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"26165:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"26165:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26145:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1905,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"26186:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"26186:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26145:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1908,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"26206:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":1909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"26206:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26145:76:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1899,"id":1911,"nodeType":"Return","src":"26138:83:0"}]},"documentation":null,"functionSelector":"1ebe8be8","id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBuyFee","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1896,"nodeType":"ParameterList","parameters":[],"src":"26097:2:0"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":1913,"src":"26121:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint","nodeType":"ElementaryTypeName","src":"26121:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26120:6:0"},"scope":2532,"src":"26074:156:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1933,"nodeType":"Block","src":"26377:101:0","statements":[{"expression":{"argumentTypes":null,"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1922,"name":"isExcludeFromFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"26388:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1924,"indexExpression":{"argumentTypes":null,"id":1923,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"26405:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26388:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1925,"name":"_isExclude","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"26413:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26388:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"ExpressionStatement","src":"26388:35:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1929,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"26454:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1930,"name":"_isExclude","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"26459:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1928,"name":"ExcludeFromFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"26439:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26439:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"EmitStatement","src":"26434:36:0"}]},"documentation":null,"functionSelector":"799bec12","id":1934,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1920,"modifierName":{"argumentTypes":null,"id":1919,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"26367:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"26367:9:0"}],"name":"excludeAddressFromFee","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","overrides":null,"scope":1934,"src":"26328:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"26328:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"_isExclude","nodeType":"VariableDeclaration","overrides":null,"scope":1934,"src":"26341:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1916,"name":"bool","nodeType":"ElementaryTypeName","src":"26341:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26327:30:0"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"26377:0:0"},"scope":2532,"src":"26297:181:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1949,"nodeType":"Block","src":"26625:56:0","statements":[{"expression":{"argumentTypes":null,"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1943,"name":"isExcludeFromLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"26636:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1945,"indexExpression":{"argumentTypes":null,"id":1944,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"26655:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26636:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1946,"name":"_isExclude","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"26663:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26636:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1948,"nodeType":"ExpressionStatement","src":"26636:37:0"}]},"documentation":null,"functionSelector":"061dc8ef","id":1950,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":1941,"modifierName":{"argumentTypes":null,"id":1940,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"26615:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"26615:9:0"}],"name":"excludeAddressFromLimit","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","overrides":null,"scope":1950,"src":"26576:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"26576:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"_isExclude","nodeType":"VariableDeclaration","overrides":null,"scope":1950,"src":"26589:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"26589:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26575:30:0"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"26625:0:0"},"scope":2532,"src":"26543:138:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2372,"nodeType":"Block","src":"26810:3510:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1960,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"26829:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26847:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26839:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"26839:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26839:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"26829:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26851:39:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""},"value":"BEP20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57","typeString":"literal_string \"BEP20: transfer from the zero address\""}],"id":1959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26821:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26821:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"ExpressionStatement","src":"26821:70:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1970,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"26910:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26931:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26923:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"26923:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26923:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"26910:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26935:37:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""},"value":"BEP20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2","typeString":"literal_string \"BEP20: transfer to the zero address\""}],"id":1969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26902:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26902:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"26902:71:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26994:18:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1980,"name":"blacklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"26995:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1982,"indexExpression":{"argumentTypes":null,"id":1981,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27005:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26995:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27014:21:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1984,"name":"blacklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"27015:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1986,"indexExpression":{"argumentTypes":null,"id":1985,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"27025:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27015:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26994:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"626c61636b6c697374","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27036:11:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de","typeString":"literal_string \"blacklist\""},"value":"blacklist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de","typeString":"literal_string \"blacklist\""}],"id":1979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26986:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26986:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"ExpressionStatement","src":"26986:62:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1992,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27085:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1993,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"27095:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27085:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1995,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"27116:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":1996,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"27129:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27116:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27085:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27084:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27151:25:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2000,"name":"isExcludeFromFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"27152:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2002,"indexExpression":{"argumentTypes":null,"id":2001,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27169:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27152:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27084:92:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2018,"nodeType":"IfStatement","src":"27081:269:0","trueBody":{"id":2017,"nodeType":"Block","src":"27177:173:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2006,"name":"_maxTxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"27200:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2007,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"27214:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27200:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"42455032303a207472616e7366657220616d6f756e742065786365656473206d6178207472616e7366657220616d6f756e74","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27221:52:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e470233aa9eb19340d46d7d8ba48e1fb244e50d652e609bddda9be0b0a931585","typeString":"literal_string \"BEP20: transfer amount exceeds max transfer amount\""},"value":"BEP20: transfer amount exceeds max transfer amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e470233aa9eb19340d46d7d8ba48e1fb244e50d652e609bddda9be0b0a931585","typeString":"literal_string \"BEP20: transfer amount exceeds max transfer amount\""}],"id":2005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27192:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27192:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"27192:82:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2013,"name":"tradingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"27297:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"74726164696e672069732064697361626c6564","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27312:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_8e5cdd027c6a1692d41fff2df6d8e0faaf30b907b8692aea2089c8a3f4b38b65","typeString":"literal_string \"trading is disabled\""},"value":"trading is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e5cdd027c6a1692d41fff2df6d8e0faaf30b907b8692aea2089c8a3f4b38b65","typeString":"literal_string \"trading is disabled\""}],"id":2012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27289:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"ExpressionStatement","src":"27289:45:0"}]}},{"expression":{"argumentTypes":null,"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2019,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"27360:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2021,"indexExpression":{"argumentTypes":null,"id":2020,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27370:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27360:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"27402:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27410:40:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""},"value":"BEP20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73","typeString":"literal_string \"BEP20: transfer amount exceeds balance\""}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2022,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"27380:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2024,"indexExpression":{"argumentTypes":null,"id":2023,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27390:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27380:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":903,"src":"27380:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27380:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ExpressionStatement","src":"27360:91:0"},{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"recieveAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2372,"src":"27464:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint","nodeType":"ElementaryTypeName","src":"27464:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2034,"initialValue":{"argumentTypes":null,"id":2033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"27485:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27464:27:0"},{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"contractTokenBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2372,"src":"27504:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"27504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2043,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2040,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27553:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27545:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"27545:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27545:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2037,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"27535:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27535:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27504:55:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2044,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"27583:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2045,"name":"_maxTxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"27607:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27583:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2052,"nodeType":"IfStatement","src":"27580:112:0","trueBody":{"id":2051,"nodeType":"Block","src":"27630:62:0","statements":[{"expression":{"argumentTypes":null,"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2047,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"27645:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":2048,"name":"_maxTxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"27668:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27645:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"nodeType":"ExpressionStatement","src":"27645:35:0"}]}},{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"overMinTokenBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2372,"src":"27712:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2053,"name":"bool","nodeType":"ElementaryTypeName","src":"27712:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":2058,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2055,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"27739:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":2056,"name":"numTokensSellToAddToLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"27763:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27739:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27712:80:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2059,"name":"overMinTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"27823:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27859:17:0","subExpression":{"argumentTypes":null,"id":2060,"name":"inSwapAndLiquify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"27860:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27823:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2063,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"27893:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":2064,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"27903:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27893:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27823:97:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"id":2067,"name":"swapAndLiquifyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"27937:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27823:135:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2078,"nodeType":"IfStatement","src":"27805:324:0","trueBody":{"id":2077,"nodeType":"Block","src":"27970:159:0","statements":[{"expression":{"argumentTypes":null,"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2069,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"27985:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":2070,"name":"numTokensSellToAddToLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"28008:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27985:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"27985:52:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2074,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"28096:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2073,"name":"swapAndLiquify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"28081:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28081:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"28081:36:0"}]}},{"condition":{"argumentTypes":null,"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"28144:25:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2079,"name":"isExcludeFromFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"28145:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2081,"indexExpression":{"argumentTypes":null,"id":2080,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"28162:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28145:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2340,"nodeType":"IfStatement","src":"28141:1883:0","trueBody":{"id":2339,"nodeType":"Block","src":"28171:1853:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2083,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"28191:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2084,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"28201:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28191:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2210,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"29113:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"id":2211,"name":"PancakeSwapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"29126:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29113:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2337,"nodeType":"IfStatement","src":"29110:903:0","trueBody":{"id":2336,"nodeType":"Block","src":"29144:869:0","statements":[{"expression":{"argumentTypes":null,"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2213,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"29192:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29254:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"31303030","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29226:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":2217,"name":"getTotalSellFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"29231:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29231:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29226:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2214,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"29208:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29208:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29208:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29208:45:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29208:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29192:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2225,"nodeType":"ExpressionStatement","src":"29192:67:0"},{"expression":{"argumentTypes":null,"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2226,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"29282:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2228,"indexExpression":{"argumentTypes":null,"id":2227,"name":"marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"29292:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29282:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29348:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2231,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29324:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"29324:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2229,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29313:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29313:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29313:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29313:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29313:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29282:71:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ExpressionStatement","src":"29282:71:0"},{"expression":{"argumentTypes":null,"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2239,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"29372:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2241,"indexExpression":{"argumentTypes":null,"id":2240,"name":"gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"29382:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29372:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29434:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2244,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29409:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"29409:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29398:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29398:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29398:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29398:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29398:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29372:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"29372:67:0"},{"expression":{"argumentTypes":null,"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2252,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"29458:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2254,"indexExpression":{"argumentTypes":null,"id":2253,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"29468:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29458:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29517:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2257,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29495:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"29495:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2255,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29484:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29484:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29484:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29484:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29458:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"29458:64:0"},{"expression":{"argumentTypes":null,"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2265,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"29541:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2270,"indexExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2268,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"29559:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29551:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"29551:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29551:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29541:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29604:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2273,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29580:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"29580:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2271,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29569:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29569:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29569:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29569:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29569:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29541:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"29541:68:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2282,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"29644:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2283,"name":"marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"29652:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29705:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2286,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29681:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"29681:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29670:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29670:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29670:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29670:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29670:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2281,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"29635:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29635:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2293,"nodeType":"EmitStatement","src":"29630:81:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2295,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"29744:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2296,"name":"gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"29752:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29801:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2299,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29776:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"29776:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2297,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29765:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29765:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29765:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29765:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29765:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2294,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"29735:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29735:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2306,"nodeType":"EmitStatement","src":"29730:77:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2308,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"29840:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2309,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"29848:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29894:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2312,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29872:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"29872:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2310,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29861:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29861:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29861:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29861:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29861:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2307,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"29831:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29831:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"EmitStatement","src":"29826:74:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2321,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"29933:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2324,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"29949:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29941:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"29941:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29941:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29991:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2328,"name":"sellFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"29967:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"29967:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29956:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29956:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29956:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29956:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29956:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"29924:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29924:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"EmitStatement","src":"29919:78:0"}]}},"id":2338,"nodeType":"IfStatement","src":"28188:1825:0","trueBody":{"id":2209,"nodeType":"Block","src":"28219:872:0","statements":[{"expression":{"argumentTypes":null,"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":2086,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"28266:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28327:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"31303030","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28300:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":2090,"name":"getTotalBuyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"28305:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28305:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28300:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2087,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"28282:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28282:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28282:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28282:44:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28282:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28266:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"nodeType":"ExpressionStatement","src":"28266:66:0"},{"expression":{"argumentTypes":null,"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2099,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"28352:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2101,"indexExpression":{"argumentTypes":null,"id":2100,"name":"marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"28362:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28352:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28417:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2104,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28394:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"28394:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28383:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28383:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28383:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28383:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28383:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28352:70:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"28352:70:0"},{"expression":{"argumentTypes":null,"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2112,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"28441:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2114,"indexExpression":{"argumentTypes":null,"id":2113,"name":"gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"28451:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28441:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28502:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2117,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28478:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"28478:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2115,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28467:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28467:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28467:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28467:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28467:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28441:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2124,"nodeType":"ExpressionStatement","src":"28441:66:0"},{"expression":{"argumentTypes":null,"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2125,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"28526:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2127,"indexExpression":{"argumentTypes":null,"id":2126,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"28536:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28526:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28584:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2130,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28563:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"28563:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2128,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28552:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28552:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28552:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28552:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28552:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28526:63:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"28526:63:0"},{"expression":{"argumentTypes":null,"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2138,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"28608:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2143,"indexExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2141,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"28626:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28618:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"28618:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28618:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28608:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28670:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2146,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28647:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"28647:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28636:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28636:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28636:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28636:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28636:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28608:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"28608:67:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2155,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"28726:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2156,"name":"marketingAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"28734:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28786:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2159,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28763:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"marketing","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"28763:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2157,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28752:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28752:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28752:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28752:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28752:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2154,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"28717:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28717:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2166,"nodeType":"EmitStatement","src":"28712:80:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2168,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"28825:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2169,"name":"gameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"28833:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28881:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2172,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28857:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gameWallet","nodeType":"MemberAccess","referencedDeclaration":1472,"src":"28857:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2170,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28846:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28846:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28846:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28846:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28846:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2167,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"28816:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28816:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"EmitStatement","src":"28811:76:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2181,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"28920:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2182,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"28928:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28973:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2185,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"28952:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolfee","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"28952:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2183,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"28941:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"28941:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28941:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"28941:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28941:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"28911:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28911:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"EmitStatement","src":"28906:73:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2194,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"29012:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2197,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"29028:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29020:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"29020:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29020:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"31303030","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29069:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2201,"name":"buyFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"29046:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$1477_storage","typeString":"struct BALLS.Fees storage ref"}},"id":2202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"29046:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2199,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"29035:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":938,"src":"29035:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29035:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"29035:33:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29035:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"29003:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29003:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"EmitStatement","src":"28998:77:0"}]}}]}},{"expression":{"argumentTypes":null,"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2341,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"30036:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2343,"indexExpression":{"argumentTypes":null,"id":2342,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"30046:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30036:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2348,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"30084:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2344,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"30059:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2346,"indexExpression":{"argumentTypes":null,"id":2345,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"30069:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30059:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":858,"src":"30059:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30059:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30036:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ExpressionStatement","src":"30036:62:0"},{"condition":{"argumentTypes":null,"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30114:30:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2352,"name":"isExcludeFromLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"30115:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2354,"indexExpression":{"argumentTypes":null,"id":2353,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"30134:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30115:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2365,"nodeType":"IfStatement","src":"30111:129:0","trueBody":{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2357,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"30167:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2359,"indexExpression":{"argumentTypes":null,"id":2358,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"30177:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30167:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":2360,"name":"_maxWalletAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"30188:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30167:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"616c72656164792062616c616e6365206578697374206d617820616d6f756e74","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30205:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_990f69925f0e398602ae7cabb245a48ef8925b12d5f9bff5925e35dd9b168dd9","typeString":"literal_string \"already balance exist max amount\""},"value":"already balance exist max amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_990f69925f0e398602ae7cabb245a48ef8925b12d5f9bff5925e35dd9b168dd9","typeString":"literal_string \"already balance exist max amount\""}],"id":2356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30159:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30159:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2364,"nodeType":"ExpressionStatement","src":"30159:81:0"}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2367,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30279:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2368,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"30287:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2369,"name":"recieveAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"30298:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2366,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"30270:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30270:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2371,"nodeType":"EmitStatement","src":"30265:47:0"}]},"documentation":null,"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","overrides":null,"scope":2373,"src":"26750:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"26750:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","overrides":null,"scope":2373,"src":"26766:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"26766:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","overrides":null,"scope":2373,"src":"26785:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"26785:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26749:51:0"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[],"src":"26810:0:0"},"scope":2532,"src":"26731:3589:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"30402:460:0","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"half","nodeType":"VariableDeclaration","overrides":null,"scope":2428,"src":"30464:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"30464:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2386,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"32","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30504:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"argumentTypes":null,"id":2382,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"30479:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":955,"src":"30479:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30479:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30464:42:0"},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"otherHalf","nodeType":"VariableDeclaration","overrides":null,"scope":2428,"src":"30517:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"30517:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2393,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2391,"name":"half","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"30562:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2389,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"30537:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":875,"src":"30537:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30537:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30517:50:0"},{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"initialBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2428,"src":"30580:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"30580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2401,"initialValue":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"30613:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30605:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2396,"name":"address","nodeType":"ElementaryTypeName","src":"30605:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30605:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"30605:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30580:46:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2403,"name":"half","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"30656:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2402,"name":"swapTokensForEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"30639:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30639:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2405,"nodeType":"ExpressionStatement","src":"30639:22:0"},{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"newBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2428,"src":"30675:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"30675:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2416,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2414,"name":"initialBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"30722:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2410,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"30704:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30696:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"30696:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30696:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":null,"src":"30696:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":875,"src":"30696:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30696:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30675:62:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2418,"name":"otherHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"30763:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2419,"name":"newBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"30774:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2417,"name":"addLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"30750:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30750:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2421,"nodeType":"ExpressionStatement","src":"30750:35:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2423,"name":"half","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"30826:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2424,"name":"newBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"30832:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2425,"name":"otherHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"30844:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2422,"name":"SwapAndLiquify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"30811:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30811:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"EmitStatement","src":"30806:48:0"}]},"documentation":null,"id":2429,"implemented":true,"kind":"function","modifiers":[{"arguments":null,"id":2378,"modifierName":{"argumentTypes":null,"id":2377,"name":"lockTheSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"30390:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"30390:11:0"}],"name":"swapAndLiquify","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"contractTokenBalance","nodeType":"VariableDeclaration","overrides":null,"scope":2429,"src":"30352:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"30352:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"30351:30:0"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"30402:0:0"},"scope":2532,"src":"30328:534:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2488,"nodeType":"Block","src":"30925:427:0","statements":[{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","overrides":null,"scope":2488,"src":"30936:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"30936:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2437,"length":null,"nodeType":"ArrayTypeName","src":"30936:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"id":2444,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"32","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30974:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"30960:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"30964:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2440,"length":null,"nodeType":"ArrayTypeName","src":"30964:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30960:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"30936:40:0"},{"expression":{"argumentTypes":null,"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2445,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"30987:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2447,"indexExpression":{"argumentTypes":null,"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30992:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30987:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2450,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"31005:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30997:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2448,"name":"address","nodeType":"ElementaryTypeName","src":"30997:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30997:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"30987:23:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2453,"nodeType":"ExpressionStatement","src":"30987:23:0"},{"expression":{"argumentTypes":null,"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2454,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"31021:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2456,"indexExpression":{"argumentTypes":null,"hexValue":"31","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31026:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31021:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":2457,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"31031:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":313,"src":"31031:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31031:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31021:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2461,"nodeType":"ExpressionStatement","src":"31021:34:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2465,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"31085:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31077:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"31077:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31077:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2469,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"31100:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"31092:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31092:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2471,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"31120:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2462,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"31068:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31068:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2473,"nodeType":"ExpressionStatement","src":"31068:64:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2477,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"31228:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31254:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":2479,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"31271:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"31298:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31290:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"31290:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31290:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2484,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"31318:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"31318:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2474,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"31145:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swapExactTokensForETHSupportingFeeOnTransferTokens","nodeType":"MemberAccess","referencedDeclaration":690,"src":"31145:68:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31145:199:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"31145:199:0"}]},"documentation":null,"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"swapTokensForEth","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"tokenAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2489,"src":"30896:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"30896:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"30895:21:0"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[],"src":"30925:0:0"},"scope":2532,"src":"30870:482:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2526,"nodeType":"Block","src":"31430:350:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"31458:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31450:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"31450:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31450:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2503,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"31473:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31465:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"31465:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31465:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2505,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"31493:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"31441:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31441:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2507,"nodeType":"ExpressionStatement","src":"31441:64:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2515,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"31592:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BALLS_$2532","typeString":"contract BALLS"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31584:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"31584:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31584:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":2517,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"31612:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31638:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31681:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":2520,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"31724:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31724:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2522,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"31746:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":null,"src":"31746:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2508,"name":"PancakeSwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"31518:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeSwapRouter_$691","typeString":"contract IPancakeSwapRouter"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addLiquidityETH","nodeType":"MemberAccess","referencedDeclaration":359,"src":"31518:33:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"argumentTypes":null,"id":2511,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"31559:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"31518:51:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value","typeString":"function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31518:254:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"id":2525,"nodeType":"ExpressionStatement","src":"31518:254:0"}]},"documentation":null,"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"tokenAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2527,"src":"31382:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"31382:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"ethAmount","nodeType":"VariableDeclaration","overrides":null,"scope":2527,"src":"31403:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"31403:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"31381:40:0"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[],"src":"31430:0:0"},"scope":2532,"src":"31360:420:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2530,"nodeType":"Block","src":"31815:8:0","statements":[]},"documentation":null,"id":2531,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"31795:2:0"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"31815:0:0"},"scope":2532,"src":"31788:35:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2533,"src":"17350:14476:0"}],"src":"1243:30583:0"},"id":0}},"contracts":{"contracts/happyShibEth.sol":{"BALLS":{"abi":[{"inputs":[{"internalType":"address","name":"_RouterAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"isExlcude","type":"bool"}],"name":"ExcludeFromFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"isBlacklist","type":"bool"}],"name":"SetBlackList","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"marketing","type":"uint256"},{"internalType":"uint256","name":"gameWallet","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"poolfee","type":"uint256"}],"indexed":false,"internalType":"struct BALLS.Fees","name":"buyFees","type":"tuple"}],"name":"SetBuyFee","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"marketing","type":"uint256"},{"internalType":"uint256","name":"gameWallet","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"poolfee","type":"uint256"}],"indexed":false,"internalType":"struct BALLS.Fees","name":"sellFees","type":"tuple"}],"name":"SetSellFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokensSwapped","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethReceived","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokensIntoLiqudity","type":"uint256"}],"name":"SwapAndLiquify","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"PancakeSwapRouter","outputs":[{"internalType":"contract IPancakeSwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PancakeSwapV2Pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_maxTxAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_maxWalletAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"babyPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"buyFees","outputs":[{"internalType":"uint256","name":"marketing","type":"uint256"},{"internalType":"uint256","name":"gameWallet","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"poolfee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"_isExclude","type":"bool"}],"name":"excludeAddressFromFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"_isExclude","type":"bool"}],"name":"excludeAddressFromLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"gameAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBuyFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSellFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketingAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numTokensSellToAddToLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sellFees","outputs":[{"internalType":"uint256","name":"marketing","type":"uint256"},{"internalType":"uint256","name":"gameWallet","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"poolfee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"_isBlack","type":"bool"}],"name":"setBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketingAddress","type":"address"},{"internalType":"address","name":"_gameAddress","type":"address"},{"internalType":"address","name":"_poolAddress","type":"address"}],"name":"setFeeAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_RouterAddress","type":"address"}],"name":"setInitialAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTxAmount","type":"uint256"}],"name":"setMaxTxAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxWalletAmount","type":"uint256"}],"name":"setMaxWalletAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_tradingEnabled","type":"bool"}],"name":"setTradingEnable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_marketingFee","type":"uint256"},{"internalType":"uint256","name":"_gameWalletFee","type":"uint256"},{"internalType":"uint256","name":"_liquidityFee","type":"uint256"},{"internalType":"uint256","name":"_poolfee","type":"uint256"}],"name":"setbuyFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_marketingFee","type":"uint256"},{"internalType":"uint256","name":"_gameWalletFee","type":"uint256"},{"internalType":"uint256","name":"_liquidityFee","type":"uint256"},{"internalType":"uint256","name":"_poolfee","type":"uint256"}],"name":"setsellFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapAndLiquifyEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"6080604052600c805460ff60b01b1960ff60a81b19909116600160a81b1716600160b01b17905569d3c21bcecceda10000006018556a01a784379d99db42000000601955670de0b6b3a7640000601a553480156200005c57600080fd5b5060405162002b9638038062002b968339810160408190526200007f91620004c6565b60006200008b62000426565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350604080518082019091526009808252682420a8282ca9a424a160b91b602090920191825262000107916006916200042a565b50604080518082019091526009808252682420a8282ca9a424a160b91b60209092019182526200013a916005916200042a565b506004805460ff1916601290811782556a52b7d2dcc80cd2e40000006003819055336000908152600160209081526040808320939093556006601155928190556002601381905560148290556008600d55600e91909155600f55600b80546001600160a01b0386166001600160a01b03199091168117909155815163c45a015560e01b815291518594919363c45a0155938084019391929190829003018186803b158015620001e857600080fd5b505afa158015620001fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002239190620004c6565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200026c57600080fd5b505afa15801562000281573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a79190620004c6565b6040518363ffffffff1660e01b8152600401620002c6929190620004f6565b602060405180830381600087803b158015620002e157600080fd5b505af1158015620002f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031c9190620004c6565b600c80546001600160a01b0319166001600160a01b0392831617815533600081815260166020526040808220805460ff199081166001908117909255945490951682528082208054909416909417909255600354925190927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91620003a2919062000539565b60405180910390a37f4033c61b7a7bda78889373d049a0bb6dd3500d8bff8ace1617cb78413102e8076011604051620003dc919062000510565b60405180910390a17f59b16bf8c94a0fd94bd5c030ec293d45b519b7dc85a474b840ddd20e347ff43b600d60405162000416919062000510565b60405180910390a1505062000542565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200046d57805160ff19168380011785556200049d565b828001600101855582156200049d579182015b828111156200049d57825182559160200191906001019062000480565b50620004ab929150620004af565b5090565b5b80821115620004ab5760008155600101620004b0565b600060208284031215620004d8578081fd5b81516001600160a01b0381168114620004ef578182fd5b9392505050565b6001600160a01b0392831681529116602082015260400190565b815481526001820154602082015260028201546040820152600390910154606082015260800190565b90815260200190565b61264480620005526000396000f3fe60806040526004361061024a5760003560e01c8063715018a611610139578063a9059cbb116100b6578063dd62ed3e1161007a578063dd62ed3e14610631578063e0f3ccf514610651578063e4748b9e14610676578063ec28438a1461068b578063f2fde38b146106ab578063f5034b0a146106cb57610251565b8063a9059cbb146105a7578063aa1ef598146105c7578063c1258a40146105e7578063c5820ad0146105fc578063d12a76881461061c57610251565b80638da5cb5b116100fd5780638da5cb5b1461053357806395d89b4114610548578063a168d8731461055d578063a457c2d714610572578063a5ece9411461059257610251565b8063715018a6146104b45780637439c236146104c9578063799bec12146104e95780637d1db4a514610509578063893d20e81461051e57610251565b8063313ce567116101c757806347cb8c041161018b57806347cb8c04146104405780634a74bb02146104555780634ada218b1461046a5780636c0a24eb1461047f57806370a082311461049457610251565b8063313ce567146103a957806339509351146103cb5780633e341212146103eb578063421ea58b1461040b57806342966c681461042057610251565b806318160ddd1161020e57806318160ddd146103125780631ebe8be81461033457806323b872dd1461034957806327a14fc21461036957806328ec13ee1461038957610251565b8063061dc8ef1461025657806306fdde0314610278578063095ea7b3146102a3578063153b0d1e146102d05780631755ff21146102f057610251565b3661025157005b600080fd5b34801561026257600080fd5b50610276610271366004611f76565b6106e0565b005b34801561028457600080fd5b5061028d610749565b60405161029a91906120f7565b60405180910390f35b3480156102af57600080fd5b506102c36102be366004611fa7565b6107df565b60405161029a91906120ec565b3480156102dc57600080fd5b506102766102eb366004611f76565b6107fd565b3480156102fc57600080fd5b50610305610894565b60405161029a9190612068565b34801561031e57600080fd5b506103276108a3565b60405161029a919061248c565b34801561034057600080fd5b506103276108a9565b34801561035557600080fd5b506102c3610364366004611f36565b6108bb565b34801561037557600080fd5b50610276610384366004611ff2565b610942565b34801561039557600080fd5b506102766103a4366004611e7c565b61097c565b3480156103b557600080fd5b506103be610b52565b60405161029a9190612536565b3480156103d757600080fd5b506102c36103e6366004611fa7565b610b5b565b3480156103f757600080fd5b50610276610406366004612037565b610ba9565b34801561041757600080fd5b50610305610c2e565b34801561042c57600080fd5b5061027661043b366004611ff2565b610c3d565b34801561044c57600080fd5b50610327610c4a565b34801561046157600080fd5b506102c3610c5c565b34801561047657600080fd5b506102c3610c6c565b34801561048b57600080fd5b50610327610c7c565b3480156104a057600080fd5b506103276104af366004611e7c565b610c82565b3480156104c057600080fd5b50610276610c9d565b3480156104d557600080fd5b506102766104e4366004611fd2565b610d1c565b3480156104f557600080fd5b50610276610504366004611f76565b610d6f565b34801561051557600080fd5b50610327610dfa565b34801561052a57600080fd5b50610305610e00565b34801561053f57600080fd5b50610305610e0f565b34801561055457600080fd5b5061028d610e1e565b34801561056957600080fd5b50610305610e7f565b34801561057e57600080fd5b506102c361058d366004611fa7565b610e8e565b34801561059e57600080fd5b50610305610ef6565b3480156105b357600080fd5b506102c36105c2366004611fa7565b610f05565b3480156105d357600080fd5b506102766105e2366004611eec565b610f19565b3480156105f357600080fd5b50610305610f8d565b34801561060857600080fd5b50610276610617366004612037565b610f9c565b34801561062857600080fd5b50610327611013565b34801561063d57600080fd5b5061032761064c366004611eb4565b611019565b34801561065d57600080fd5b50610666611044565b60405161029a949392919061251b565b34801561068257600080fd5b50610666611053565b34801561069757600080fd5b506102766106a6366004611ff2565b611062565b3480156106b757600080fd5b506102766106c6366004611e7c565b61109c565b3480156106d757600080fd5b506103056110da565b6106e86110e9565b6000546001600160a01b0390811691161461071e5760405162461bcd60e51b8152600401610715906122f3565b60405180910390fd5b6001600160a01b03919091166000908152601660205260409020805460ff1916911515919091179055565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b60006107f36107ec6110e9565b84846110ed565b5060015b92915050565b6108056110e9565b6000546001600160a01b039081169116146108325760405162461bcd60e51b8152600401610715906122f3565b6001600160a01b03821660009081526017602052604090819020805460ff1916831515179055517f1365a36244c5f48793fe8c34e438f543de193bdea38c4f133c166dce6fc121459061088890849084906120d1565b60405180910390a15050565b6009546001600160a01b031681565b60035490565b60145460135460125460115401010190565b60006108c88484846111a1565b610938846108d46110e9565b6109338560405180606001604052806028815260200161255a602891396001600160a01b038a166000908152600260205260408120906109126110e9565b6001600160a01b03168152602081019190915260400160002054919061193b565b6110ed565b5060019392505050565b61094a6110e9565b6000546001600160a01b039081169116146109775760405162461bcd60e51b8152600401610715906122f3565b601955565b6109846110e9565b6000546001600160a01b039081169116146109b15760405162461bcd60e51b8152600401610715906122f3565b600b80546001600160a01b0319166001600160a01b0383169081179091556040805163c45a015560e01b8152905183929163c45a0155916004808301926020929190829003018186803b158015610a0757600080fd5b505afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611e98565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8757600080fd5b505afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190611e98565b6040518363ffffffff1660e01b8152600401610adc92919061207c565b602060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e9190611e98565b600c80546001600160a01b0319166001600160a01b03929092169190911790555050565b60045460ff1690565b60006107f3610b686110e9565b846109338560026000610b796110e9565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611967565b610bb16110e9565b6000546001600160a01b03908116911614610bde5760405162461bcd60e51b8152600401610715906122f3565b60118481556012849055601383905560148290556040517f4033c61b7a7bda78889373d049a0bb6dd3500d8bff8ace1617cb78413102e80791610c2091612463565b60405180910390a150505050565b600b546001600160a01b031681565b610c473382611993565b50565b601054600f54600e54600d5401010190565b600c54600160a81b900460ff1681565b600c54600160b01b900460ff1681565b60195481565b6001600160a01b031660009081526001602052604090205490565b610ca56110e9565b6000546001600160a01b03908116911614610cd25760405162461bcd60e51b8152600401610715906122f3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610d246110e9565b6000546001600160a01b03908116911614610d515760405162461bcd60e51b8152600401610715906122f3565b600c8054911515600160b01b0260ff60b01b19909216919091179055565b610d776110e9565b6000546001600160a01b03908116911614610da45760405162461bcd60e51b8152600401610715906122f3565b6001600160a01b03821660009081526015602052604090819020805460ff1916831515179055517fd5144d2a6c8ff9b87b7a40852df5102cab2ce561c06b56cc6fe7ccf1fa7f8c2d9061088890849084906120d1565b60185481565b6000610e0a610e0f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d55780601f106107aa576101008083540402835291602001916107d5565b6008546001600160a01b031681565b60006107f3610e9b6110e9565b84610933856040518060600160405280602581526020016125c86025913960026000610ec56110e9565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061193b565b6007546001600160a01b031681565b60006107f3610f126110e9565b84846111a1565b610f216110e9565b6000546001600160a01b03908116911614610f4e5760405162461bcd60e51b8152600401610715906122f3565b600780546001600160a01b039485166001600160a01b031991821617909155600880549385169382169390931790925560098054919093169116179055565b600c546001600160a01b031681565b610fa46110e9565b6000546001600160a01b03908116911614610fd15760405162461bcd60e51b8152600401610715906122f3565b600d848155600e849055600f83905560108290556040517f59b16bf8c94a0fd94bd5c030ec293d45b519b7dc85a474b840ddd20e347ff43b91610c2091612463565b601a5481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600d54600e54600f5460105484565b60115460125460135460145484565b61106a6110e9565b6000546001600160a01b039081169116146110975760405162461bcd60e51b8152600401610715906122f3565b601855565b6110a46110e9565b6000546001600160a01b039081169116146110d15760405162461bcd60e51b8152600401610715906122f3565b610c4781611a57565b600a546001600160a01b031681565b3390565b6001600160a01b0383166111135760405162461bcd60e51b81526004016107159061218f565b6001600160a01b0382166111395760405162461bcd60e51b815260040161071590612421565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119490859061248c565b60405180910390a3505050565b6001600160a01b0383166111c75760405162461bcd60e51b81526004016107159061214a565b6001600160a01b0382166111ed5760405162461bcd60e51b815260040161071590612328565b6001600160a01b03831660009081526017602052604090205460ff1615801561122f57506001600160a01b03821660009081526017602052604090205460ff16155b61124b5760405162461bcd60e51b8152600401610715906123ac565b600c546001600160a01b03848116911614806112745750600c546001600160a01b038381169116145b801561129957506001600160a01b03831660009081526015602052604090205460ff16155b156112e9578060185410156112c05760405162461bcd60e51b8152600401610715906123cf565b600c54600160b01b900460ff166112e95760405162461bcd60e51b815260040161071590612250565b61132681604051806060016040528060268152602001612582602691396001600160a01b038616600090815260016020526040902054919061193b565b6001600160a01b038416600090815260016020526040812091909155819061134d30610c82565b9050601854811061135d57506018545b601a548110801590819061137b5750600c54600160a01b900460ff16155b80156113955750600c546001600160a01b03878116911614155b80156113aa5750600c54600160a81b900460ff165b156113bd57601a5491506113bd82611ad8565b6001600160a01b03861660009081526015602052604090205460ff1661187257600c546001600160a01b0387811691161415611632576114156103e861140f6114046108a9565b86906103e803611b79565b90611bb3565b92506114356103e861140f60116000015487611b7990919063ffffffff16565b6007546001600160a01b031660009081526001602052604090208054909101905560125461146c906103e89061140f908790611b79565b6008546001600160a01b03166000908152600160205260409020805490910190556014546114a3906103e89061140f908790611b79565b6009546001600160a01b03166000908152600160205260409020805490910190556013546114da906103e89061140f908790611b79565b306000908152600160205260409020805490910190556007546011546001600160a01b03918216918816906000805160206125a883398151915290611528906103e89061140f908a90611b79565b604051611535919061248c565b60405180910390a36008546012546001600160a01b03918216918816906000805160206125a883398151915290611575906103e89061140f908a90611b79565b604051611582919061248c565b60405180910390a36009546014546001600160a01b03918216918816906000805160206125a8833981519152906115c2906103e89061140f908a90611b79565b6040516115cf919061248c565b60405180910390a3306001600160a01b0316866001600160a01b03166000805160206125a88339815191526116186103e861140f6011600201548a611b7990919063ffffffff16565b604051611625919061248c565b60405180910390a3611872565b600c546001600160a01b0386811691161415611872576116596103e861140f611404610c4a565b92506116796103e861140f600d6000015487611b7990919063ffffffff16565b6007546001600160a01b0316600090815260016020526040902080549091019055600e546116b0906103e89061140f908790611b79565b6008546001600160a01b03166000908152600160205260409020805490910190556010546116e7906103e89061140f908790611b79565b6009546001600160a01b0316600090815260016020526040902080549091019055600f5461171e906103e89061140f908790611b79565b30600090815260016020526040902080549091019055600754600d546001600160a01b03918216918816906000805160206125a88339815191529061176c906103e89061140f908a90611b79565b604051611779919061248c565b60405180910390a3600854600e546001600160a01b03918216918816906000805160206125a8833981519152906117b9906103e89061140f908a90611b79565b6040516117c6919061248c565b60405180910390a36009546010546001600160a01b03918216918816906000805160206125a883398151915290611806906103e89061140f908a90611b79565b604051611813919061248c565b60405180910390a3306001600160a01b0316866001600160a01b03166000805160206125a883398151915261185c6103e861140f600d600201548a611b7990919063ffffffff16565b604051611869919061248c565b60405180910390a35b6001600160a01b0385166000908152600160205260409020546118959084611967565b6001600160a01b03861660009081526001602090815260408083209390935560169052205460ff166118fa576019546001600160a01b038616600090815260016020526040902054106118fa5760405162461bcd60e51b8152600401610715906122be565b846001600160a01b0316866001600160a01b03166000805160206125a88339815191528560405161192b919061248c565b60405180910390a3505050505050565b6000818484111561195f5760405162461bcd60e51b815260040161071591906120f7565b505050900390565b60008282018381101561198c5760405162461bcd60e51b815260040161071590612219565b9392505050565b6001600160a01b0382166119b95760405162461bcd60e51b81526004016107159061236b565b6119f6816040518060600160405280602281526020016125ed602291396001600160a01b038516600090815260016020526040902054919061193b565b6001600160a01b038316600090815260016020526040902055600354611a1c9082611bf5565b6003556040516000906001600160a01b038416906000805160206125a883398151915290611a4b90859061248c565b60405180910390a35050565b6001600160a01b038116611a7d5760405162461bcd60e51b8152600401610715906121d3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600c805460ff60a01b1916600160a01b1790556000611af8826002611bb3565b90506000611b068383611bf5565b905047611b1283611c37565b6000611b1e4783611bf5565b9050611b2a8382611d93565b7f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561848285604051611b5d93929190612505565b60405180910390a15050600c805460ff60a01b19169055505050565b600082611b88575060006107f7565b82820282848281611b9557fe5b041461198c5760405162461bcd60e51b81526004016107159061227d565b600061198c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e45565b600061198c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061193b565b60408051600280825260608083018452926020830190803683370190505090503081600081518110611c6557fe5b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611cb957600080fd5b505afa158015611ccd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf19190611e98565b81600181518110611cfe57fe5b6001600160a01b039283166020918202929092010152600b54611d2491309116846110ed565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611d5d908590600090869030904290600401612495565b600060405180830381600087803b158015611d7757600080fd5b505af1158015611d8b573d6000803e3d6000fd5b505050505050565b600b54611dab9030906001600160a01b0316846110ed565b600b546001600160a01b031663f305d719823085600080611dca610e0f565b426040518863ffffffff1660e01b8152600401611dec96959493929190612096565b6060604051808303818588803b158015611e0557600080fd5b505af1158015611e19573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e3e919061200a565b5050505050565b60008183611e665760405162461bcd60e51b815260040161071591906120f7565b506000838581611e7257fe5b0495945050505050565b600060208284031215611e8d578081fd5b813561198c81612544565b600060208284031215611ea9578081fd5b815161198c81612544565b60008060408385031215611ec6578081fd5b8235611ed181612544565b91506020830135611ee181612544565b809150509250929050565b600080600060608486031215611f00578081fd5b8335611f0b81612544565b92506020840135611f1b81612544565b91506040840135611f2b81612544565b809150509250925092565b600080600060608486031215611f4a578283fd5b8335611f5581612544565b92506020840135611f6581612544565b929592945050506040919091013590565b60008060408385031215611f88578182fd5b8235611f9381612544565b915060208301358015158114611ee1578182fd5b60008060408385031215611fb9578182fd5b8235611fc481612544565b946020939093013593505050565b600060208284031215611fe3578081fd5b8135801515811461198c578182fd5b600060208284031215612003578081fd5b5035919050565b60008060006060848603121561201e578283fd5b8351925060208401519150604084015190509250925092565b6000806000806080858703121561204c578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b6001600160a01b039290921682521515602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561212357858101830151858201604001528201612107565b818111156121345783604083870101525b50601f01601f1916929092016040019392505050565b60208082526025908201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601390820152721d1c98591a5b99c81a5cc8191a5cd8589b1959606a1b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f616c72656164792062616c616e6365206578697374206d617820616d6f756e74604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526021908201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b602080825260099082015268189b1858dadb1a5cdd60ba1b604082015260600190565b60208082526032908201527f42455032303a207472616e7366657220616d6f756e742065786365656473206d604082015271185e081d1c985b9cd9995c88185b5bdd5b9d60721b606082015260800190565b60208082526022908201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b815481526001820154602082015260028201546040820152600390910154606082015260800190565b90815260200190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156124e45784516001600160a01b0316835293830193918301916001016124bf565b50506001600160a01b03969096166060850152505050608001529392505050565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b6001600160a01b0381168114610c4757600080fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220aa0de59fad843dae040a104d2f5b1e4abd4dedeb04ba83420b1a8aab32cd574e64736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA8 SHL OR AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x18 SSTORE PUSH11 0x1A784379D99DB42000000 PUSH1 0x19 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1A SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B96 CODESIZE SUB DUP1 PUSH3 0x2B96 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x7F SWAP2 PUSH3 0x4C6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8B PUSH3 0x426 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 DUP3 MSTORE PUSH9 0x2420A8282CA9A424A1 PUSH1 0xB9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x107 SWAP2 PUSH1 0x6 SWAP2 PUSH3 0x42A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 DUP3 MSTORE PUSH9 0x2420A8282CA9A424A1 PUSH1 0xB9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x13A SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x42A JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR DUP3 SSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 PUSH1 0x11 SSTORE SWAP3 DUP2 SWAP1 SSTORE PUSH1 0x2 PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x8 PUSH1 0xD SSTORE PUSH1 0xE SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xF SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD DUP6 SWAP5 SWAP2 SWAP4 PUSH4 0xC45A0155 SWAP4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x223 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x281 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2A7 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2C6 SWAP3 SWAP2 SWAP1 PUSH3 0x4F6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x31C SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP2 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP5 SLOAD SWAP1 SWAP6 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP5 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD SWAP3 MLOAD SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0x3A2 SWAP2 SWAP1 PUSH3 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x4033C61B7A7BDA78889373D049A0BB6DD3500D8BFF8ACE1617CB78413102E807 PUSH1 0x11 PUSH1 0x40 MLOAD PUSH3 0x3DC SWAP2 SWAP1 PUSH3 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x59B16BF8C94A0FD94BD5C030EC293D45B519B7DC85A474B840DDD20E347FF43B PUSH1 0xD PUSH1 0x40 MLOAD PUSH3 0x416 SWAP2 SWAP1 PUSH3 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH3 0x542 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x46D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x49D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x49D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x49D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x480 JUMP JUMPDEST POP PUSH3 0x4AB SWAP3 SWAP2 POP PUSH3 0x4AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4AB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4B0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4D8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4EF JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2644 DUP1 PUSH3 0x552 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x24A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xE0F3CCF5 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xE4748B9E EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xF5034B0A EQ PUSH2 0x6CB JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xAA1EF598 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC1258A40 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xC5820AD0 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xD12A7688 EQ PUSH2 0x61C JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xA168D873 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0x592 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x7439C236 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x799BEC12 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x51E JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x47CB8C04 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x47CB8C04 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x494 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x3E341212 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x421EA58B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x420 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x1EBE8BE8 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x28EC13EE EQ PUSH2 0x389 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x61DC8EF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x1755FF21 EQ PUSH2 0x2F0 JUMPI PUSH2 0x251 JUMP JUMPDEST CALLDATASIZE PUSH2 0x251 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x8A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xC2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xC5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xC6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xC7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xC9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xDFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xE1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xEF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x5E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xF8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x617 CALLDATASIZE PUSH1 0x4 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x1013 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x1053 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x6A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x7EC PUSH2 0x10E9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x1365A36244C5F48793FE8C34E438F543DE193BDEA38C4F133C166DCE6FC12145 SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP5 DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0x938 DUP5 PUSH2 0x8D4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x933 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x912 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x10ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x984 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP3 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xB68 PUSH2 0x10E9 JUMP JUMPDEST DUP5 PUSH2 0x933 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xB79 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xBB1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x11 DUP5 DUP2 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x13 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4033C61B7A7BDA78889373D049A0BB6DD3500D8BFF8ACE1617CB78413102E807 SWAP2 PUSH2 0xC20 SWAP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC47 CALLER DUP3 PUSH2 0x1993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH1 0xD SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCA5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD24 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD77 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xD5144D2A6C8FF9B87B7A40852DF5102CAB2CE561C06B56CC6FE7CCF1FA7F8C2D SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0A PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xE9B PUSH2 0x10E9 JUMP JUMPDEST DUP5 PUSH2 0x933 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xEC5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xF12 PUSH2 0x10E9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xF21 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xFA4 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xD DUP5 DUP2 SSTORE PUSH1 0xE DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0x10 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59B16BF8C94A0FD94BD5C030EC293D45B519B7DC85A474B840DDD20E347FF43B SWAP2 PUSH2 0xC20 SWAP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD DUP5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD DUP5 JUMP JUMPDEST PUSH2 0x106A PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1139 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1194 SWAP1 DUP6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x122F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x1274 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1299 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP1 PUSH1 0x18 SLOAD LT ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2582 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x134D ADDRESS PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP PUSH1 0x18 SLOAD DUP2 LT PUSH2 0x135D JUMPI POP PUSH1 0x18 SLOAD JUMPDEST PUSH1 0x1A SLOAD DUP2 LT DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x137B JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1395 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AA JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13BD JUMPI PUSH1 0x1A SLOAD SWAP2 POP PUSH2 0x13BD DUP3 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1872 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1415 PUSH2 0x3E8 PUSH2 0x140F PUSH2 0x1404 PUSH2 0x8A9 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x3E8 SUB PUSH2 0x1B79 JUMP JUMPDEST SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1435 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0x11 PUSH1 0x0 ADD SLOAD DUP8 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH2 0x146C SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x14 SLOAD PUSH2 0x14A3 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x13 SLOAD PUSH2 0x14DA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1528 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1575 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x15C2 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1618 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0x11 PUSH1 0x2 ADD SLOAD DUP11 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1659 PUSH2 0x3E8 PUSH2 0x140F PUSH2 0x1404 PUSH2 0xC4A JUMP JUMPDEST SWAP3 POP PUSH2 0x1679 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0xD PUSH1 0x0 ADD SLOAD DUP8 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xE SLOAD PUSH2 0x16B0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH2 0x16E7 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xF SLOAD PUSH2 0x171E SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x176C SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x17B9 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 SLOAD PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1806 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x185C PUSH2 0x3E8 PUSH2 0x140F PUSH1 0xD PUSH1 0x2 ADD SLOAD DUP11 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1869 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1895 SWAP1 DUP5 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x16 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18FA JUMPI PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0x18FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22BE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x195F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2219 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25ED PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x1A1C SWAP1 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1A4B SWAP1 DUP6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1AF8 DUP3 PUSH1 0x2 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B06 DUP4 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x1B12 DUP4 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E SELFBALANCE DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B2A DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B88 JUMPI POP PUSH1 0x0 PUSH2 0x7F7 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B95 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C65 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CF1 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1CFE JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x1D24 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1D5D SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1DAB SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH1 0x0 DUP1 PUSH2 0x1DCA PUSH2 0xE0F JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3E SWAP2 SWAP1 PUSH2 0x200A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1E72 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x198C DUP2 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x198C DUP2 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1ED1 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1EE1 DUP2 PUSH2 0x2544 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F0B DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F1B DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x2544 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F4A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F55 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F65 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EE1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC4 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x198C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2003 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x201E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x204C JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2123 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2107 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2134 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x1D1C98591A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x616C72656164792062616C616E6365206578697374206D617820616D6F756E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x189B1858DADB1A5CDD PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220616D6F756E742065786365656473206D PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x185E081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E4 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24BF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E6365DDF252AD1BE2C89B69 0xC2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365A2646970 PUSH7 0x7358221220AA0D 0xE5 SWAP16 0xAD DUP5 RETURNDATASIZE 0xAE DIV EXP LT 0x4D 0x2F JUMPDEST 0x1E 0x4A 0xBD 0x4D 0xED 0xEB DIV 0xBA DUP4 TIMESTAMP SIGNEXTEND BYTE DUP11 0xAB ORIGIN 0xCD JUMPI 0x4E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"17350:14476:0:-:0;;;22183:40;;;-1:-1:-1;;;;;;;;22183:40:0;;;-1:-1:-1;;;22183:40:0;22230:33;-1:-1:-1;;;22230:33:0;;;22580:10;22553:37;;22628:10;22597:41;;22689:8;22645:52;;22870:1095;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11077:17;11097:12;:10;:12::i;:::-;11120:6;:18;;-1:-1:-1;;;;;;11120:18:0;-1:-1:-1;;;;;11120:18:0;;;;;;;11154:43;;11120:18;;-1:-1:-1;11120:18:0;11154:43;;11120:6;;11154:43;-1:-1:-1;22925:19:0;;;;;;;;;;;;;-1:-1:-1;;;22925:19:0;;;;;;;;;:5;;:19;:::i;:::-;-1:-1:-1;22955:21:0;;;;;;;;;;;;;-1:-1:-1;;;22955:21:0;;;;;;;;;:7;;:21;:::i;:::-;-1:-1:-1;22987:9:0;:14;;-1:-1:-1;;22987:14:0;22999:2;22987:14;;;;;23027:8;23012:12;:23;;;23087:10;22987:9;23077:21;;;22987:14;23077:21;;;;;;;;:36;;;;23146:1;23126:7;:21;23158:22;;;;23211:1;23191:17;:21;;;23223:15;:19;;;23276:1;23255:8;:22;23288:19;:23;;;;23322:18;:22;23472:17;:38;;-1:-1:-1;;;;;23472:38:0;;-1:-1:-1;;;;;;23472:38:0;;;;;;;;23561:28;;-1:-1:-1;;;23561:28:0;;;;23446:14;;23472:38;;23561:26;;:28;;;;23077:21;;23561:28;;;;;;;23472:38;23561:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;23541:60:0;;23610:4;23617:18;-1:-1:-1;;;;;23617:23:0;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23541:102;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23521:17;:122;;-1:-1:-1;;;;;;23521:122:0;-1:-1:-1;;;;;23521:122:0;;;;;;23750:10;-1:-1:-1;23731:30:0;;;:18;:30;;;;;;:37;;-1:-1:-1;;23731:37:0;;;-1:-1:-1;23731:37:0;;;;;;23798:17;;;;;23779:37;;;;;:44;;;;;;;;;;;23874:12;;23841:46;;23750:10;;23841:46;;;;23874:12;23841:46;:::i;:::-;;;;;;;;23903:18;23913:7;23903:18;;;;;;:::i;:::-;;;;;;;;23937:20;23948:8;23937:20;;;;;;:::i;:::-;;;;;;;;22870:1095;;17350:14476;;10405:98;10485:10;10405:98;:::o;17350:14476::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17350:14476:0;;;-1:-1:-1;17350:14476:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:263:-1;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;;;;;3200:54;;4061:35;;4051:2;;-1:-1;;4100:12;4051:2;319:74;223:186;-1:-1;;;223:186::o;2051:349::-;-1:-1;;;;;3200:54;;;495:58;;3200:54;;2386:2;2371:18;;636:37;2214:2;2199:18;;2185:215::o;2407:305::-;940:23;;1882:37;;1185:4;1174:16;;1168:23;1335:4;1326:14;;1882:37;1412:4;1401:16;;1395:23;1562:4;1553:14;;1882:37;1637:4;1626:16;;;1620:23;1787:4;1778:14;;1882:37;2575:3;2560:19;;2546:166::o;2719:222::-;1882:37;;;2846:2;2831:18;;2817:124::o;:::-;17350:14476:0;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061024a5760003560e01c8063715018a611610139578063a9059cbb116100b6578063dd62ed3e1161007a578063dd62ed3e14610631578063e0f3ccf514610651578063e4748b9e14610676578063ec28438a1461068b578063f2fde38b146106ab578063f5034b0a146106cb57610251565b8063a9059cbb146105a7578063aa1ef598146105c7578063c1258a40146105e7578063c5820ad0146105fc578063d12a76881461061c57610251565b80638da5cb5b116100fd5780638da5cb5b1461053357806395d89b4114610548578063a168d8731461055d578063a457c2d714610572578063a5ece9411461059257610251565b8063715018a6146104b45780637439c236146104c9578063799bec12146104e95780637d1db4a514610509578063893d20e81461051e57610251565b8063313ce567116101c757806347cb8c041161018b57806347cb8c04146104405780634a74bb02146104555780634ada218b1461046a5780636c0a24eb1461047f57806370a082311461049457610251565b8063313ce567146103a957806339509351146103cb5780633e341212146103eb578063421ea58b1461040b57806342966c681461042057610251565b806318160ddd1161020e57806318160ddd146103125780631ebe8be81461033457806323b872dd1461034957806327a14fc21461036957806328ec13ee1461038957610251565b8063061dc8ef1461025657806306fdde0314610278578063095ea7b3146102a3578063153b0d1e146102d05780631755ff21146102f057610251565b3661025157005b600080fd5b34801561026257600080fd5b50610276610271366004611f76565b6106e0565b005b34801561028457600080fd5b5061028d610749565b60405161029a91906120f7565b60405180910390f35b3480156102af57600080fd5b506102c36102be366004611fa7565b6107df565b60405161029a91906120ec565b3480156102dc57600080fd5b506102766102eb366004611f76565b6107fd565b3480156102fc57600080fd5b50610305610894565b60405161029a9190612068565b34801561031e57600080fd5b506103276108a3565b60405161029a919061248c565b34801561034057600080fd5b506103276108a9565b34801561035557600080fd5b506102c3610364366004611f36565b6108bb565b34801561037557600080fd5b50610276610384366004611ff2565b610942565b34801561039557600080fd5b506102766103a4366004611e7c565b61097c565b3480156103b557600080fd5b506103be610b52565b60405161029a9190612536565b3480156103d757600080fd5b506102c36103e6366004611fa7565b610b5b565b3480156103f757600080fd5b50610276610406366004612037565b610ba9565b34801561041757600080fd5b50610305610c2e565b34801561042c57600080fd5b5061027661043b366004611ff2565b610c3d565b34801561044c57600080fd5b50610327610c4a565b34801561046157600080fd5b506102c3610c5c565b34801561047657600080fd5b506102c3610c6c565b34801561048b57600080fd5b50610327610c7c565b3480156104a057600080fd5b506103276104af366004611e7c565b610c82565b3480156104c057600080fd5b50610276610c9d565b3480156104d557600080fd5b506102766104e4366004611fd2565b610d1c565b3480156104f557600080fd5b50610276610504366004611f76565b610d6f565b34801561051557600080fd5b50610327610dfa565b34801561052a57600080fd5b50610305610e00565b34801561053f57600080fd5b50610305610e0f565b34801561055457600080fd5b5061028d610e1e565b34801561056957600080fd5b50610305610e7f565b34801561057e57600080fd5b506102c361058d366004611fa7565b610e8e565b34801561059e57600080fd5b50610305610ef6565b3480156105b357600080fd5b506102c36105c2366004611fa7565b610f05565b3480156105d357600080fd5b506102766105e2366004611eec565b610f19565b3480156105f357600080fd5b50610305610f8d565b34801561060857600080fd5b50610276610617366004612037565b610f9c565b34801561062857600080fd5b50610327611013565b34801561063d57600080fd5b5061032761064c366004611eb4565b611019565b34801561065d57600080fd5b50610666611044565b60405161029a949392919061251b565b34801561068257600080fd5b50610666611053565b34801561069757600080fd5b506102766106a6366004611ff2565b611062565b3480156106b757600080fd5b506102766106c6366004611e7c565b61109c565b3480156106d757600080fd5b506103056110da565b6106e86110e9565b6000546001600160a01b0390811691161461071e5760405162461bcd60e51b8152600401610715906122f3565b60405180910390fd5b6001600160a01b03919091166000908152601660205260409020805460ff1916911515919091179055565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b60006107f36107ec6110e9565b84846110ed565b5060015b92915050565b6108056110e9565b6000546001600160a01b039081169116146108325760405162461bcd60e51b8152600401610715906122f3565b6001600160a01b03821660009081526017602052604090819020805460ff1916831515179055517f1365a36244c5f48793fe8c34e438f543de193bdea38c4f133c166dce6fc121459061088890849084906120d1565b60405180910390a15050565b6009546001600160a01b031681565b60035490565b60145460135460125460115401010190565b60006108c88484846111a1565b610938846108d46110e9565b6109338560405180606001604052806028815260200161255a602891396001600160a01b038a166000908152600260205260408120906109126110e9565b6001600160a01b03168152602081019190915260400160002054919061193b565b6110ed565b5060019392505050565b61094a6110e9565b6000546001600160a01b039081169116146109775760405162461bcd60e51b8152600401610715906122f3565b601955565b6109846110e9565b6000546001600160a01b039081169116146109b15760405162461bcd60e51b8152600401610715906122f3565b600b80546001600160a01b0319166001600160a01b0383169081179091556040805163c45a015560e01b8152905183929163c45a0155916004808301926020929190829003018186803b158015610a0757600080fd5b505afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611e98565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8757600080fd5b505afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190611e98565b6040518363ffffffff1660e01b8152600401610adc92919061207c565b602060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e9190611e98565b600c80546001600160a01b0319166001600160a01b03929092169190911790555050565b60045460ff1690565b60006107f3610b686110e9565b846109338560026000610b796110e9565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611967565b610bb16110e9565b6000546001600160a01b03908116911614610bde5760405162461bcd60e51b8152600401610715906122f3565b60118481556012849055601383905560148290556040517f4033c61b7a7bda78889373d049a0bb6dd3500d8bff8ace1617cb78413102e80791610c2091612463565b60405180910390a150505050565b600b546001600160a01b031681565b610c473382611993565b50565b601054600f54600e54600d5401010190565b600c54600160a81b900460ff1681565b600c54600160b01b900460ff1681565b60195481565b6001600160a01b031660009081526001602052604090205490565b610ca56110e9565b6000546001600160a01b03908116911614610cd25760405162461bcd60e51b8152600401610715906122f3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610d246110e9565b6000546001600160a01b03908116911614610d515760405162461bcd60e51b8152600401610715906122f3565b600c8054911515600160b01b0260ff60b01b19909216919091179055565b610d776110e9565b6000546001600160a01b03908116911614610da45760405162461bcd60e51b8152600401610715906122f3565b6001600160a01b03821660009081526015602052604090819020805460ff1916831515179055517fd5144d2a6c8ff9b87b7a40852df5102cab2ce561c06b56cc6fe7ccf1fa7f8c2d9061088890849084906120d1565b60185481565b6000610e0a610e0f565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d55780601f106107aa576101008083540402835291602001916107d5565b6008546001600160a01b031681565b60006107f3610e9b6110e9565b84610933856040518060600160405280602581526020016125c86025913960026000610ec56110e9565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061193b565b6007546001600160a01b031681565b60006107f3610f126110e9565b84846111a1565b610f216110e9565b6000546001600160a01b03908116911614610f4e5760405162461bcd60e51b8152600401610715906122f3565b600780546001600160a01b039485166001600160a01b031991821617909155600880549385169382169390931790925560098054919093169116179055565b600c546001600160a01b031681565b610fa46110e9565b6000546001600160a01b03908116911614610fd15760405162461bcd60e51b8152600401610715906122f3565b600d848155600e849055600f83905560108290556040517f59b16bf8c94a0fd94bd5c030ec293d45b519b7dc85a474b840ddd20e347ff43b91610c2091612463565b601a5481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600d54600e54600f5460105484565b60115460125460135460145484565b61106a6110e9565b6000546001600160a01b039081169116146110975760405162461bcd60e51b8152600401610715906122f3565b601855565b6110a46110e9565b6000546001600160a01b039081169116146110d15760405162461bcd60e51b8152600401610715906122f3565b610c4781611a57565b600a546001600160a01b031681565b3390565b6001600160a01b0383166111135760405162461bcd60e51b81526004016107159061218f565b6001600160a01b0382166111395760405162461bcd60e51b815260040161071590612421565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119490859061248c565b60405180910390a3505050565b6001600160a01b0383166111c75760405162461bcd60e51b81526004016107159061214a565b6001600160a01b0382166111ed5760405162461bcd60e51b815260040161071590612328565b6001600160a01b03831660009081526017602052604090205460ff1615801561122f57506001600160a01b03821660009081526017602052604090205460ff16155b61124b5760405162461bcd60e51b8152600401610715906123ac565b600c546001600160a01b03848116911614806112745750600c546001600160a01b038381169116145b801561129957506001600160a01b03831660009081526015602052604090205460ff16155b156112e9578060185410156112c05760405162461bcd60e51b8152600401610715906123cf565b600c54600160b01b900460ff166112e95760405162461bcd60e51b815260040161071590612250565b61132681604051806060016040528060268152602001612582602691396001600160a01b038616600090815260016020526040902054919061193b565b6001600160a01b038416600090815260016020526040812091909155819061134d30610c82565b9050601854811061135d57506018545b601a548110801590819061137b5750600c54600160a01b900460ff16155b80156113955750600c546001600160a01b03878116911614155b80156113aa5750600c54600160a81b900460ff165b156113bd57601a5491506113bd82611ad8565b6001600160a01b03861660009081526015602052604090205460ff1661187257600c546001600160a01b0387811691161415611632576114156103e861140f6114046108a9565b86906103e803611b79565b90611bb3565b92506114356103e861140f60116000015487611b7990919063ffffffff16565b6007546001600160a01b031660009081526001602052604090208054909101905560125461146c906103e89061140f908790611b79565b6008546001600160a01b03166000908152600160205260409020805490910190556014546114a3906103e89061140f908790611b79565b6009546001600160a01b03166000908152600160205260409020805490910190556013546114da906103e89061140f908790611b79565b306000908152600160205260409020805490910190556007546011546001600160a01b03918216918816906000805160206125a883398151915290611528906103e89061140f908a90611b79565b604051611535919061248c565b60405180910390a36008546012546001600160a01b03918216918816906000805160206125a883398151915290611575906103e89061140f908a90611b79565b604051611582919061248c565b60405180910390a36009546014546001600160a01b03918216918816906000805160206125a8833981519152906115c2906103e89061140f908a90611b79565b6040516115cf919061248c565b60405180910390a3306001600160a01b0316866001600160a01b03166000805160206125a88339815191526116186103e861140f6011600201548a611b7990919063ffffffff16565b604051611625919061248c565b60405180910390a3611872565b600c546001600160a01b0386811691161415611872576116596103e861140f611404610c4a565b92506116796103e861140f600d6000015487611b7990919063ffffffff16565b6007546001600160a01b0316600090815260016020526040902080549091019055600e546116b0906103e89061140f908790611b79565b6008546001600160a01b03166000908152600160205260409020805490910190556010546116e7906103e89061140f908790611b79565b6009546001600160a01b0316600090815260016020526040902080549091019055600f5461171e906103e89061140f908790611b79565b30600090815260016020526040902080549091019055600754600d546001600160a01b03918216918816906000805160206125a88339815191529061176c906103e89061140f908a90611b79565b604051611779919061248c565b60405180910390a3600854600e546001600160a01b03918216918816906000805160206125a8833981519152906117b9906103e89061140f908a90611b79565b6040516117c6919061248c565b60405180910390a36009546010546001600160a01b03918216918816906000805160206125a883398151915290611806906103e89061140f908a90611b79565b604051611813919061248c565b60405180910390a3306001600160a01b0316866001600160a01b03166000805160206125a883398151915261185c6103e861140f600d600201548a611b7990919063ffffffff16565b604051611869919061248c565b60405180910390a35b6001600160a01b0385166000908152600160205260409020546118959084611967565b6001600160a01b03861660009081526001602090815260408083209390935560169052205460ff166118fa576019546001600160a01b038616600090815260016020526040902054106118fa5760405162461bcd60e51b8152600401610715906122be565b846001600160a01b0316866001600160a01b03166000805160206125a88339815191528560405161192b919061248c565b60405180910390a3505050505050565b6000818484111561195f5760405162461bcd60e51b815260040161071591906120f7565b505050900390565b60008282018381101561198c5760405162461bcd60e51b815260040161071590612219565b9392505050565b6001600160a01b0382166119b95760405162461bcd60e51b81526004016107159061236b565b6119f6816040518060600160405280602281526020016125ed602291396001600160a01b038516600090815260016020526040902054919061193b565b6001600160a01b038316600090815260016020526040902055600354611a1c9082611bf5565b6003556040516000906001600160a01b038416906000805160206125a883398151915290611a4b90859061248c565b60405180910390a35050565b6001600160a01b038116611a7d5760405162461bcd60e51b8152600401610715906121d3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600c805460ff60a01b1916600160a01b1790556000611af8826002611bb3565b90506000611b068383611bf5565b905047611b1283611c37565b6000611b1e4783611bf5565b9050611b2a8382611d93565b7f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561848285604051611b5d93929190612505565b60405180910390a15050600c805460ff60a01b19169055505050565b600082611b88575060006107f7565b82820282848281611b9557fe5b041461198c5760405162461bcd60e51b81526004016107159061227d565b600061198c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e45565b600061198c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061193b565b60408051600280825260608083018452926020830190803683370190505090503081600081518110611c6557fe5b6001600160a01b03928316602091820292909201810191909152600b54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611cb957600080fd5b505afa158015611ccd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf19190611e98565b81600181518110611cfe57fe5b6001600160a01b039283166020918202929092010152600b54611d2491309116846110ed565b600b5460405163791ac94760e01b81526001600160a01b039091169063791ac94790611d5d908590600090869030904290600401612495565b600060405180830381600087803b158015611d7757600080fd5b505af1158015611d8b573d6000803e3d6000fd5b505050505050565b600b54611dab9030906001600160a01b0316846110ed565b600b546001600160a01b031663f305d719823085600080611dca610e0f565b426040518863ffffffff1660e01b8152600401611dec96959493929190612096565b6060604051808303818588803b158015611e0557600080fd5b505af1158015611e19573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e3e919061200a565b5050505050565b60008183611e665760405162461bcd60e51b815260040161071591906120f7565b506000838581611e7257fe5b0495945050505050565b600060208284031215611e8d578081fd5b813561198c81612544565b600060208284031215611ea9578081fd5b815161198c81612544565b60008060408385031215611ec6578081fd5b8235611ed181612544565b91506020830135611ee181612544565b809150509250929050565b600080600060608486031215611f00578081fd5b8335611f0b81612544565b92506020840135611f1b81612544565b91506040840135611f2b81612544565b809150509250925092565b600080600060608486031215611f4a578283fd5b8335611f5581612544565b92506020840135611f6581612544565b929592945050506040919091013590565b60008060408385031215611f88578182fd5b8235611f9381612544565b915060208301358015158114611ee1578182fd5b60008060408385031215611fb9578182fd5b8235611fc481612544565b946020939093013593505050565b600060208284031215611fe3578081fd5b8135801515811461198c578182fd5b600060208284031215612003578081fd5b5035919050565b60008060006060848603121561201e578283fd5b8351925060208401519150604084015190509250925092565b6000806000806080858703121561204c578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b6001600160a01b039290921682521515602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561212357858101830151858201604001528201612107565b818111156121345783604083870101525b50601f01601f1916929092016040019392505050565b60208082526025908201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601390820152721d1c98591a5b99c81a5cc8191a5cd8589b1959606a1b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f616c72656164792062616c616e6365206578697374206d617820616d6f756e74604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526023908201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526021908201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b602080825260099082015268189b1858dadb1a5cdd60ba1b604082015260600190565b60208082526032908201527f42455032303a207472616e7366657220616d6f756e742065786365656473206d604082015271185e081d1c985b9cd9995c88185b5bdd5b9d60721b606082015260800190565b60208082526022908201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b815481526001820154602082015260028201546040820152600390910154606082015260800190565b90815260200190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156124e45784516001600160a01b0316835293830193918301916001016124bf565b50506001600160a01b03969096166060850152505050608001529392505050565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff91909116815260200190565b6001600160a01b0381168114610c4757600080fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220aa0de59fad843dae040a104d2f5b1e4abd4dedeb04ba83420b1a8aab32cd574e64736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x24A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xE0F3CCF5 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xE4748B9E EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xF5034B0A EQ PUSH2 0x6CB JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xAA1EF598 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC1258A40 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xC5820AD0 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xD12A7688 EQ PUSH2 0x61C JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xA168D873 EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0x592 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x7439C236 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x799BEC12 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x51E JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x47CB8C04 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x47CB8C04 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x494 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x3E341212 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x421EA58B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x420 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x1EBE8BE8 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x28EC13EE EQ PUSH2 0x389 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x61DC8EF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x1755FF21 EQ PUSH2 0x2F0 JUMPI PUSH2 0x251 JUMP JUMPDEST CALLDATASIZE PUSH2 0x251 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x8A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BE PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xC2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0xC3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xC5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xC6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xC7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xC9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xD6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0xDFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xE1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xE7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xEF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x5E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0xF8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x617 CALLDATASIZE PUSH1 0x4 PUSH2 0x2037 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x1013 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x327 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x1053 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x6A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FF2 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x6C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7C JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x7EC PUSH2 0x10E9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x1365A36244C5F48793FE8C34E438F543DE193BDEA38C4F133C166DCE6FC12145 SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH1 0x11 SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP5 DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0x938 DUP5 PUSH2 0x8D4 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x933 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x912 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x10ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x977 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x984 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP3 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xB68 PUSH2 0x10E9 JUMP JUMPDEST DUP5 PUSH2 0x933 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xB79 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xBB1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x11 DUP5 DUP2 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x13 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4033C61B7A7BDA78889373D049A0BB6DD3500D8BFF8ACE1617CB78413102E807 SWAP2 PUSH2 0xC20 SWAP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC47 CALLER DUP3 PUSH2 0x1993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH1 0xD SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCA5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD24 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD77 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0xD5144D2A6C8FF9B87B7A40852DF5102CAB2CE561C06B56CC6FE7CCF1FA7F8C2D SWAP1 PUSH2 0x888 SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0A PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xE9B PUSH2 0x10E9 JUMP JUMPDEST DUP5 PUSH2 0x933 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xEC5 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 PUSH2 0xF12 PUSH2 0x10E9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11A1 JUMP JUMPDEST PUSH2 0xF21 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xFA4 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0xD DUP5 DUP2 SSTORE PUSH1 0xE DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0x10 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x59B16BF8C94A0FD94BD5C030EC293D45B519B7DC85A474B840DDD20E347FF43B SWAP2 PUSH2 0xC20 SWAP2 PUSH2 0x2463 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD DUP5 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD DUP5 JUMP JUMPDEST PUSH2 0x106A PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1139 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1194 SWAP1 DUP6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x122F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x1274 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x1299 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP1 PUSH1 0x18 SLOAD LT ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2582 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x134D ADDRESS PUSH2 0xC82 JUMP JUMPDEST SWAP1 POP PUSH1 0x18 SLOAD DUP2 LT PUSH2 0x135D JUMPI POP PUSH1 0x18 SLOAD JUMPDEST PUSH1 0x1A SLOAD DUP2 LT DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x137B JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1395 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AA JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13BD JUMPI PUSH1 0x1A SLOAD SWAP2 POP PUSH2 0x13BD DUP3 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1872 JUMPI PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1415 PUSH2 0x3E8 PUSH2 0x140F PUSH2 0x1404 PUSH2 0x8A9 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x3E8 SUB PUSH2 0x1B79 JUMP JUMPDEST SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1435 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0x11 PUSH1 0x0 ADD SLOAD DUP8 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH2 0x146C SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x14 SLOAD PUSH2 0x14A3 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x13 SLOAD PUSH2 0x14DA SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1528 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1575 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1582 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x15C2 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1618 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0x11 PUSH1 0x2 ADD SLOAD DUP11 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1625 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1659 PUSH2 0x3E8 PUSH2 0x140F PUSH2 0x1404 PUSH2 0xC4A JUMP JUMPDEST SWAP3 POP PUSH2 0x1679 PUSH2 0x3E8 PUSH2 0x140F PUSH1 0xD PUSH1 0x0 ADD SLOAD DUP8 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xE SLOAD PUSH2 0x16B0 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x10 SLOAD PUSH2 0x16E7 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xF SLOAD PUSH2 0x171E SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP8 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x176C SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x17B9 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C6 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x9 SLOAD PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1806 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x140F SWAP1 DUP11 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1813 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x185C PUSH2 0x3E8 PUSH2 0x140F PUSH1 0xD PUSH1 0x2 ADD SLOAD DUP11 PUSH2 0x1B79 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1869 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1895 SWAP1 DUP5 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x16 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18FA JUMPI PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0x18FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x22BE JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x192B SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x195F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x2219 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x236B JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25ED PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x1A1C SWAP1 DUP3 PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1A4B SWAP1 DUP6 SWAP1 PUSH2 0x248C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1AF8 DUP3 PUSH1 0x2 PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B06 DUP4 DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x1B12 DUP4 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E SELFBALANCE DUP4 PUSH2 0x1BF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B2A DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1B5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B88 JUMPI POP PUSH1 0x0 PUSH2 0x7F7 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B95 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C65 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CF1 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1CFE JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x1D24 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1D5D SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1DAB SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH1 0x0 DUP1 PUSH2 0x1DCA PUSH2 0xE0F JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3E SWAP2 SWAP1 PUSH2 0x200A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x1E72 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x198C DUP2 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x198C DUP2 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1ED1 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1EE1 DUP2 PUSH2 0x2544 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F00 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F0B DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F1B DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x2544 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F4A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F55 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1F65 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F88 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1F93 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1EE1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC4 DUP2 PUSH2 0x2544 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x198C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2003 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x201E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x204C JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2123 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2107 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2134 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x1D1C98591A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x616C72656164792062616C616E6365206578697374206D617820616D6F756E74 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x189B1858DADB1A5CDD PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220616D6F756E742065786365656473206D PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x185E081D1C985B9CD9995C88185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E4 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24BF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E6365DDF252AD1BE2C89B69 0xC2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E6365A2646970 PUSH7 0x7358221220AA0D 0xE5 SWAP16 0xAD DUP5 RETURNDATASIZE 0xAE DIV EXP LT 0x4D 0x2F JUMPDEST 0x1E 0x4A 0xBD 0x4D 0xED 0xEB DIV 0xBA DUP4 TIMESTAMP SIGNEXTEND BYTE DUP11 0xAB ORIGIN 0xCD JUMPI 0x4E PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"17350:14476:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26543:138;;;;;;;;;;-1:-1:-1;26543:138:0;;;;;:::i;:::-;;:::i;:::-;;18283:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18907:154;;;;;;;;;;-1:-1:-1;18907:154:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25735:158::-;;;;;;;;;;-1:-1:-1;25735:158:0;;;;;:::i;:::-;;:::i;21829:26::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18376:93::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;26074:156::-;;;;;;;;;;;;;:::i;19069:306::-;;;;;;;;;;-1:-1:-1;19069:306:0;;;;;:::i;:::-;;:::i;24774:122::-;;;;;;;;;;-1:-1:-1;24774:122:0;;;;;:::i;:::-;;:::i;24026:365::-;;;;;;;;;;-1:-1:-1;24026:365:0;;;;;:::i;:::-;;:::i;18093:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;19383:210::-;;;;;;;;;;-1:-1:-1;19383:210:0;;;;;:::i;:::-;;:::i;24908:339::-;;;;;;;;;;-1:-1:-1;24908:339:0;;;;;:::i;:::-;;:::i;21946:43::-;;;;;;;;;;;;;:::i;19870:82::-;;;;;;;;;;-1:-1:-1;19870:82:0;;;;;:::i;:::-;;:::i;25901:161::-;;;;;;;;;;;;;:::i;22183:40::-;;;;;;;;;;;;;:::i;22230:33::-;;;;;;;;;;;;;:::i;22597:41::-;;;;;;;;;;;;;:::i;18477:110::-;;;;;;;;;;-1:-1:-1;18477:110:0;;;;;:::i;:::-;;:::i;11918:140::-;;;;;;;;;;;;;:::i;25609:118::-;;;;;;;;;;-1:-1:-1;25609:118:0;;;;;:::i;:::-;;:::i;26297:181::-;;;;;;;;;;-1:-1:-1;26297:181:0;;;;;:::i;:::-;;:::i;22553:37::-;;;;;;;;;;;;;:::i;17990:95::-;;;;;;;;;;;;;:::i;11284:79::-;;;;;;;;;;;;;:::i;18186:89::-;;;;;;;;;;;;;:::i;21796:26::-;;;;;;;;;;;;;:::i;19601:261::-;;;;;;;;;;-1:-1:-1;19601:261:0;;;;;:::i;:::-;;:::i;21758:31::-;;;;;;;;;;;;;:::i;18595:160::-;;;;;;;;;;-1:-1:-1;18595:160:0;;;;;:::i;:::-;;:::i;24399:253::-;;;;;;;;;;-1:-1:-1;24399:253:0;;;;;:::i;:::-;;:::i;21996:32::-;;;;;;;;;;;;;:::i;25255:346::-;;;;;;;;;;-1:-1:-1;25255:346:0;;;;;:::i;:::-;;:::i;22645:52::-;;;;;;;;;;;;;:::i;18763:136::-;;;;;;;;;;-1:-1:-1;18763:136:0;;;;;:::i;:::-;;:::i;22316:20::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;22343:19::-;;;;;;;;;;;;;:::i;24660:106::-;;;;;;;;;;-1:-1:-1;24660:106:0;;;;;:::i;:::-;;:::i;12210:109::-;;;;;;;;;;-1:-1:-1;12210:109:0;;;;;:::i;:::-;;:::i;21862:30::-;;;;;;;;;;;;;:::i;26543:138::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;26636:24:0;;;::::1;;::::0;;;:18:::1;:24;::::0;;;;:37;;-1:-1:-1;;26636:37:0::1;::::0;::::1;;::::0;;;::::1;::::0;;26543:138::o;18283:85::-;18355:5;18348:12;;;;;;;;-1:-1:-1;;18348:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18322:13;;18348:12;;18355:5;;18348:12;;18355:5;18348:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18283:85;:::o;18907:154::-;18975:4;18992:39;19001:12;:10;:12::i;:::-;19015:7;19024:6;18992:8;:39::i;:::-;-1:-1:-1;19049:4:0;18907:154;;;;;:::o;25735:158::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;25816:15:0;::::1;;::::0;;;:9:::1;:15;::::0;;;;;;:26;;-1:-1:-1;;25816:26:0::1;::::0;::::1;;;::::0;;25858:27;::::1;::::0;::::1;::::0;25816:15;;:26;;25858:27:::1;:::i;:::-;;;;;;;;25735:158:::0;;:::o;21829:26::-;;;-1:-1:-1;;;;;21829:26:0;;:::o;18376:93::-;18449:12;;18376:93;:::o;26074:156::-;26206:15;;26186:17;;26165:18;;26206:7;26145:17;:38;:58;:76;26074:156;:::o;19069:306::-;19160:4;19177:36;19187:6;19195:9;19206:6;19177:9;:36::i;:::-;19224:121;19233:6;19241:12;:10;:12::i;:::-;19255:89;19293:6;19255:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19255:19:0;;;;;;:11;:19;;;;;;19275:12;:10;:12::i;:::-;-1:-1:-1;;;;;19255:33:0;;;;;;;;;;;;-1:-1:-1;19255:33:0;;;:89;:37;:89::i;:::-;19224:8;:121::i;:::-;-1:-1:-1;19363:4:0;19069:306;;;;;:::o;24774:122::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;24854:16:::1;:34:::0;24774:122::o;24026:365::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;24194:17:::1;:38:::0;;-1:-1:-1;;;;;;24194:38:0::1;-1:-1:-1::0;;;;;24194:38:0;::::1;::::0;;::::1;::::0;;;24283:28:::1;::::0;;-1:-1:-1;;;24283:28:0;;;;24194:38;;;24283:26:::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;24194:38;24283:28;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;24263:60:0::1;;24332:4;24339:18;-1:-1:-1::0;;;;;24339:23:0::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24263:102;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24243:17;:122:::0;;-1:-1:-1;;;;;;24243:122:0::1;-1:-1:-1::0;;;;;24243:122:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;24026:365:0:o;18093:85::-;18161:9;;;;18093:85;:::o;19383:210::-;19463:4;19480:83;19489:12;:10;:12::i;:::-;19503:7;19512:50;19551:10;19512:11;:25;19524:12;:10;:12::i;:::-;-1:-1:-1;;;;;19512:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;19512:25:0;;;:34;;;;;;;;;;;:38;:50::i;24908:339::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;25045:7:::1;:33:::0;;;25089:18;:35;;;25135:17;:33;;;25179:15;:26;;;25221:18:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;24908:339:::0;;;;:::o;21946:43::-;;;-1:-1:-1;;;;;21946:43:0;;:::o;19870:82::-;19920:24;19926:10;19937:6;19920:5;:24::i;:::-;19870:82;:::o;25901:161::-;26037:16;;26016:18;;25994:19;;26037:8;25973:18;:40;:61;:80;25901:161;:::o;22183:40::-;;;-1:-1:-1;;;22183:40:0;;;;;:::o;22230:33::-;;;-1:-1:-1;;;22230:33:0;;;;;:::o;22597:41::-;;;;:::o;18477:110::-;-1:-1:-1;;;;;18561:18:0;18534:7;18561:18;;;:9;:18;;;;;;;18477:110::o;11918:140::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;12017:1:::1;12001:6:::0;;11980:40:::1;::::0;-1:-1:-1;;;;;12001:6:0;;::::1;::::0;11980:40:::1;::::0;12017:1;;11980:40:::1;12048:1;12031:19:::0;;-1:-1:-1;;;;;;12031:19:0::1;::::0;;11918:140::o;25609:118::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;25687:14:::1;:32:::0;;;::::1;;-1:-1:-1::0;;;25687:32:0::1;-1:-1:-1::0;;;;25687:32:0;;::::1;::::0;;;::::1;::::0;;25609:118::o;26297:181::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;26388:22:0;::::1;;::::0;;;:16:::1;:22;::::0;;;;;;:35;;-1:-1:-1;;26388:35:0::1;::::0;::::1;;;::::0;;26439:31;::::1;::::0;::::1;::::0;26388:22;;:35;;26439:31:::1;:::i;22553:37::-:0;;;;:::o;17990:95::-;18033:7;18060;:5;:7::i;:::-;18053:14;;17990:95;:::o;11284:79::-;11322:7;11349:6;-1:-1:-1;;;;;11349:6:0;11284:79;:::o;18186:89::-;18260:7;18253:14;;;;;;;;-1:-1:-1;;18253:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18227:13;;18253:14;;18260:7;;18253:14;;18260:7;18253:14;;;;;;;;;;;;;;;;;;;;;;;;21796:26;;;-1:-1:-1;;;;;21796:26:0;;:::o;19601:261::-;19686:4;19703:129;19712:12;:10;:12::i;:::-;19726:7;19735:96;19774:15;19735:96;;;;;;;;;;;;;;;;;:11;:25;19747:12;:10;:12::i;:::-;-1:-1:-1;;;;;19735:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;19735:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;21758:31::-;;;-1:-1:-1;;;;;21758:31:0;;:::o;18595:160::-;18666:4;18683:42;18693:12;:10;:12::i;:::-;18707:9;18718:6;18683:9;:42::i;24399:253::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;24526:16:::1;:36:::0;;-1:-1:-1;;;;;24526:36:0;;::::1;-1:-1:-1::0;;;;;;24526:36:0;;::::1;;::::0;;;24580:11:::1;:26:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;24618:11:::1;:26:::0;;;;;::::1;::::0;::::1;;::::0;;24399:253::o;21996:32::-;;;-1:-1:-1;;;;;21996:32:0;;:::o;25255:346::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;25393:8:::1;:34:::0;;;25438:19;:36;;;25485:18;:34;;;25530:16;:27;;;25573:20:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;22645:52::-:0;;;;:::o;18763:136::-;-1:-1:-1;;;;;18864:18:0;;;18837:7;18864:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;18763:136::o;22316:20::-;;;;;;;;;;:::o;22343:19::-;;;;;;;;;;:::o;24660:106::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;24732:12:::1;:26:::0;24660:106::o;12210:109::-;11504:12;:10;:12::i;:::-;11494:6;;-1:-1:-1;;;;;11494:6:0;;;:22;;;11486:67;;;;-1:-1:-1;;;11486:67:0;;;;;;;:::i;:::-;12283:28:::1;12302:8;12283:18;:28::i;21862:30::-:0;;;-1:-1:-1;;;;;21862:30:0;;:::o;10405:98::-;10485:10;10405:98;:::o;20632:338::-;-1:-1:-1;;;;;20726:19:0;;20718:68;;;;-1:-1:-1;;;20718:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20805:21:0;;20797:68;;;;-1:-1:-1;;;20797:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;20878:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;20930:32;;;;;20908:6;;20930:32;:::i;:::-;;;;;;;;20632:338;;;:::o;26731:3589::-;-1:-1:-1;;;;;26829:20:0;;26821:70;;;;-1:-1:-1;;;26821:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;26910:23:0;;26902:71;;;;-1:-1:-1;;;26902:71:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;26995:17:0;;;;;;:9;:17;;;;;;;;26994:18;:41;;;;-1:-1:-1;;;;;;27015:20:0;;;;;;:9;:20;;;;;;;;27014:21;26994:41;26986:62;;;;-1:-1:-1;;;26986:62:0;;;;;;;:::i;:::-;27095:17;;-1:-1:-1;;;;;27085:27:0;;;27095:17;;27085:27;;:61;;-1:-1:-1;27129:17:0;;-1:-1:-1;;;;;27116:30:0;;;27129:17;;27116:30;27085:61;27084:92;;;;-1:-1:-1;;;;;;27152:24:0;;;;;;:16;:24;;;;;;;;27151:25;27084:92;27081:269;;;27214:6;27200:12;;:20;;27192:82;;;;-1:-1:-1;;;27192:82:0;;;;;;;:::i;:::-;27297:14;;-1:-1:-1;;;27297:14:0;;;;27289:45;;;;-1:-1:-1;;;27289:45:0;;;;;;;:::i;:::-;27380:71;27402:6;27380:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27380:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;27360:17:0;;;;;;:9;:17;;;;;:91;;;;27485:6;;27535:24;27553:4;27535:9;:24::i;:::-;27504:55;;27607:12;;27583:20;:36;27580:112;;-1:-1:-1;27668:12:0;;27580:112;27763:29;;27739:53;;;;;;;27823;;-1:-1:-1;27860:16:0;;-1:-1:-1;;;27860:16:0;;;;27859:17;27823:53;:97;;;;-1:-1:-1;27903:17:0;;-1:-1:-1;;;;;27893:27:0;;;27903:17;;27893:27;;27823:97;:135;;;;-1:-1:-1;27937:21:0;;-1:-1:-1;;;27937:21:0;;;;27823:135;27805:324;;;28008:29;;27985:52;;28081:36;28096:20;28081:14;:36::i;:::-;-1:-1:-1;;;;;28145:24:0;;;;;;:16;:24;;;;;;;;28141:1883;;28201:17;;-1:-1:-1;;;;;28191:27:0;;;28201:17;;28191:27;28188:1825;;;28282:50;28327:4;28282:40;28305:16;:14;:16::i;:::-;28282:13;;28300:4;:21;28282:17;:40::i;:::-;:44;;:50::i;:::-;28266:66;;28383:39;28417:4;28383:29;28394:7;:17;;;28383:6;:10;;:29;;;;:::i;:39::-;28362:16;;-1:-1:-1;;;;;28362:16:0;28352:27;;;;:9;:27;;;;;:70;;;;;;;28478:18;;28467:40;;28502:4;;28467:30;;:6;;:10;:30::i;:40::-;28451:11;;-1:-1:-1;;;;;28451:11:0;28441:22;;;;:9;:22;;;;;:66;;;;;;;28563:15;;28552:37;;28584:4;;28552:27;;:6;;:10;:27::i;:37::-;28536:11;;-1:-1:-1;;;;;28536:11:0;28526:22;;;;:9;:22;;;;;:63;;;;;;;28647:17;;28636:39;;28670:4;;28636:29;;:6;;:10;:29::i;:39::-;28626:4;28608:24;;;;:9;:24;;;;;:67;;;;;;;28734:16;;28763:7;:17;-1:-1:-1;;;;;28734:16:0;;;;28717:75;;;-1:-1:-1;;;;;;;;;;;28717:75:0;28752:39;;28786:4;;28752:29;;:6;;:10;:29::i;:39::-;28717:75;;;;;;:::i;:::-;;;;;;;;28833:11;;28857:18;;-1:-1:-1;;;;;28833:11:0;;;;28816:71;;;-1:-1:-1;;;;;;;;;;;28816:71:0;28846:40;;28881:4;;28846:30;;:6;;:10;:30::i;:40::-;28816:71;;;;;;:::i;:::-;;;;;;;;28928:11;;28952:15;;-1:-1:-1;;;;;28928:11:0;;;;28911:68;;;-1:-1:-1;;;;;;;;;;;28911:68:0;28941:37;;28973:4;;28941:27;;:6;;:10;:27::i;:37::-;28911:68;;;;;;:::i;:::-;;;;;;;;29028:4;-1:-1:-1;;;;;29003:72:0;29012:6;-1:-1:-1;;;;;29003:72:0;-1:-1:-1;;;;;;;;;;;29035:39:0;29069:4;29035:29;29046:7;:17;;;29035:6;:10;;:29;;;;:::i;:39::-;29003:72;;;;;;:::i;:::-;;;;;;;;28188:1825;;;29126:17;;-1:-1:-1;;;;;29113:30:0;;;29126:17;;29113:30;29110:903;;;29208:51;29254:4;29208:41;29231:17;:15;:17::i;29208:51::-;29192:67;;29313:40;29348:4;29313:30;29324:8;:18;;;29313:6;:10;;:30;;;;:::i;:40::-;29292:16;;-1:-1:-1;;;;;29292:16:0;29282:27;;;;:9;:27;;;;;:71;;;;;;;29409:19;;29398:41;;29434:4;;29398:31;;:6;;:10;:31::i;:41::-;29382:11;;-1:-1:-1;;;;;29382:11:0;29372:22;;;;:9;:22;;;;;:67;;;;;;;29495:16;;29484:38;;29517:4;;29484:28;;:6;;:10;:28::i;:38::-;29468:11;;-1:-1:-1;;;;;29468:11:0;29458:22;;;;:9;:22;;;;;:64;;;;;;;29580:18;;29569:40;;29604:4;;29569:30;;:6;;:10;:30::i;:40::-;29559:4;29541:24;;;;:9;:24;;;;;:68;;;;;;;29652:16;;29681:8;:18;-1:-1:-1;;;;;29652:16:0;;;;29635:76;;;-1:-1:-1;;;;;;;;;;;29635:76:0;29670:40;;29705:4;;29670:30;;:6;;:10;:30::i;:40::-;29635:76;;;;;;:::i;:::-;;;;;;;;29752:11;;29776:19;;-1:-1:-1;;;;;29752:11:0;;;;29735:72;;;-1:-1:-1;;;;;;;;;;;29735:72:0;29765:41;;29801:4;;29765:31;;:6;;:10;:31::i;:41::-;29735:72;;;;;;:::i;:::-;;;;;;;;29848:11;;29872:16;;-1:-1:-1;;;;;29848:11:0;;;;29831:69;;;-1:-1:-1;;;;;;;;;;;29831:69:0;29861:38;;29894:4;;29861:28;;:6;;:10;:28::i;:38::-;29831:69;;;;;;:::i;:::-;;;;;;;;29949:4;-1:-1:-1;;;;;29924:73:0;29933:6;-1:-1:-1;;;;;29924:73:0;-1:-1:-1;;;;;;;;;;;29956:40:0;29991:4;29956:30;29967:8;:18;;;29956:6;:10;;:30;;;;:::i;:40::-;29924:73;;;;;;:::i;:::-;;;;;;;;29110:903;-1:-1:-1;;;;;30059:20:0;;;;;;:9;:20;;;;;;:39;;30084:13;30059:24;:39::i;:::-;-1:-1:-1;;;;;30036:20:0;;;;;;:9;:20;;;;;;;;:62;;;;30115:18;:29;;;;;;30111:129;;30188:16;;-1:-1:-1;;;;;30167:20:0;;;;;;:9;:20;;;;;;:37;30159:81;;;;-1:-1:-1;;;30159:81:0;;;;;;;:::i;:::-;30287:9;-1:-1:-1;;;;;30270:42:0;30279:6;-1:-1:-1;;;;;30270:42:0;-1:-1:-1;;;;;;;;;;;30298:13:0;30270:42;;;;;;:::i;:::-;;;;;;;;26731:3589;;;;;;:::o;13818:192::-;13904:7;13940:12;13932:6;;;;13924:29;;;;-1:-1:-1;;;13924:29:0;;;;;;;;:::i;:::-;-1:-1:-1;;;13976:5:0;;;13818:192::o;12947:181::-;13005:7;13037:5;;;13061:6;;;;13053:46;;;;-1:-1:-1;;;13053:46:0;;;;;;;:::i;:::-;13119:1;12947:181;-1:-1:-1;;;12947:181:0:o;20276:348::-;-1:-1:-1;;;;;20352:21:0;;20344:67;;;;-1:-1:-1;;;20344:67:0;;;;;;;:::i;:::-;20445:68;20468:6;20445:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20445:18:0;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;20424:18:0;;;;;;:9;:18;;;;;:89;20539:12;;:24;;20556:6;20539:16;:24::i;:::-;20524:12;:39;20579:37;;20605:1;;-1:-1:-1;;;;;20579:37:0;;;-1:-1:-1;;;;;;;;;;;20579:37:0;;;20609:6;;20579:37;:::i;:::-;;;;;;;;20276:348;;:::o;12423:229::-;-1:-1:-1;;;;;12497:22:0;;12489:73;;;;-1:-1:-1;;;12489:73:0;;;;;;;:::i;:::-;12599:6;;;12578:38;;-1:-1:-1;;;;;12578:38:0;;;;12599:6;;;12578:38;;;12627:6;:17;;-1:-1:-1;;;;;;12627:17:0;-1:-1:-1;;;;;12627:17:0;;;;;;;;;;12423:229::o;30328:534::-;22097:16;:23;;-1:-1:-1;;;;22097:23:0;-1:-1:-1;;;22097:23:0;;;;30479:27:::1;:20:::0;30504:1:::1;30479:24;:27::i;:::-;30464:42:::0;-1:-1:-1;30517:17:0::1;30537:30;:20:::0;30464:42;30537:24:::1;:30::i;:::-;30517:50:::0;-1:-1:-1;30605:21:0::1;30639:22;30656:4:::0;30639:16:::1;:22::i;:::-;30675:18;30696:41;:21;30722:14:::0;30696:25:::1;:41::i;:::-;30675:62;;30750:35;30763:9;30774:10;30750:12;:35::i;:::-;30811:43;30826:4;30832:10;30844:9;30811:43;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;22143:16:0;:24;;-1:-1:-1;;;;22143:24:0;;;-1:-1:-1;;;30328:534:0:o;14253:467::-;14311:7;14556:6;14552:43;;-1:-1:-1;14582:1:0;14575:8;;14552:43;14619:5;;;14623:1;14619;:5;:1;14643:5;;;;;:10;14635:56;;;;-1:-1:-1;;;14635:56:0;;;;;;;:::i;15178:132::-;15236:7;15263:39;15267:1;15270;15263:39;;;;;;;;;;;;;;;;;:3;:39::i;13395:136::-;13453:7;13480:43;13484:1;13487;13480:43;;;;;;;;;;;;;;;;;:3;:43::i;30870:482::-;30960:16;;;30974:1;30960:16;;;30936:21;30960:16;;;;;30936:21;30960:16;;;;;;;;;;-1:-1:-1;30960:16:0;30936:40;;31005:4;30987;30992:1;30987:7;;;;;;;;-1:-1:-1;;;;;30987:23:0;;;:7;;;;;;;;;;:23;;;;31031:17;;:24;;;-1:-1:-1;;;31031:24:0;;;;:17;;;;;:22;;:24;;;;;30987:7;;31031:24;;;;;:17;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31021:4;31026:1;31021:7;;;;;;;;-1:-1:-1;;;;;31021:34:0;;;:7;;;;;;;;;:34;31100:17;;31068:64;;31085:4;;31100:17;31120:11;31068:8;:64::i;:::-;31145:17;;:199;;-1:-1:-1;;;31145:199:0;;-1:-1:-1;;;;;31145:17:0;;;;:68;;:199;;31228:11;;31145:17;;31271:4;;31298;;31318:15;;31145:199;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30870:482;;:::o;31360:420::-;31473:17;;31441:64;;31458:4;;-1:-1:-1;;;;;31473:17:0;31493:11;31441:8;:64::i;:::-;31518:17;;-1:-1:-1;;;;;31518:17:0;:33;31559:9;31592:4;31612:11;31518:17;;31724:7;:5;:7::i;:::-;31746:15;31518:254;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;31360:420;;:::o;15788:345::-;15874:7;15976:12;15969:5;15961:28;;;;-1:-1:-1;;;15961:28:0;;;;;;;;:::i;:::-;;16000:9;16016:1;16012;:5;;;;;;;15788:345;-1:-1:-1;;;;;15788:345:0:o;692:241:-1:-;;796:2;784:9;775:7;771:23;767:32;764:2;;;-1:-1;;802:12;764:2;85:6;72:20;97:33;124:5;97:33;:::i;940:263::-;;1055:2;1043:9;1034:7;1030:23;1026:32;1023:2;;;-1:-1;;1061:12;1023:2;226:6;220:13;238:33;265:5;238:33;:::i;1210:366::-;;;1331:2;1319:9;1310:7;1306:23;1302:32;1299:2;;;-1:-1;;1337:12;1299:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1389:63;-1:-1;1489:2;1528:22;;72:20;97:33;72:20;97:33;:::i;:::-;1497:63;;;;1293:283;;;;;:::o;1583:491::-;;;;1721:2;1709:9;1700:7;1696:23;1692:32;1689:2;;;-1:-1;;1727:12;1689:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1779:63;-1:-1;1879:2;1918:22;;72:20;97:33;72:20;97:33;:::i;:::-;1887:63;-1:-1;1987:2;2026:22;;72:20;97:33;72:20;97:33;:::i;:::-;1995:63;;;;1683:391;;;;;:::o;2081:491::-;;;;2219:2;2207:9;2198:7;2194:23;2190:32;2187:2;;;-1:-1;;2225:12;2187:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2277:63;-1:-1;2377:2;2416:22;;72:20;97:33;72:20;97:33;:::i;:::-;2181:391;;2385:63;;-1:-1;;;2485:2;2524:22;;;;481:20;;2181:391::o;2579:360::-;;;2697:2;2685:9;2676:7;2672:23;2668:32;2665:2;;;-1:-1;;2703:12;2665:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2755:63;-1:-1;2855:2;2891:22;;347:20;25125:13;;25118:21;27109:32;;27099:2;;-1:-1;;27145:12;2946:366;;;3067:2;3055:9;3046:7;3042:23;3038:32;3035:2;;;-1:-1;;3073:12;3035:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3125:63;3225:2;3264:22;;;;481:20;;-1:-1;;;3029:283::o;3319:235::-;;3420:2;3408:9;3399:7;3395:23;3391:32;3388:2;;;-1:-1;;3426:12;3388:2;360:6;347:20;27134:5;25125:13;25118:21;27112:5;27109:32;27099:2;;-1:-1;;27145:12;3561:241;;3665:2;3653:9;3644:7;3640:23;3636:32;3633:2;;;-1:-1;;3671:12;3633:2;-1:-1;481:20;;3627:175;-1:-1;3627:175::o;3809:535::-;;;;3958:2;3946:9;3937:7;3933:23;3929:32;3926:2;;;-1:-1;;3964:12;3926:2;635:6;629:13;4016:74;;4127:2;4181:9;4177:22;629:13;4135:74;;4246:2;4300:9;4296:22;629:13;4254:74;;3920:424;;;;;:::o;4351:617::-;;;;;4506:3;4494:9;4485:7;4481:23;4477:33;4474:2;;;-1:-1;;4513:12;4474:2;-1:-1;;481:20;;;4665:2;4704:22;;481:20;;-1:-1;4773:2;4812:22;;481:20;;4881:2;4920:22;481:20;;-1:-1;4468:500;-1:-1;4468:500::o;13271:222::-;-1:-1;;;;;25213:54;;;;5367:37;;13398:2;13383:18;;13369:124::o;13500:349::-;-1:-1;;;;;25213:54;;;5236:58;;25213:54;;13835:2;13820:18;;5367:37;13663:2;13648:18;;13634:215::o;13856:828::-;-1:-1;;;;;25213:54;;;5236:58;;14320:2;14305:18;;12988:37;;;;14411:2;14396:18;;6640:58;;;;14502:2;14487:18;;6640:58;;;;25213:54;;;14585:3;14570:19;;5367:37;25224:42;14654:19;;12988:37;;;;14147:3;14132:19;;14118:566::o;14691:321::-;-1:-1;;;;;25213:54;;;;5367:37;;25125:13;25118:21;14998:2;14983:18;;6330:34;14840:2;14825:18;;14811:201::o;15019:210::-;25125:13;;25118:21;6330:34;;15140:2;15125:18;;15111:118::o;15517:310::-;;15664:2;;15685:17;15678:47;6855:5;24225:12;24641:6;15664:2;15653:9;15649:18;24629:19;-1:-1;26342:101;26356:6;26353:1;26350:13;26342:101;;;26423:11;;;;;26417:18;26404:11;;;24669:14;26404:11;26397:39;26371:10;;26342:101;;;26458:6;26455:1;26452:13;26449:2;;;-1:-1;24669:14;26514:6;15653:9;26505:16;;26498:27;26449:2;-1:-1;26798:7;26782:14;-1:-1;;26778:28;7013:39;;;;24669:14;7013:39;;15635:192;-1:-1;;;15635:192::o;15834:416::-;16034:2;16048:47;;;7289:2;16019:18;;;24629:19;7325:34;24669:14;;;7305:55;-1:-1;;;7380:12;;;7373:29;7421:12;;;16005:245::o;16257:416::-;16457:2;16471:47;;;7672:2;16442:18;;;24629:19;7708:34;24669:14;;;7688:55;-1:-1;;;7763:12;;;7756:28;7803:12;;;16428:245::o;16680:416::-;16880:2;16894:47;;;8054:2;16865:18;;;24629:19;8090:34;24669:14;;;8070:55;-1:-1;;;8145:12;;;8138:30;8187:12;;;16851:245::o;17103:416::-;17303:2;17317:47;;;8438:2;17288:18;;;24629:19;8474:29;24669:14;;;8454:50;8523:12;;;17274:245::o;17526:416::-;17726:2;17740:47;;;8774:2;17711:18;;;24629:19;-1:-1;;;24669:14;;;8790:42;8851:12;;;17697:245::o;17949:416::-;18149:2;18163:47;;;9102:2;18134:18;;;24629:19;9138:34;24669:14;;;9118:55;-1:-1;;;9193:12;;;9186:25;9230:12;;;18120:245::o;18372:416::-;18572:2;18586:47;;;18557:18;;;24629:19;9517:34;24669:14;;;9497:55;9571:12;;;18543:245::o;18795:416::-;18995:2;19009:47;;;18980:18;;;24629:19;9858:34;24669:14;;;9838:55;9912:12;;;18966:245::o;19218:416::-;19418:2;19432:47;;;10163:2;19403:18;;;24629:19;10199:34;24669:14;;;10179:55;-1:-1;;;10254:12;;;10247:27;10293:12;;;19389:245::o;19641:416::-;19841:2;19855:47;;;10544:2;19826:18;;;24629:19;10580:34;24669:14;;;10560:55;-1:-1;;;10635:12;;;10628:25;10672:12;;;19812:245::o;20064:416::-;20264:2;20278:47;;;10923:1;20249:18;;;24629:19;-1:-1;;;24669:14;;;10938:32;10989:12;;;20235:245::o;20487:416::-;20687:2;20701:47;;;11240:2;20672:18;;;24629:19;11276:34;24669:14;;;11256:55;-1:-1;;;11331:12;;;11324:42;11385:12;;;20658:245::o;20910:416::-;21110:2;21124:47;;;11636:2;21095:18;;;24629:19;11672:34;24669:14;;;11652:55;-1:-1;;;11727:12;;;11720:26;11765:12;;;21081:245::o;21333:305::-;12046:23;;12988:37;;12291:4;12280:16;;12274:23;12441:4;12432:14;;12988:37;12518:4;12507:16;;12501:23;12668:4;12659:14;;12988:37;12743:4;12732:16;;;12726:23;12893:4;12884:14;;12988:37;21501:3;21486:19;;21472:166::o;21645:222::-;12988:37;;;21772:2;21757:18;;21743:124::o;21874:848::-;;22179:3;22168:9;22164:19;13018:5;12995:3;12988:37;22352:2;25990:24;22352:2;22341:9;22337:18;6640:58;22179:3;22389:2;22378:9;22374:18;22367:48;22429:108;5760:5;24225:12;24641:6;24636:3;24629:19;24669:14;22168:9;24669:14;5772:93;;22352:2;5936:5;24079:14;5948:21;;-1:-1;5975:260;6000:6;5997:1;5994:13;5975:260;;;6061:13;;-1:-1;;;;;25213:54;5236:58;;24484:14;;;;5129;;;;25224:42;6015:9;5975:260;;;-1:-1;;;;;;;25213:54;;;;22624:2;22609:18;;5236:58;-1:-1;;;22707:3;22692:19;12988:37;22421:116;22150:572;-1:-1;;;22150:572::o;22729:444::-;12988:37;;;23076:2;23061:18;;12988:37;;;;23159:2;23144:18;;12988:37;22912:2;22897:18;;22883:290::o;23180:556::-;12988:37;;;23556:2;23541:18;;12988:37;;;;23639:2;23624:18;;12988:37;23722:2;23707:18;;12988:37;23391:3;23376:19;;23362:374::o;23743:214::-;25429:4;25418:16;;;;13224:35;;23866:2;23851:18;;23837:120::o;26929:117::-;-1:-1;;;;;25213:54;;26988:35;;26978:2;;27037:1;;27027:12"},"gasEstimates":{"creation":{"codeDepositCost":"1959200","executionCost":"infinite","totalCost":"infinite"},"external":{"PancakeSwapRouter()":"1182","PancakeSwapV2Pair()":"1159","_maxTxAmount()":"1140","_maxWalletAmount()":"1139","allowance(address,address)":"infinite","approve(address,uint256)":"22669","babyPoolAddress()":"1224","balanceOf(address)":"1397","burn(uint256)":"infinite","buyFees()":"3588","decimals()":"1092","decreaseAllowance(address,uint256)":"infinite","excludeAddressFromFee(address,bool)":"23649","excludeAddressFromLimit(address,bool)":"22214","gameAddress()":"1159","getOwner()":"1239","getTotalBuyFee()":"3514","getTotalSellFee()":"3491","increaseAllowance(address,uint256)":"infinite","marketingAddress()":"1203","name()":"infinite","numTokensSellToAddToLiquidity()":"1161","owner()":"1115","poolAddress()":"1205","renounceOwnership()":"24250","sellFees()":"3566","setBlacklist(address,bool)":"23672","setFeeAddresses(address,address,address)":"infinite","setInitialAddresses(address)":"infinite","setMaxTxAmount(uint256)":"21213","setMaxWalletAmount(uint256)":"21215","setTradingEnable(bool)":"22067","setbuyFee(uint256,uint256,uint256,uint256)":"86424","setsellFee(uint256,uint256,uint256,uint256)":"86445","swapAndLiquifyEnabled()":"1124","symbol()":"infinite","totalSupply()":"1074","tradingEnabled()":"1146","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_burnFrom(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite","addLiquidity(uint256,uint256)":"infinite","swapAndLiquify(uint256)":"infinite","swapTokensForEth(uint256)":"infinite"}},"methodIdentifiers":{"PancakeSwapRouter()":"421ea58b","PancakeSwapV2Pair()":"c1258a40","_maxTxAmount()":"7d1db4a5","_maxWalletAmount()":"6c0a24eb","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","babyPoolAddress()":"f5034b0a","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","buyFees()":"e4748b9e","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","excludeAddressFromFee(address,bool)":"799bec12","excludeAddressFromLimit(address,bool)":"061dc8ef","gameAddress()":"a168d873","getOwner()":"893d20e8","getTotalBuyFee()":"1ebe8be8","getTotalSellFee()":"47cb8c04","increaseAllowance(address,uint256)":"39509351","marketingAddress()":"a5ece941","name()":"06fdde03","numTokensSellToAddToLiquidity()":"d12a7688","owner()":"8da5cb5b","poolAddress()":"1755ff21","renounceOwnership()":"715018a6","sellFees()":"e0f3ccf5","setBlacklist(address,bool)":"153b0d1e","setFeeAddresses(address,address,address)":"aa1ef598","setInitialAddresses(address)":"28ec13ee","setMaxTxAmount(uint256)":"ec28438a","setMaxWalletAmount(uint256)":"27a14fc2","setTradingEnable(bool)":"7439c236","setbuyFee(uint256,uint256,uint256,uint256)":"3e341212","setsellFee(uint256,uint256,uint256,uint256)":"c5820ad0","swapAndLiquifyEnabled()":"4a74bb02","symbol()":"95d89b41","totalSupply()":"18160ddd","tradingEnabled()":"4ada218b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExlcude\",\"type\":\"bool\"}],\"name\":\"ExcludeFromFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklist\",\"type\":\"bool\"}],\"name\":\"SetBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolfee\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BALLS.Fees\",\"name\":\"buyFees\",\"type\":\"tuple\"}],\"name\":\"SetBuyFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolfee\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BALLS.Fees\",\"name\":\"sellFees\",\"type\":\"tuple\"}],\"name\":\"SetSellFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PancakeSwapRouter\",\"outputs\":[{\"internalType\":\"contract IPancakeSwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PancakeSwapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"babyPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolfee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isExclude\",\"type\":\"bool\"}],\"name\":\"excludeAddressFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isExclude\",\"type\":\"bool\"}],\"name\":\"excludeAddressFromLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBuyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensSellToAddToLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gameWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolfee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlack\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gameAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RouterAddress\",\"type\":\"address\"}],\"name\":\"setInitialAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingEnabled\",\"type\":\"bool\"}],\"name\":\"setTradingEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gameWalletFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolfee\",\"type\":\"uint256\"}],\"name\":\"setbuyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gameWalletFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolfee\",\"type\":\"uint256\"}],\"name\":\"setsellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"BALLS\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":720,"contract":"contracts/happyShibEth.sol:BALLS","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1060,"contract":"contracts/happyShibEth.sol:BALLS","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":1066,"contract":"contracts/happyShibEth.sol:BALLS","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1068,"contract":"contracts/happyShibEth.sol:BALLS","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":1070,"contract":"contracts/happyShibEth.sol:BALLS","label":"_decimals","offset":0,"slot":"4","type":"t_uint8"},{"astId":1072,"contract":"contracts/happyShibEth.sol:BALLS","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":1074,"contract":"contracts/happyShibEth.sol:BALLS","label":"_name","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1479,"contract":"contracts/happyShibEth.sol:BALLS","label":"marketingAddress","offset":0,"slot":"7","type":"t_address"},{"astId":1481,"contract":"contracts/happyShibEth.sol:BALLS","label":"gameAddress","offset":0,"slot":"8","type":"t_address"},{"astId":1483,"contract":"contracts/happyShibEth.sol:BALLS","label":"poolAddress","offset":0,"slot":"9","type":"t_address"},{"astId":1485,"contract":"contracts/happyShibEth.sol:BALLS","label":"babyPoolAddress","offset":0,"slot":"10","type":"t_address"},{"astId":1487,"contract":"contracts/happyShibEth.sol:BALLS","label":"PancakeSwapRouter","offset":0,"slot":"11","type":"t_contract(IPancakeSwapRouter)691"},{"astId":1489,"contract":"contracts/happyShibEth.sol:BALLS","label":"PancakeSwapV2Pair","offset":0,"slot":"12","type":"t_address"},{"astId":1491,"contract":"contracts/happyShibEth.sol:BALLS","label":"inSwapAndLiquify","offset":20,"slot":"12","type":"t_bool"},{"astId":1506,"contract":"contracts/happyShibEth.sol:BALLS","label":"swapAndLiquifyEnabled","offset":21,"slot":"12","type":"t_bool"},{"astId":1509,"contract":"contracts/happyShibEth.sol:BALLS","label":"tradingEnabled","offset":22,"slot":"12","type":"t_bool"},{"astId":1511,"contract":"contracts/happyShibEth.sol:BALLS","label":"sellFees","offset":0,"slot":"13","type":"t_struct(Fees)1477_storage"},{"astId":1513,"contract":"contracts/happyShibEth.sol:BALLS","label":"buyFees","offset":0,"slot":"17","type":"t_struct(Fees)1477_storage"},{"astId":1517,"contract":"contracts/happyShibEth.sol:BALLS","label":"isExcludeFromFee","offset":0,"slot":"21","type":"t_mapping(t_address,t_bool)"},{"astId":1521,"contract":"contracts/happyShibEth.sol:BALLS","label":"isExcludeFromLimit","offset":0,"slot":"22","type":"t_mapping(t_address,t_bool)"},{"astId":1525,"contract":"contracts/happyShibEth.sol:BALLS","label":"blacklist","offset":0,"slot":"23","type":"t_mapping(t_address,t_bool)"},{"astId":1530,"contract":"contracts/happyShibEth.sol:BALLS","label":"_maxTxAmount","offset":0,"slot":"24","type":"t_uint256"},{"astId":1535,"contract":"contracts/happyShibEth.sol:BALLS","label":"_maxWalletAmount","offset":0,"slot":"25","type":"t_uint256"},{"astId":1540,"contract":"contracts/happyShibEth.sol:BALLS","label":"numTokensSellToAddToLiquidity","offset":0,"slot":"26","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IPancakeSwapRouter)691":{"encoding":"inplace","label":"contract IPancakeSwapRouter","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Fees)1477_storage":{"encoding":"inplace","label":"struct BALLS.Fees","members":[{"astId":1470,"contract":"contracts/happyShibEth.sol:BALLS","label":"marketing","offset":0,"slot":"0","type":"t_uint256"},{"astId":1472,"contract":"contracts/happyShibEth.sol:BALLS","label":"gameWallet","offset":0,"slot":"1","type":"t_uint256"},{"astId":1474,"contract":"contracts/happyShibEth.sol:BALLS","label":"liquidity","offset":0,"slot":"2","type":"t_uint256"},{"astId":1476,"contract":"contracts/happyShibEth.sol:BALLS","label":"poolfee","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IPancakeSwapFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"IPancakeSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IPancakeSwapPair":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"reserve0","type":"uint112"},{"internalType":"uint112","name":"reserve1","type":"uint112"},{"internalType":"uint32","name":"blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MINIMUM_LIQUIDITY()":"ba9a7a56","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address)":"89afcb44","decimals()":"313ce567","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"IPancakeSwapPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IPancakeSwapRouter":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"IPancakeSwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":720,"contract":"contracts/happyShibEth.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"SafeMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f4681fcb6add87ffeb998e65d84ea17e8fb108d9580cb1b726425ab2069dcb364736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CHAINID DUP2 0xFC 0xB6 0xAD 0xD8 PUSH32 0xFEB998E65D84EA17E8FB108D9580CB1B726425AB2069DCB364736F6C63430006 0xC STOP CALLER ","sourceMap":"12700:4646:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f4681fcb6add87ffeb998e65d84ea17e8fb108d9580cb1b726425ab2069dcb364736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CHAINID DUP2 0xFC 0xB6 0xAD 0xD8 PUSH32 0xFEB998E65D84EA17E8FB108D9580CB1B726425AB2069DCB364736F6C63430006 0xC STOP CALLER ","sourceMap":"12700:4646:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/happyShibEth.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/happyShibEth.sol\":{\"content\":\"/**\\r\\n\\r\\n /$$   /$$                                                /$$$$$$  /$$       /$$ /$$            \\r\\n| $$  | $$                                               /$$__  $$| $$      |__/| $$            \\r\\n| $$  | $$  /$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$      | $$  \\\\__/| $$$$$$$  /$$| $$$$$$$       \\r\\n| $$$$$$$$ |____  $$ /$$__  $$ /$$__  $$| $$  | $$      |  $$$$$$ | $$__  $$| $$| $$__  $$      \\r\\n| $$__  $$  /$$$$$$$| $$  \\\\ $$| $$  \\\\ $$| $$  | $$       \\\\____  $$| $$  \\\\ $$| $$| $$  \\\\ $$      \\r\\n| $$  | $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$       /$$  \\\\ $$| $$  | $$| $$| $$  | $$      \\r\\n| $$  | $$|  $$$$$$$| $$$$$$$/| $$$$$$$/|  $$$$$$$      |  $$$$$$/| $$  | $$| $$| $$$$$$$/      \\r\\n|__/  |__/ \\\\_______/| $$____/ | $$____/  \\\\____  $$       \\\\______/ |__/  |__/|__/|_______/       \\r\\n                    | $$      | $$       /$$  | $$                                              \\r\\n                    | $$      | $$      |  $$$$$$/                                              \\r\\n                    |__/      |__/       \\\\______/                                               \\r\\n\\r\\n\\r\\n\\r\\nWelcome to Happy Shib! The Happiest Shib on the Ethereum Network\\r\\n\\r\\nFind us @ https://t.me/happyshibeth\\r\\n\\r\\n*/\\r\\n\\r\\n//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ninterface IPancakeSwapFactory {\\r\\n        event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n        function feeTo() external view returns (address);\\r\\n        function feeToSetter() external view returns (address);\\r\\n\\r\\n        function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n        function allPairs(uint) external view returns (address pair);\\r\\n        function allPairsLength() external view returns (uint);\\r\\n\\r\\n        function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n        function setFeeTo(address) external;\\r\\n        function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapPair {\\r\\n        event Approval(address indexed owner, address indexed spender, uint value);\\r\\n        event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n        function name() external pure returns (string memory);\\r\\n        function symbol() external pure returns (string memory);\\r\\n        function decimals() external pure returns (uint8);\\r\\n        function totalSupply() external view returns (uint);\\r\\n        function balanceOf(address owner) external view returns (uint);\\r\\n        function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n        function approve(address spender, uint value) external returns (bool);\\r\\n        function transfer(address to, uint value) external returns (bool);\\r\\n        function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n        function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n        function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n        function nonces(address owner) external view returns (uint);\\r\\n\\r\\n        function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n        event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n        event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n        event Swap(\\r\\n                address indexed sender,\\r\\n                uint amount0In,\\r\\n                uint amount1In,\\r\\n                uint amount0Out,\\r\\n                uint amount1Out,\\r\\n                address indexed to\\r\\n        );\\r\\n        event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n        function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n        function factory() external view returns (address);\\r\\n        function token0() external view returns (address);\\r\\n        function token1() external view returns (address);\\r\\n        function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n        function price0CumulativeLast() external view returns (uint);\\r\\n        function price1CumulativeLast() external view returns (uint);\\r\\n        function kLast() external view returns (uint);\\r\\n\\r\\n        function mint(address to) external returns (uint liquidity);\\r\\n        function burn(address to) external returns (uint amount0, uint amount1);\\r\\n        function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n        function skim(address to) external;\\r\\n        function sync() external;\\r\\n\\r\\n        function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeSwapRouter{\\r\\n        function factory() external pure returns (address);\\r\\n        function WETH() external pure returns (address);\\r\\n\\r\\n        function addLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint amountADesired,\\r\\n                uint amountBDesired,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n        function addLiquidityETH(\\r\\n                address token,\\r\\n                uint amountTokenDesired,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n        function removeLiquidity(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETH(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function removeLiquidityWithPermit(\\r\\n                address tokenA,\\r\\n                address tokenB,\\r\\n                uint liquidity,\\r\\n                uint amountAMin,\\r\\n                uint amountBMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountA, uint amountB);\\r\\n        function removeLiquidityETHWithPermit(\\r\\n                address token,\\r\\n                uint liquidity,\\r\\n                uint amountTokenMin,\\r\\n                uint amountETHMin,\\r\\n                address to,\\r\\n                uint deadline,\\r\\n                bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountToken, uint amountETH);\\r\\n        function swapExactTokensForTokens(\\r\\n                uint amountIn,\\r\\n                uint amountOutMin,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapTokensForExactTokens(\\r\\n                uint amountOut,\\r\\n                uint amountInMax,\\r\\n                address[] calldata path,\\r\\n                address to,\\r\\n                uint deadline\\r\\n        ) external returns (uint[] memory amounts);\\r\\n        function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                returns (uint[] memory amounts);\\r\\n        function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n                external\\r\\n                payable\\r\\n                returns (uint[] memory amounts);\\r\\n\\r\\n        function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n        function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n        function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n        function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n        function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external returns (uint amountETH);\\r\\n        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n            address token,\\r\\n            uint liquidity,\\r\\n            uint amountTokenMin,\\r\\n            uint amountETHMin,\\r\\n            address to,\\r\\n            uint deadline,\\r\\n            bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n        ) external returns (uint amountETH);\\r\\n    \\r\\n        function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n        function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external payable;\\r\\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            uint amountIn,\\r\\n            uint amountOutMin,\\r\\n            address[] calldata path,\\r\\n            address to,\\r\\n            uint deadline\\r\\n        ) external;\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\r\\n    // an instance of this contract, which should be used via inheritance.\\r\\n    constructor () internal { }\\r\\n\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n    /* --------- Access Control --------- */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n    * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n    */\\r\\n    constructor () internal {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the address of the current owner.\\r\\n    */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Leaves the contract without owner. It will not be possible to call\\r\\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n    *\\r\\n    * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n    * thereby removing any functionality that is only available to the owner.\\r\\n    */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    * Can only be called by the current owner.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n    */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n    /* --------- safe math --------- */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n    * @dev Returns the addition of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `+` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Addition cannot overflow.\\r\\n    */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n    * overflow (when the result is negative).\\r\\n    *\\r\\n    * Counterpart to Solidity's `-` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Subtraction cannot overflow.\\r\\n    */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n    * overflow.\\r\\n    *\\r\\n    * Counterpart to Solidity's `*` operator.\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - Multiplication cannot overflow.\\r\\n    */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n        return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n    * division by zero. The result is rounded towards zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n    * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n    * Reverts with custom message when dividing by zero.\\r\\n    *\\r\\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n    * invalid opcode to revert (consuming all remaining gas).\\r\\n    *\\r\\n    * Requirements:\\r\\n    * - The divisor cannot be zero.\\r\\n    */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract BALLS is  Context, Ownable  {\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping (address => uint256) private _balances;\\r\\n\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint8 private _decimals;\\r\\n    string private _symbol;\\r\\n    string private _name;\\r\\n\\r\\n\\r\\n    function getOwner() external view returns (address) {\\r\\n        return owner();\\r\\n        \\r\\n    }\\r\\n\\r\\n    function decimals() external view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function name() external view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) external {\\r\\n        _burn(msg.sender,amount);\\r\\n    }\\r\\n\\r\\n    function _mint(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    function _burn(address account, uint256 amount) internal {\\r\\n        require(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n \\r\\n    function _burnFrom(address account, uint256 amount) internal {\\r\\n        _burn(account, amount);\\r\\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n    }\\r\\n\\r\\n    //////////////////////////////////////////////\\r\\n    /* ----------- special features ----------- */\\r\\n    //////////////////////////////////////////////\\r\\n\\r\\n    event ExcludeFromFee(address user, bool isExlcude);\\r\\n    event SetSellFee(Fees sellFees);\\r\\n    event SetBuyFee(Fees buyFees);\\r\\n    event SetBlackList(address user, bool isBlacklist);\\r\\n\\r\\n    struct Fees {\\r\\n        uint256 marketing;\\r\\n        uint256 gameWallet;\\r\\n        uint256 liquidity;\\r\\n        uint256 poolfee;\\r\\n    }\\r\\n\\r\\n    /* --------- special address info --------- */\\r\\n    address public marketingAddress;\\r\\n    address public gameAddress;\\r\\n    address public poolAddress;\\r\\n    address public babyPoolAddress;\\r\\n\\r\\n    /* --------- exchange info --------- */\\r\\n    IPancakeSwapRouter public PancakeSwapRouter;\\r\\n    address public PancakeSwapV2Pair;\\r\\n\\r\\n    bool inSwapAndLiquify;\\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n\\r\\n    bool public swapAndLiquifyEnabled = true;\\r\\n    bool public tradingEnabled = true;\\r\\n\\r\\n    /* --------- buyFees info --------- */\\r\\n    Fees public sellFees;\\r\\n    Fees public buyFees;\\r\\n\\r\\n    mapping(address=>bool) isExcludeFromFee;\\r\\n    mapping(address=>bool) isExcludeFromLimit;\\r\\n\\r\\n    mapping(address => bool) blacklist;\\r\\n\\r\\n    /* --------- max tx info --------- */\\r\\n    uint public _maxTxAmount = 1e6 * 1e18;\\r\\n    uint public _maxWalletAmount = 2e6 * 1e18;\\r\\n    uint public numTokensSellToAddToLiquidity = 1 * 1e18;\\r\\n\\r\\n    ////////////////////////////////////////////////\\r\\n    /* --------- General Implementation --------- */\\r\\n    ////////////////////////////////////////////////\\r\\n\\r\\n    constructor (address _RouterAddress) public {\\r\\n        _name = \\\"HAPPYSHIB\\\";\\r\\n        _symbol = \\\"HAPPYSHIB\\\";\\r\\n        _decimals = 18;\\r\\n        _totalSupply = 1e8*1e18; /// initial supply 100,000,000\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n        buyFees.marketing = 6;\\r\\n        buyFees.gameWallet = 0;\\r\\n        buyFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        sellFees.marketing = 8;\\r\\n        sellFees.gameWallet = 0;\\r\\n        sellFees.liquidity = 2;\\r\\n        buyFees.poolfee = 0;\\r\\n\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n        \\r\\n        // isExcludeFromFee[msg.sender] = true;\\r\\n        isExcludeFromLimit[msg.sender] = true;\\r\\n        isExcludeFromLimit[PancakeSwapV2Pair] = true;\\r\\n\\r\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n        emit SetBuyFee(buyFees);\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    /* --------- set token parameters--------- */\\r\\n\\r\\n    function setInitialAddresses(address _RouterAddress) external onlyOwner {\\r\\n        IPancakeSwapRouter _PancakeSwapRouter = IPancakeSwapRouter(_RouterAddress);\\r\\n        PancakeSwapRouter = _PancakeSwapRouter;\\r\\n        PancakeSwapV2Pair = IPancakeSwapFactory(_PancakeSwapRouter.factory()).createPair(address(this), _PancakeSwapRouter.WETH()); //MD vs USDT pair\\r\\n    }\\r\\n\\r\\n    function setFeeAddresses( address _marketingAddress, address _gameAddress, address _poolAddress) external onlyOwner {\\r\\n        marketingAddress = _marketingAddress;       \\r\\n        gameAddress = _gameAddress; \\r\\n        poolAddress = _poolAddress;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint maxTxAmount) external onlyOwner {\\r\\n        _maxTxAmount = maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setMaxWalletAmount(uint maxWalletAmount) external onlyOwner {\\r\\n        _maxWalletAmount = maxWalletAmount;\\r\\n    }\\r\\n    \\r\\n    function setbuyFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        buyFees.marketing = _marketingFee;\\r\\n        buyFees.gameWallet = _gameWalletFee;\\r\\n        buyFees.liquidity = _liquidityFee;\\r\\n        buyFees.poolfee = _poolfee;\\r\\n        emit SetBuyFee(buyFees);\\r\\n    }\\r\\n\\r\\n    function setsellFee(uint256 _marketingFee, uint256 _gameWalletFee, uint256 _liquidityFee, uint256 _poolfee) external onlyOwner {\\r\\n        sellFees.marketing = _marketingFee;\\r\\n        sellFees.gameWallet = _gameWalletFee;\\r\\n        sellFees.liquidity = _liquidityFee;\\r\\n        sellFees.poolfee = _poolfee;\\r\\n        emit SetSellFee(sellFees);\\r\\n    }\\r\\n\\r\\n    function setTradingEnable(bool _tradingEnabled) external onlyOwner {\\r\\n        tradingEnabled = _tradingEnabled;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address user, bool _isBlack) external onlyOwner {\\r\\n        blacklist[user] = _isBlack;\\r\\n        emit SetBlackList(user,_isBlack);\\r\\n    }\\r\\n\\r\\n    function getTotalSellFee() public view returns (uint) {\\r\\n        return sellFees.marketing + sellFees.gameWallet + sellFees.liquidity + sellFees.poolfee ;\\r\\n    }\\r\\n    \\r\\n    function getTotalBuyFee() public view returns (uint) {\\r\\n        return buyFees.marketing + buyFees.gameWallet + buyFees.liquidity + buyFees.poolfee ;\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from buyFees--------- */\\r\\n    function excludeAddressFromFee(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromFee[user] = _isExclude;\\r\\n        emit ExcludeFromFee(user,_isExclude);\\r\\n    }\\r\\n\\r\\n    /* --------- exclude address from Limit--------- */\\r\\n    function excludeAddressFromLimit(address user,bool _isExclude) external onlyOwner {\\r\\n        isExcludeFromLimit[user] = _isExclude;\\r\\n    }\\r\\n\\r\\n    /* --------- transfer --------- */\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\r\\n        require(!blacklist[sender]&&!blacklist[recipient],\\\"blacklist\\\");\\r\\n        // transfer \\r\\n        if((sender == PancakeSwapV2Pair || recipient == PancakeSwapV2Pair )&& !isExcludeFromFee[sender]){\\r\\n            require(_maxTxAmount>=amount,\\\"BEP20: transfer amount exceeds max transfer amount\\\");\\r\\n            require(tradingEnabled,\\\"trading is disabled\\\");\\r\\n            }\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n        uint recieveAmount = amount;\\r\\n\\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        \\r\\n        if(contractTokenBalance >= _maxTxAmount)\\r\\n        {\\r\\n            contractTokenBalance = _maxTxAmount;\\r\\n        }\\r\\n        \\r\\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\\r\\n\\r\\n        if (\\r\\n            overMinTokenBalance &&\\r\\n            !inSwapAndLiquify &&\\r\\n            sender != PancakeSwapV2Pair &&\\r\\n            swapAndLiquifyEnabled\\r\\n        ) {\\r\\n            contractTokenBalance = numTokensSellToAddToLiquidity;\\r\\n            //add liquidity\\r\\n            swapAndLiquify(contractTokenBalance);\\r\\n        }\\r\\n\\r\\n        if(!isExcludeFromFee[sender]) {\\r\\n\\r\\n            if(sender == PancakeSwapV2Pair){\\r\\n                // buy fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalBuyFee()).div(1000); \\r\\n                _balances[marketingAddress] += amount.mul(buyFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(buyFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(buyFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(buyFees.liquidity).div(1000);\\r\\n                \\r\\n                emit Transfer(sender, marketingAddress, amount.mul(buyFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(buyFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(buyFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(buyFees.liquidity).div(1000));\\r\\n            }\\r\\n            else if(recipient == PancakeSwapV2Pair){\\r\\n                // sell fee\\r\\n                recieveAmount = recieveAmount.mul(1000-getTotalSellFee()).div(1000);    \\r\\n                _balances[marketingAddress] += amount.mul(sellFees.marketing).div(1000);\\r\\n                _balances[gameAddress] += amount.mul(sellFees.gameWallet).div(1000);\\r\\n                _balances[poolAddress] += amount.mul(sellFees.poolfee).div(1000);\\r\\n                _balances[address(this)] += amount.mul(sellFees.liquidity).div(1000);\\r\\n\\r\\n                emit Transfer(sender, marketingAddress, amount.mul(sellFees.marketing).div(1000));\\r\\n                emit Transfer(sender, gameAddress, amount.mul(sellFees.gameWallet).div(1000));\\r\\n                emit Transfer(sender, poolAddress, amount.mul(sellFees.poolfee).div(1000));\\r\\n                emit Transfer(sender, address(this), amount.mul(sellFees.liquidity).div(1000));\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\r\\n        if(!isExcludeFromLimit[recipient])\\r\\n            require(_balances[recipient]<_maxWalletAmount,\\\"already balance exist max amount\\\");\\r\\n            \\r\\n        emit Transfer(sender, recipient, recieveAmount);\\r\\n    }\\r\\n\\r\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\r\\n        // split the contract balance into halves\\r\\n        uint256 half = contractTokenBalance.div(2);\\r\\n        uint256 otherHalf = contractTokenBalance.sub(half);\\r\\n\\r\\n        uint256 initialBalance = address(this).balance;\\r\\n\\r\\n        swapTokensForEth(half); \\r\\n\\r\\n        uint256 newBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        addLiquidity(otherHalf, newBalance);\\r\\n        \\r\\n        emit SwapAndLiquify(half, newBalance, otherHalf);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = PancakeSwapRouter.WETH();\\r\\n\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, \\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        _approve(address(this), address(PancakeSwapRouter), tokenAmount);\\r\\n\\r\\n        PancakeSwapRouter.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe5f81798d21c2981f3da3c4a95c29cc49eb551825aa9c8ba41486bc1d71746da\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}