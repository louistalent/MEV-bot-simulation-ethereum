openapi: 3.0.3
info:
  title: MEV bot
  description: MEV bot API declaration
  termsOfService: http://swagger.io/terms/
  contact:
    email: topdeveloper0123@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: /api/v1
 
tags:
  - name: MEV bot
    description: MEV bot APIs
 
  - name: user
    description: User APIs
 
paths:
  /hello:
    get:
      description: Returns 'Hello <name>/stranger!!!' to the caller
      tags: 
        - greeting
      operationId: hello
      parameters:
      - name: name
        required: false
        in: query
        description: The name of a caller
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'

  /goodbye:
    get:
      description: Returns 'Goodbye \<name\>!!!' to the authenticated caller
      tags: 
        - greeting
      operationId: goodbye
      security: 
        - bearerAuth: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
  /login:
    post:
      summary: Login
      tags:
        - user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Success
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              required: true
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - userId
                properties:
                  userId:
                    type: string
                  token:
                    type: string
                    format: '^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$'
        404:
          description: Invalid Login/Password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
 
  /user:
    post:
      summary: Create User
      tags:
        - user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - userId
                properties:
                  userId:
                    type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HelloResponse:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        message:
          type: string

    FailResponse:
      type: object
      additionalProperties: false
      required:
        - success
        - error
      properties:
        success:
          type: boolean
        error:
          type: string
